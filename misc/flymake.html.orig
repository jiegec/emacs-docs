<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- This manual is for GNU Flymake (version 0.3, April 2004),
which is a universal on-the-fly syntax checker for GNU Emacs.

Copyright (C) 2004-2017 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being "A GNU Manual,"
and with the Back-Cover Texts as in (a) below.  A copy of the license
is included in the section entitled "GNU Free Documentation License".

(a) The FSF's Back-Cover Text is: "You have the freedom to copy and
modify this GNU manual." -->
<!-- Created by GNU Texinfo 6.5, http://www.gnu.org/software/texinfo/ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>GNU Flymake 0.3</title>

<meta name="description" content="GNU Flymake 0.3">
<meta name="keywords" content="GNU Flymake 0.3">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<link href="#Top" rel="start" title="Top">
<link href="#Index" rel="index" title="Index">
<link href="#SEC_Contents" rel="contents" title="Table of Contents">
<link href="dir.html#Top" rel="up" title="(dir)">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.indentedblock {margin-right: 0em}
blockquote.smallindentedblock {margin-right: 0em; font-size: smaller}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smalllisp {margin-left: 3.2em}
kbd {font-style: oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nolinebreak {white-space: nowrap}
span.roman {font-family: initial; font-weight: normal}
span.sansserif {font-family: sans-serif; font-weight: normal}
ul.no-bullet {list-style: none}
-->
</style>


</head>

<body lang="en">
<h1 class="settitle" align="center">GNU Flymake 0.3</h1>




<a name="SEC_Contents"></a>
<h2 class="contents-heading">Table of Contents</h2>

<div class="contents">

<ul class="no-bullet">
  <li><a name="toc-Using-Flymake-1" href="#Using-Flymake">1 Using Flymake</a>
  <ul class="no-bullet">
    <li><a name="toc-Syntax-check-statuses-1" href="#Syntax-check-statuses">1.1 Syntax check statuses</a></li>
    <li><a name="toc-Backend-exceptions-1" href="#Backend-exceptions">1.2 Backend exceptions</a></li>
    <li><a name="toc-Customizable-variables-1" href="#Customizable-variables">1.3 Customizable variables</a></li>
  </ul></li>
  <li><a name="toc-Extending-Flymake-1" href="#Extending-Flymake">2 Extending Flymake</a>
  <ul class="no-bullet">
    <li><a name="toc-Customizing-Flymake-error-types" href="#Flymake-error-types">2.1 Customizing Flymake error types</a></li>
    <li><a name="toc-Backend-functions-1" href="#Backend-functions">2.2 Backend functions</a>
    <ul class="no-bullet">
      <li><a name="toc-Flymake-utility-functions-1" href="#Flymake-utility-functions">2.2.1 Flymake utility functions</a></li>
      <li><a name="toc-An-annotated-example-backend-1" href="#An-annotated-example-backend">2.2.2 An annotated example backend</a></li>
    </ul></li>
  </ul></li>
  <li><a name="toc-The-legacy-_0060_0060Proc_0027_0027-backend" href="#The-legacy-Proc-backend">3 The legacy &ldquo;Proc&rdquo; backend</a>
  <ul class="no-bullet">
    <li><a name="toc-Customization-variables-for-the-Proc-backend" href="#Proc-customization-variables">3.1 Customization variables for the Proc backend</a></li>
    <li><a name="toc-Adding-support-for-a-new-syntax-check-tool-1" href="#Adding-support-for-a-new-syntax-check-tool">3.2 Adding support for a new syntax check tool</a>
    <ul class="no-bullet">
      <li><a name="toc-Example_002d_002d_002dConfiguring-a-tool-called-directly-1" href="#Example_002d_002d_002dConfiguring-a-tool-called-directly">3.2.1 Example&mdash;Configuring a tool called directly</a></li>
      <li><a name="toc-Example_002d_002d_002dConfiguring-a-tool-called-via-make-1" href="#Example_002d_002d_002dConfiguring-a-tool-called-via-make">3.2.2 Example&mdash;Configuring a tool called via make</a></li>
    </ul></li>
    <li><a name="toc-Implementation-overview-1" href="#Implementation-overview">3.3 Implementation overview</a></li>
    <li><a name="toc-Making-a-temporary-copy-1" href="#Making-a-temporary-copy">3.4 Making a temporary copy</a></li>
    <li><a name="toc-Locating-a-master-file-1" href="#Locating-a-master-file">3.5 Locating a master file</a></li>
    <li><a name="toc-Getting-the-include-directories-1" href="#Getting-the-include-directories">3.6 Getting the include directories</a></li>
    <li><a name="toc-Locating-the-buildfile-1" href="#Locating-the-buildfile">3.7 Locating the buildfile</a></li>
    <li><a name="toc-Starting-the-syntax-check-process-1" href="#Starting-the-syntax-check-process">3.8 Starting the syntax check process</a></li>
    <li><a name="toc-Parsing-the-output-1" href="#Parsing-the-output">3.9 Parsing the output</a></li>
    <li><a name="toc-Interaction-with-other-modes-1" href="#Interaction-with-other-modes">3.10 Interaction with other modes</a></li>
  </ul></li>
  <li><a name="toc-GNU-Free-Documentation-License-1" href="#GNU-Free-Documentation-License">Appendix A GNU Free Documentation License</a></li>
  <li><a name="toc-Index-1" href="#Index">Index</a></li>
</ul>
</div>


<a name="Top"></a>
<div class="header">
<p>
Next: <a href="#Using-Flymake" accesskey="n" rel="next">Using Flymake</a>, Up: <a href="dir.html#Top" accesskey="u" rel="up">(dir)</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="GNU-Flymake"></a>
<h1 class="top">GNU Flymake</h1>
<p>This manual is for GNU Flymake (version 0.3, April 2004),
which is a universal on-the-fly syntax checker for GNU Emacs.
</p>
<p>Copyright &copy; 2004&ndash;2017 Free Software Foundation, Inc.
</p>
<blockquote>
<p>Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being &ldquo;A GNU Manual,&rdquo;
and with the Back-Cover Texts as in (a) below.  A copy of the license
is included in the section entitled &ldquo;GNU Free Documentation License&rdquo;.
</p>
<p>(a) The FSF&rsquo;s Back-Cover Text is: &ldquo;You have the freedom to copy and
modify this GNU manual.&rdquo;
</p></blockquote>


<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Using-Flymake" accesskey="1">Using Flymake</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Extending-Flymake" accesskey="2">Extending Flymake</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#The-legacy-Proc-backend" accesskey="3">The legacy Proc backend</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#GNU-Free-Documentation-License" accesskey="4">GNU Free Documentation License</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Index" accesskey="5">Index</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="Using-Flymake"></a>
<div class="header">
<p>
Next: <a href="#Extending-Flymake" accesskey="n" rel="next">Extending Flymake</a>, Previous: <a href="#Top" accesskey="p" rel="prev">Top</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Using-Flymake-1"></a>
<h2 class="chapter">1 Using Flymake</h2>
<a name="index-overview-of-flymake"></a>
<a name="index-using-flymake"></a>

<p>Flymake is a universal on-the-fly buffer checker implemented as an
Emacs minor mode.  To use Flymake, you must first activate
<code>flymake-mode</code> by using the command <kbd>flymake-mode</kbd>.
</p>
<p>When enabled, Flymake collects information about problems in the
buffer, called <em>diagnostics</em>, from one or more different sources,
or <em>backends</em>, and then visually annotates the buffer by
highlighting problematic buffer regions with a special face.
</p>
<p>It also displays an overall buffer status in the mode line containing
totals for different types of diagnostics.
</p>
<p>Syntax check is done &ldquo;on-the-fly&rdquo;.  It is started whenever
</p>
<ul>
<li> <code>flymake-mode</code> is started, unless
<code>flymake-start-on-flymake-mode</code> is nil;

</li><li> a newline character is added to the buffer, unless
<code>flymake-start-syntax-check-on-newline</code> is nil;

</li><li> some changes were made to the buffer more than <code>0.5</code> seconds ago
(the delay is configurable in <code>flymake-no-changes-timeout</code>).
</li></ul>

<p>Syntax check can also be started manually by typing the <kbd>M-x
flymake-start <span class="key">RET</span></kbd> command.
</p>
<p><code>flymake-goto-next-error</code> and <code>flymake-goto-prev-error</code> are
commands that allow easy navigation to the next/previous erroneous
line, respectively.  If might be a good idea to map them to <kbd>M-n</kbd>
and <kbd>M-p</kbd> in <code>flymake-mode</code>, by adding to your init file:
</p>
<div class="lisp">
<pre class="lisp">(define-key flymake-mode-map (kbd &quot;M-n&quot;) 'flymake-goto-next-error)
(define-key flymake-mode-map (kbd &quot;M-p&quot;) 'flymake-goto-prev-error)
</pre></div>

<p>Flymake is a universal syntax checker in the sense that it&rsquo;s easily
extended to support new backends (see <a href="#Extending-Flymake">Extending Flymake</a>).
</p>
<p>Historically, Flymake used to accept diagnostics from a single
backend, albeit a reasonably flexible one.
</p>
<p>This backend isn&rsquo;t (yet) obsolete, and so is still available as a
fallback and active by default (see <a href="#The-legacy-Proc-backend">The legacy Proc backend</a>).  It works by
selecting a syntax check tool from a preconfigured list (compiler for
C<tt>++</tt> files, <code>perl</code> for Perl files, etc.), and executing it in the
background, passing it a temporary file which is a copy of the current
buffer, and parsing the output for known error/warning message
patterns.
</p>
<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Syntax-check-statuses" accesskey="1">Syntax check statuses</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Backend-exceptions" accesskey="2">Backend exceptions</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Customizable-variables" accesskey="3">Customizable variables</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="Syntax-check-statuses"></a>
<div class="header">
<p>
Next: <a href="#Backend-exceptions" accesskey="n" rel="next">Backend exceptions</a>, Up: <a href="#Using-Flymake" accesskey="u" rel="up">Using Flymake</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Syntax-check-statuses-1"></a>
<h3 class="section">1.1 Syntax check statuses</h3>
<a name="index-Syntax-check-statuses"></a>

<p>When enabled, Flymake displays its status in the mode line, which
provides a visual summary of diagnostic collection.  It may also hint
at certain exceptional situations encountered when communicating with
backends.
</p>
<p>The following statuses are defined:
</p>
<table>
<tr><td width="25%">[<var>nerrors</var> <var>nwarnings</var> ...]</td><td width="75%">Normal operation. <var>nerrors</var> and <var>nwarnings</var> are, respectively,
the total number of errors and warnings found during the last buffer
check, for all backends. They may be followed by other totals for
other types of diagnostics (see <a href="#Flymake-error-types">Flymake error types</a>).</td></tr>
<tr><td width="25%"><code>Wait</code></td><td width="75%">Some Flymake backends haven&rsquo;t reported since the last time they
where questioned.  It is reasonable to assume that this is a temporary
delay and Flymake will resume normal operation soon.</td></tr>
<tr><td width="25%"><code>!</code></td><td width="75%">All the configured Flymake backends have disabled themselves: Flymake
cannot annotate the buffer and action from the user is needed to
investigate and remedy the situation (see <a href="#Backend-exceptions">Backend exceptions</a>).</td></tr>
<tr><td width="25%"><code>?</code></td><td width="75%">There are no applicable Flymake backends for this buffer, thus Flymake
cannot annotate it.  To fix this, a user may look to extending Flymake
and add a new backend (see <a href="#Extending-Flymake">Extending Flymake</a>).</td></tr>
</table>

<hr>
<a name="Backend-exceptions"></a>
<div class="header">
<p>
Next: <a href="#Customizable-variables" accesskey="n" rel="next">Customizable variables</a>, Previous: <a href="#Syntax-check-statuses" accesskey="p" rel="prev">Syntax check statuses</a>, Up: <a href="#Using-Flymake" accesskey="u" rel="up">Using Flymake</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Backend-exceptions-1"></a>
<h3 class="section">1.2 Backend exceptions</h3>
<a name="index-backend-exceptions"></a>

<a name="index-disabled-backends"></a>
<a name="index-backends_002c-disabled"></a>
<p>Some backends may take longer than others to respond or complete, and
some may decide to <em>disable</em> themselves if they are not suitable
for the current buffer or encounter some unavoidable problem.  A
disabled backend is not tried again for future checks of the current
buffer.
</p>
<a name="index-flymake_002dreporting_002dbackends"></a>
<a name="index-flymake_002drunning_002dbackends"></a>
<a name="index-flymake_002ddisabled_002dbackends"></a>
<p>The commands <code>flymake-reporting-backends</code>,
<code>flymake-running-backends</code> and <code>flymake-disabled-backends</code>
show the backends currently used and those which are disabled.
</p>
<a name="index-reset-disabled-backends"></a>
<p>Toggling <code>flymake-mode</code> off and on again, or invoking
<code>flymake-start</code> with a prefix argument is one way to reset the
disabled backend list, so that they will be tried again in the next check.
</p>
<a name="index-logging"></a>
<a name="index-flymake-logging"></a>
<p>Flymake also uses a simple logging facility for indicating important
points in the control flow.  The logging facility sends logging
messages to the <samp>*Flymake log*</samp> buffer.  The information logged
can be used for resolving various problems related to Flymake.  For
convenience, a shortcut to this buffer can be found in Flymake&rsquo;s menu,
accessible from the top menu bar or just left of the status indicator.
</p>
<a name="index-warning_002dminimum_002dlog_002dlevel"></a>
<a name="index-warning_002dminimum_002dlevel"></a>
<p>Logging output is controlled by the Emacs <code>warning-minimum-log-level</code>
and <code>warning-minimum-level</code> variables.
</p>
<hr>
<a name="Customizable-variables"></a>
<div class="header">
<p>
Previous: <a href="#Backend-exceptions" accesskey="p" rel="prev">Backend exceptions</a>, Up: <a href="#Using-Flymake" accesskey="u" rel="up">Using Flymake</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Customizable-variables-1"></a>
<h3 class="section">1.3 Customizable variables</h3>
<a name="index-customizable-variables"></a>
<a name="index-variables-for-customizing-flymake"></a>

<p>This section summarizes customization variables used for the
configuration of the Flymake user interface.
</p>
<dl compact="compact">
<dt><code>flymake-no-changes-timeout</code>
<a name="index-flymake_002dno_002dchanges_002dtimeout"></a>
</dt>
<dd><p>If any changes are made to the buffer, syntax check is automatically
started after this many seconds, unless the user makes another change,
which resets the timer.
</p>
</dd>
<dt><code>flymake-start-syntax-check-on-newline</code>
<a name="index-flymake_002dstart_002dsyntax_002dcheck_002don_002dnewline"></a>
</dt>
<dd><p>A boolean flag indicating whether to start syntax check immediately
after a newline character is inserted into the buffer.
</p>
</dd>
<dt><code>flymake-start-on-flymake-mode</code>
<a name="index-flymake_002dstart_002don_002dflymake_002dmode"></a>
</dt>
<dd><p>A boolean flag indicating whether to start syntax check immediately
after enabling <code>flymake-mode</code>.
</p>
</dd>
<dt><code>flymake-error</code>
<a name="index-flymake_002derror"></a>
</dt>
<dd><p>A custom face for highlighting regions for which an error has been
reported.
</p>
</dd>
<dt><code>flymake-warning</code>
<a name="index-flymake_002dwarning"></a>
</dt>
<dd><p>A custom face for highlighting regions for which a warning has been
reported.
</p>
</dd>
<dt><code>flymake-note</code>
<a name="index-flymake_002dnote"></a>
</dt>
<dd><p>A custom face for highlighting regions for which a note has been
reported.
</p>
</dd>
<dt><code>flymake-error-bitmap</code>
<a name="index-flymake_002derror_002dbitmap"></a>
</dt>
<dd><p>A bitmap used in the fringe to mark lines for which an error has
been reported.
</p>
</dd>
<dt><code>flymake-warning-bitmap</code>
<a name="index-flymake_002dwarning_002dbitmap"></a>
</dt>
<dd><p>A bitmap used in the fringe to mark lines for which a warning has
been reported.
</p>
</dd>
<dt><code>flymake-fringe-indicator-position</code>
<a name="index-flymake_002dfringe_002dindicator_002dposition"></a>
</dt>
<dd><p>Which fringe (if any) should show the warning/error bitmaps.
</p>
</dd>
<dt><code>flymake-wrap-around</code>
<a name="index-flymake_002dwrap_002daround"></a>
</dt>
<dd><p>If non-nil, moving to errors with <code>flymake-goto-next-error</code> and
<code>flymake-goto-prev-error</code> wraps around buffer boundaries.
</p></dd>
</dl>

<hr>
<a name="Extending-Flymake"></a>
<div class="header">
<p>
Next: <a href="#The-legacy-Proc-backend" accesskey="n" rel="next">The legacy Proc backend</a>, Previous: <a href="#Using-Flymake" accesskey="p" rel="prev">Using Flymake</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Extending-Flymake-1"></a>
<h2 class="chapter">2 Extending Flymake</h2>
<a name="index-extending-flymake"></a>

<p>Flymake can primarily be extended in one of two ways:
</p>
<ol>
<li> By changing the look and feel of the annotations produced by the
different backends.

</li><li> By adding a new buffer-checking backend.
</li></ol>

<p>The following sections discuss each approach in detail.
</p>
<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Flymake-error-types" accesskey="1">Flymake error types</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Backend-functions" accesskey="2">Backend functions</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="Flymake-error-types"></a>
<div class="header">
<p>
Next: <a href="#Backend-functions" accesskey="n" rel="next">Backend functions</a>, Up: <a href="#Extending-Flymake" accesskey="u" rel="up">Extending Flymake</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Customizing-Flymake-error-types"></a>
<h3 class="section">2.1 Customizing Flymake error types</h3>
<a name="index-customizing-error-types"></a>
<a name="index-error-types_002c-customization"></a>

<a name="index-flymake_002ddiagnostic_002dtypes_002dalist"></a>
<p>The variable <code>flymake-diagnostic-types-alist</code> is looked up by
Flymake every time an annotation for a diagnostic is created in the
buffer.  Specifically, this variable holds a table of correspondence
between symbols designating diagnostic types and an additional
sub-table of properties pertaining to each diagnostic type.
</p>
<p>Both tables are laid out in association list (see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Association-Lists">Association
Lists</a> in <cite>The Emacs Lisp Reference Manual</cite>) format, and thus can
be conveniently accessed with the functions of the <code>assoc</code>
family.
</p>
<p>You can use any symbol-value association in the properties sub-table,
but some symbols have special meaning as to where and how Flymake
presents the diagnostic:
</p>
<ul>
<li> <a name="index-bitmap-of-diagnostic"></a>
<code>bitmap</code>, an image displayed in the fringe according to
<code>flymake-fringe-indicator-position</code>.  The value actually follows
the syntax of <code>flymake-error-bitmap</code> (see <a href="#Customizable-variables">Customizable variables</a>).  It is overridden by any <code>before-string</code> overlay
property.

</li><li> <a name="index-severity-of-diagnostic"></a>
<code>severity</code> is a non-negative integer specifying the diagnostic&rsquo;s
severity.  The higher the value, the more serious is the error.  If
the overlay property <code>priority</code> is not specified, <code>severity</code>
is used to set it and help sort overlapping overlays.

</li><li> Every property pertaining to overlays (see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Overlay-Properties">Overlay Properties</a> in <cite>The Emacs Lisp Reference Manual</cite>), except <code>category</code> and
<code>evaporate</code>.  These properties are used to affect the appearance
of Flymake annotations.

<p>As an example, here&rsquo;s how to make errors (diagnostics of the type
<code>:error</code>) stand out even more prominently in the buffer, by
raising the characters using a <code>display</code> overlay property.
</p>
<div class="example">
<pre class="example">(push '(display . (raise 1.2))
      (cdr (assoc :error flymake-diagnostic-types-alist)))
</pre></div>

</li><li> <a name="index-flymake_002dcategory"></a>
<code>flymake-category</code> is a symbol whose property list is considered
the default for missing values of any other properties.
</li></ul>

<a name="index-predefined-diagnostic-types"></a>
<a name="index-flymake_002derror-1"></a>
<a name="index-flymake_002dwarning-1"></a>
<a name="index-flymake_002dnote-1"></a>
<p>Three default diagnostic types, <code>:error</code>, <code>:warning</code> and
<code>:note</code> are predefined in
<code>flymake-diagnostic-types-alist</code>.  By default each lists a single
<code>flymake-category</code> property whose value is, respectively, the
symbols <code>flymake-error</code>, <code>flymake-warning</code> and
<code>flymake-note</code>.
</p>
<p>These category symbols&rsquo; plists is where the values of customizable
variables and faces such as <code>flymake-error-bitmap</code> are found.
Thus, if you change their plists, Flymake may stop honoring these
user customizations.
</p>
<p>The <code>flymake-category</code> special property is also especially useful
for backends which create diagnostics objects with non-default
types that differ from an existing type by only a few properties
(see <a href="#Flymake-utility-functions">Flymake utility functions</a>).
</p>
<p>As an example, consider configuring a new diagnostic type
<code>:low-priority-note</code> that behaves much like the <code>:note</code>
priority but without an overlay face.
</p>
<div class="example">
<pre class="example">(add-to-list
 'flymake-diagnostic-types-alist
 `(:low-priority-note . ((face . nil)
                         (flymake-category . flymake-note))))
</pre></div>

<a name="index-flymake_002ddiagnostics-1"></a>
<a name="index-flymake_002ddiagnostic_002dbackend"></a>
<a name="index-flymake_002ddiagnostic_002dbuffer"></a>
<a name="index-flymake_002ddiagnostic_002dtext"></a>
<a name="index-flymake_002ddiagnostic_002dbeg"></a>
<a name="index-flymake_002ddiagnostic_002dend"></a>
<p>As you might have guessed, Flymake&rsquo;s annotations are implemented as
overlays (see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Overlays">Overlays</a> in <cite>The Emacs Lisp Reference Manual</cite>).
Along with the properties that you specify for the specific type of
diagnostic, Flymake adds the property <code>flymake-diagnostic</code> to
these overlays, and sets it to the object that the backend created
with <code>flymake-make-diagnostic</code>.
</p>
<p>Since overlays also support arbitrary keymaps, you can use this along
with the functions <code>flymake-diagnostics</code> and
<code>flymake-diagnostic-text</code> (see <a href="#Flymake-utility-functions">Flymake utility functions</a>) to
create interactive annotations, such as in the following example of
binding a <code>mouse-3</code> event (middle mouse button click) to an
Internet search for the text of a <code>:warning</code> or <code>:error</code>.
</p>
<div class="example">
<pre class="example">(defun my-search-for-message (event)
  (interactive &quot;e&quot;)
  (let* ((diags (flymake-diagnostics (posn-point (event-start event))))
         (topmost-diag (car diags)))
    (eww-browse-url
       (concat
        &quot;https://duckduckgo.com/?q=&quot;
        (replace-regexp-in-string &quot; &quot;
                                  &quot;+&quot;
                                  (flymake-diagnostic-text topmost-diag)))
       t)))

(dolist (type '(:warning :error))
  (let ((a (assoc type flymake-diagnostic-types-alist)))
    (setf (cdr a)
          (append `((mouse-face . highlight)
                    (keymap . ,(let ((map (make-sparse-keymap)))
                                 (define-key map [mouse-2]
                                   'my-search-for-message)
                                 map)))
                  (cdr a)))))
</pre></div>

<hr>
<a name="Backend-functions"></a>
<div class="header">
<p>
Previous: <a href="#Flymake-error-types" accesskey="p" rel="prev">Flymake error types</a>, Up: <a href="#Extending-Flymake" accesskey="u" rel="up">Extending Flymake</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Backend-functions-1"></a>
<h3 class="section">2.2 Backend functions</h3>
<a name="index-backend-functions"></a>

<a name="index-flymake_002ddiagnostic_002dfunctions"></a>
<p>Flymake backends are Lisp functions placed in the special hook
<code>flymake-diagnostic-functions</code>.
</p>
<p>A backend&rsquo;s responsibility is to diagnose the contents of a buffer for
problems, registering the problem&rsquo;s positions, type, and summary
description.  This information is collected in the form of diagnostic
objects created by the function <code>flymake-make-diagnostic</code>
(see <a href="#Flymake-utility-functions">Flymake utility functions</a>), and
then handed over to Flymake, which proceeds to annotate the
buffer.
</p>
<p>A request for a buffer check, and the subsequent delivery of
diagnostics, are two key events of the interaction between Flymake
and backend.  Each such event corresponds to a well-defined function
calling convention: one for calls made by Flymake into the backend via
the backend function, the other in the reverse direction via a
callback.  To be usable, backends must adhere to both.
</p>
<p>Backend functions must accept an arbitrary number of arguments:
</p>
<ul>
<li> the first argument is always <var>report-fn</var>, a callback function
detailed below;

</li><li> the remaining arguments are keyword-value pairs of the
form <code>(<var>:key</var>&nbsp;<var>value</var>&nbsp;<var>:key2</var>&nbsp;<var>value2</var>...)</code><!-- /@w -->.  Currently,
Flymake provides no such arguments, but backend functions must be
prepared to accept (and possibly ignore) any number of them.
</li></ul>

<p>Whenever Flymake or the user decide to re-check the buffer, backend
functions are called as detailed above, and are expected to initiate
this check, but aren&rsquo;t in any way required to complete it before
exiting: if the computation involved is expensive, as
is often the case with large buffers, that slower task should be
scheduled for the future using asynchronous sub-processes
(see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Asynchronous-Processes">Asynchronous Processes</a> in <cite>The Emacs Lisp reference
manual</cite>) or other asynchronous mechanisms.
</p>
<p>In any case, backend functions are expected to return quickly or
signal an error, in which case the backend is disabled
(see <a href="#Backend-exceptions">Backend exceptions</a>).
</p>
<p>If the function returns, Flymake considers the backend to be
<em>running</em>.  If it has not done so already, the backend is expected
to call the function <var>report-fn</var> passed to it, at which point
Flymake considers the backend to be <em>reporting</em>.  Backends call
<var>report-fn</var> by passing it a single argument <var>report-action</var>
followed by an optional list of keyword-value pairs of the form
<code>(<var><span class="nolinebreak">:report-key</span></var>&nbsp;<var>value</var>&nbsp;<var><span class="nolinebreak">:report-key2</span></var>&nbsp;<var>value2</var>...)</code><!-- /@w -->.
</p>
<p>Currently accepted values for <var>report-action</var> are:
</p>
<ul>
<li> A (possibly empty) list of diagnostic objects created by
<code>flymake-make-diagnostic</code>, causing Flymake to annotate the
buffer with this information.

<p>A backend may call <var>report-fn</var> repeatedly in this manner, but only
until Flymake considers that the most recently requested buffer check
is now obsolete, because, say, buffer contents have changed in the
meantime.  The backend is only given notice of this via a renewed call
to the backend function.  Thus, to prevent making obsolete reports and
wasting resources, backend functions should first cancel any ongoing
processing from previous calls.
</p>
</li><li> The symbol <code>:panic</code>, signaling that the backend has encountered
an exceptional situation and should be disabled.
</li></ul>

<p>Currently accepted <var>report-key</var> arguments are:
</p>
<ul>
<li> <code>:explanation</code>, whose value should give user-readable
details of the situation encountered, if any.

</li><li> <code>:force</code>, whose value should be a boolean suggesting
that Flymake consider the report even if it was somehow
unexpected.
</li></ul>

<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Flymake-utility-functions" accesskey="1">Flymake utility functions</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#An-annotated-example-backend" accesskey="2">An annotated example backend</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="Flymake-utility-functions"></a>
<div class="header">
<p>
Next: <a href="#An-annotated-example-backend" accesskey="n" rel="next">An annotated example backend</a>, Up: <a href="#Backend-functions" accesskey="u" rel="up">Backend functions</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Flymake-utility-functions-1"></a>
<h4 class="subsection">2.2.1 Flymake utility functions</h4>
<a name="index-utility-functions"></a>

<a name="index-create-diagnostic-object"></a>
<p>Before delivering them to Flymake, backends create diagnostic objects
by calling the function <code>flymake-make-diagnostic</code>.
</p>
<dl>
<dt><a name="index-flymake_002dmake_002ddiagnostic"></a>Function: <strong>flymake-make-diagnostic</strong> <em>buffer beg end type text</em></dt>
<dd><p>Make a Flymake diagnostic for <var>buffer</var>&rsquo;s region from <var>beg</var> to
<var>end</var>.  <var>type</var> is a key to
<code>flymake-diagnostic-types-alist</code> and <var>text</var> is a description
of the problem detected in this region.
</p></dd></dl>

<a name="index-access-diagnostic-object"></a>
<p>These objects&rsquo; properties can be accessed with the functions
<code>flymake-diagnostic-backend</code>, <code>flymake-diagnostic-buffer</code>,
<code>flymake-diagnostic-text</code>, <code>flymake-diagnostic-beg</code>,
<code>flymake-diagnostic-end</code> and <code>flymake-diagnostic-type</code>.
</p>
<p>Additionally, the function <code>flymake-diagnostics</code> will collect
such objects in the region you specify.
</p>
<a name="index-collect-diagnostic-objects"></a>
<dl>
<dt><a name="index-flymake_002ddiagnostics"></a>Function: <strong>flymake-diagnostics</strong> <em>beg end</em></dt>
<dd><p>Get a list of Flymake diagnostics in the region determined by
<var>beg</var> and <var>end</var>.  If neither <var>beg</var> or <var>end</var> is
supplied, use the whole buffer, otherwise if <var>beg</var> is
non-<code>nil</code> and <var>end</var> is <code>nil</code>, consider only diagnostics
at <var>beg</var>.
</p></dd></dl>

<a name="index-buffer-position-from-line-and-column-number"></a>
<p>It is often the case with external syntax tools that a diagnostic&rsquo;s
position is reported in terms of a line number, and sometimes a column
number.  To convert this information into a buffer position, backends
can use the following function:
</p>
<dl>
<dt><a name="index-flymake_002ddiag_002dregion"></a>Function: <strong>flymake-diag-region</strong> <em>buffer line &amp;optional col</em></dt>
<dd><p>Compute <var>buffer</var>&rsquo;s region (<var>beg</var> .  <var>end</var>) corresponding
to <var>line</var> and <var>col</var>.  If <var>col</var> is <code>nil</code>, return a
region just for <var>line</var>.  Return <code>nil</code> if the region is
invalid.
</p></dd></dl>

<a name="index-add-a-log-message"></a>
<p>For troubleshooting purposes, backends may record arbitrary
exceptional or erroneous situations into the Flymake log
buffer (see <a href="#Backend-exceptions">Backend exceptions</a>):
</p>
<dl>
<dt><a name="index-flymake_002dlog"></a>Macro: <strong>flymake-log</strong> <em>level msg &amp;optional args</em></dt>
<dd><p>Log, at level <var>level</var>, the message <var>msg</var> formatted with
<var>args</var>.  <var>level</var> is passed to <code>display-warning</code>
(see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Warning-Basics">Warning Basics</a> in <cite>The Emacs Lisp reference Manual</cite>), which is
used to display the warning in Flymake&rsquo;s log buffer.
</p></dd></dl>

<hr>
<a name="An-annotated-example-backend"></a>
<div class="header">
<p>
Previous: <a href="#Flymake-utility-functions" accesskey="p" rel="prev">Flymake utility functions</a>, Up: <a href="#Backend-functions" accesskey="u" rel="up">Backend functions</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="An-annotated-example-backend-1"></a>
<h4 class="subsection">2.2.2 An annotated example backend</h4>
<a name="index-example-of-backend"></a>
<a name="index-backend_002c-annotated-example"></a>

<p>This section presents an annotated example of a complete working
Flymake backend.  The example illustrates the process of writing a
backend as outlined above.
</p>
<p>The backend in question is used for checking Ruby source files.  It
uses asynchronous sub-processes (see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Asynchronous-Processes">Asynchronous Processes</a> in <cite>The Emacs Lisp Reference Manual</cite>), a common technique for performing
parallel processing in Emacs.
</p>
<p>The following code needs lexical binding (see <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Using-Lexical-Binding">Using Lexical
Binding</a> in <cite>The Emacs Lisp Reference Manual</cite>) to be active.
</p>
<div class="example">
<pre class="example">;;; ruby-flymake.el --- A ruby Flymake backend  -*- lexical-binding: t; -*-
(defvar-local ruby--flymake-proc nil)

(defun ruby-flymake (report-fn &amp;rest _args)
  ;; Not having a ruby interpreter is a serious problem which should cause
  ;; the backend to disable itself, so an <code>error</code> is signaled.
  ;;
  (unless (executable-find
           &quot;ruby&quot;) (error &quot;Cannot find a suitable ruby&quot;))
  ;; If a live process launched in an earlier check was found, that
  ;; process is killed.  When that process's sentinel eventually runs,
  ;; it will notice its obsoletion, since it have since reset
  ;; `ruby-flymake-proc' to a different value
  ;;
  (when (process-live-p ruby--flymake-proc)
    (kill-process ruby--flymake-proc))

  ;; Save the current buffer, the narrowing restriction, remove any
  ;; narrowing restriction.
  ;;
  (let ((source (current-buffer)))
    (save-restriction
      (widen)
      ;; Reset the `ruby--flymake-proc' process to a new process
      ;; calling the ruby tool.
      ;;
      (setq
       ruby--flymake-proc
       (make-process
        :name &quot;ruby-flymake&quot; :noquery t :connection-type 'pipe
        ;; Make output go to a temporary buffer.
        ;;
        :buffer (generate-new-buffer &quot; *ruby-flymake*&quot;)
        :command '(&quot;ruby&quot; &quot;-w&quot; &quot;-c&quot;)
        :sentinel
        (lambda (proc _event)
          ;; Check that the process has indeed exited, as it might
          ;; be simply suspended.
          ;;
          (when (eq 'exit (process-status proc))
            (unwind-protect
                ;; Only proceed if `proc' is the same as
                ;; `ruby--flymake-proc', which indicates that
                ;; `proc' is not an obsolete process.
                ;;
                (if (with-current-buffer source (eq proc ruby--flymake-proc))
                    (with-current-buffer (process-buffer proc)
                      (goto-char (point-min))
                      ;; Parse the output buffer for diagnostic's
                      ;; messages and locations, collect them in a list
                      ;; of objects, and call `report-fn'.
                      ;;
                      (cl-loop
                       while (search-forward-regexp
                              &quot;^\\(?:.*.rb\\|-\\):\\([0-9]+\\): \\(.*\\)$&quot;
                              nil t)
                       for msg = (match-string 2)
                       for (beg . end) = (flymake-diag-region
                                          source
                                          (string-to-number (match-string 1)))
                       for type = (if (string-match &quot;^warning&quot; msg)
                                      :warning
                                    :error)
                       collect (flymake-make-diagnostic source
                                                        beg
                                                        end
                                                        type
                                                        msg)
                       into diags
                       finally (funcall report-fn diags)))
                  (flymake-log :warning &quot;Canceling obsolete check %s&quot;
                               proc))
              ;; Cleanup the temporary buffer used to hold the
              ;; check's output.
              ;;
              (kill-buffer (process-buffer proc)))))))
      ;; Send the buffer contents to the process's stdin, followed by
      ;; an EOF.
      ;;
      (process-send-region ruby--flymake-proc (point-min) (point-max))
      (process-send-eof ruby--flymake-proc))))

(defun ruby-setup-flymake-backend ()
  (add-hook 'flymake-diagnostic-functions 'ruby-flymake nil t))

(add-hook 'ruby-mode-hook 'ruby-setup-flymake-backend)
</pre></div>

<hr>
<a name="The-legacy-Proc-backend"></a>
<div class="header">
<p>
Next: <a href="#GNU-Free-Documentation-License" accesskey="n" rel="next">GNU Free Documentation License</a>, Previous: <a href="#Extending-Flymake" accesskey="p" rel="prev">Extending Flymake</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-legacy-_0060_0060Proc_0027_0027-backend"></a>
<h2 class="chapter">3 The legacy &ldquo;Proc&rdquo; backend</h2>
<a name="index-legacy-proc-backend"></a>

<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Proc-customization-variables" accesskey="1">Proc customization variables</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Adding-support-for-a-new-syntax-check-tool" accesskey="2">Adding support for a new syntax check tool</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Implementation-overview" accesskey="3">Implementation overview</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Making-a-temporary-copy" accesskey="4">Making a temporary copy</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Locating-a-master-file" accesskey="5">Locating a master file</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Getting-the-include-directories" accesskey="6">Getting the include directories</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Locating-the-buildfile" accesskey="7">Locating the buildfile</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Starting-the-syntax-check-process" accesskey="8">Starting the syntax check process</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Parsing-the-output" accesskey="9">Parsing the output</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Interaction-with-other-modes">Interaction with other modes</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<a name="index-flymake_002dproc_002dlegacy_002dbackend"></a>
<p>The backend <code>flymake-proc-legacy-backend</code> was originally designed
to be extended for supporting new syntax check tools and error message
patterns.  It is also controlled by its own set of customization variables
</p>
<hr>
<a name="Proc-customization-variables"></a>
<div class="header">
<p>
Next: <a href="#Adding-support-for-a-new-syntax-check-tool" accesskey="n" rel="next">Adding support for a new syntax check tool</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Customization-variables-for-the-Proc-backend"></a>
<h3 class="section">3.1 Customization variables for the Proc backend</h3>
<a name="index-proc-backend-customization-variables"></a>

<dl compact="compact">
<dt><code>flymake-proc-allowed-file-name-masks</code>
<a name="index-flymake_002dproc_002dallowed_002dfile_002dname_002dmasks"></a>
</dt>
<dd><p>A list of <code>(filename-regexp, init-function, cleanup-function
getfname-function)</code> for configuring syntax check tools.  See <a href="#Adding-support-for-a-new-syntax-check-tool">Adding support for a new syntax check tool</a>.
</p>
</dd>
<dt><code>flymake-proc-master-file-dirs</code>
<a name="index-flymake_002dproc_002dmaster_002dfile_002ddirs"></a>
</dt>
<dd><p>A list of directories for searching a master file.  See <a href="#Locating-a-master-file">Locating a master file</a>.
</p>
</dd>
<dt><code>flymake-proc-get-project-include-dirs-function</code>
<a name="index-flymake_002dproc_002dget_002dproject_002dinclude_002ddirs_002dfunction"></a>
</dt>
<dd><p>A function used for obtaining a list of project include dirs (C/C++
specific).  See <a href="#Getting-the-include-directories">Getting the include directories</a>.
</p>
</dd>
<dt><code>flymake-proc-master-file-count-limit</code>
<a name="index-flymake_002dproc_002dmaster_002dfile_002dcount_002dlimit"></a>
</dt>
<dt><code>flymake-proc-check-file-limit</code>
<a name="index-flymake_002dproc_002dcheck_002dfile_002dlimit"></a>
</dt>
<dd><p>Used when looking for a master file.  See <a href="#Locating-a-master-file">Locating a master file</a>.
</p>
</dd>
<dt><code>flymake-proc-err-line-patterns</code>
<a name="index-flymake_002dproc_002derr_002dline_002dpatterns"></a>
</dt>
<dd><p>Patterns for error/warning messages in the form <code>(regexp file-idx
line-idx col-idx err-text-idx)</code>.  See <a href="#Parsing-the-output">Parsing the output</a>.
</p>
</dd>
<dt><code>flymake-proc-diagnostic-type-pred</code>
<a name="index-flymake_002dproc_002ddiagnostic_002dtype_002dpred"></a>
</dt>
<dd><p>A function to classify a diagnostic text as particular type of
error.  Should be a function taking an error text and returning one of
the symbols indexing <code>flymake-diagnostic-types-alist</code>.  If non-nil
is returned but there is no such symbol in that table, a warning is
assumed.  If nil is returned, an error is assumed.  Can also be a
regular expression that should match only warnings.  This variable
replaces the old <code>flymake-warning-re</code> and
<code>flymake-warning-predicate</code>.
</p>
</dd>
<dt><code>flymake-proc-compilation-prevents-syntax-check</code>
<a name="index-flymake_002dproc_002dcompilation_002dprevents_002dsyntax_002dcheck"></a>
</dt>
<dd><p>A flag indicating whether compilation and syntax check of the same
file cannot be run simultaneously.  See <a href="#Interaction-with-other-modes">Interaction with other modes</a>.
</p></dd>
</dl>

<hr>
<a name="Adding-support-for-a-new-syntax-check-tool"></a>
<div class="header">
<p>
Next: <a href="#Implementation-overview" accesskey="n" rel="next">Implementation overview</a>, Previous: <a href="#Proc-customization-variables" accesskey="p" rel="prev">Proc customization variables</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Adding-support-for-a-new-syntax-check-tool-1"></a>
<h3 class="section">3.2 Adding support for a new syntax check tool</h3>
<a name="index-adding-support-for-a-new-syntax-check-tool"></a>

<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Example_002d_002d_002dConfiguring-a-tool-called-directly" accesskey="1">Example---Configuring a tool called directly</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Example_002d_002d_002dConfiguring-a-tool-called-via-make" accesskey="2">Example---Configuring a tool called via make</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<p>Syntax check tools are configured using the
<code>flymake-proc-allowed-file-name-masks</code> list.  Each item of this list
has the following format:
</p>
<div class="lisp">
<pre class="lisp">(filename-regexp, init-function, cleanup-function, getfname-function)
</pre></div>

<dl compact="compact">
<dt><code>filename-regexp</code></dt>
<dd><p>This field is used as a key for locating init/cleanup/getfname
functions for the buffer.  Items in
<code>flymake-proc-allowed-file-name-masks</code> are searched sequentially.
The first item with <code>filename-regexp</code> matching buffer filename is
selected.  If no match is found, <code>flymake-mode</code> is switched off.
</p>
</dd>
<dt><code>init-function</code></dt>
<dd><p><code>init-function</code> is required to initialize the syntax check,
usually by creating a temporary copy of the buffer contents.  The
function must return <code>(list cmd-name arg-list)</code>.  If
<code>init-function</code> returns null, syntax check is aborted, but
<code>flymake-mode</code> is not switched off.
</p>
</dd>
<dt><code>cleanup-function</code></dt>
<dd><p><code>cleanup-function</code> is called after the syntax check process is
complete and should take care of proper deinitialization, which is
usually deleting a temporary copy created by the <code>init-function</code>.
</p>
</dd>
<dt><code>getfname-function</code></dt>
<dd><p>This function is used for translating filenames reported by the syntax
check tool into &ldquo;real&rdquo; filenames.  Filenames reported by the tool
will be different from the real ones, as actually the tool works with
the temporary copy.  In most cases, the default implementation
provided by Flymake, <code>flymake-proc-get-real-file-name</code>, can be
used as <code>getfname-function</code>.
</p></dd>
</dl>

<p>To add support for a new syntax check tool, write the corresponding
<code>init-function</code> and, optionally, <code>cleanup-function</code> and
<code>getfname-function</code>.  If the format of error messages reported by
the new tool is not yet supported by Flymake, add a new entry to
the <code>flymake-proc-err-line-patterns</code> list.
</p>
<p>The following sections contain some examples of configuring Flymake
support for various syntax check tools.
</p>
<hr>
<a name="Example_002d_002d_002dConfiguring-a-tool-called-directly"></a>
<div class="header">
<p>
Next: <a href="#Example_002d_002d_002dConfiguring-a-tool-called-via-make" accesskey="n" rel="next">Example---Configuring a tool called via make</a>, Up: <a href="#Adding-support-for-a-new-syntax-check-tool" accesskey="u" rel="up">Adding support for a new syntax check tool</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Example_002d_002d_002dConfiguring-a-tool-called-directly-1"></a>
<h4 class="subsection">3.2.1 Example&mdash;Configuring a tool called directly</h4>
<a name="index-adding-support-for-perl"></a>

<p>In this example, we will add support for <code>perl</code> as a syntax check
tool.  <code>perl</code> supports the <samp>-c</samp> option which does syntax
checking.
</p>
<p>First, we write the <code>init-function</code>:
</p>
<div class="lisp">
<pre class="lisp">(defun flymake-proc-perl-init ()
  (let* ((temp-file (flymake-proc-init-create-temp-buffer-copy
                     'flymake-proc-create-temp-inplace))
         (local-file (file-relative-name
                      temp-file
                      (file-name-directory buffer-file-name))))
    (list &quot;perl&quot; (list &quot;-wc &quot; local-file))))
</pre></div>

<p><code>flymake-proc-perl-init</code> creates a temporary copy of the buffer
contents with the help of
<code>flymake-proc-init-create-temp-buffer-copy</code>, and builds an appropriate
command line.
</p>
<p>Next, we add a new entry to the
<code>flymake-proc-allowed-file-name-masks</code>:
</p>
<div class="lisp">
<pre class="lisp">(setq flymake-proc-allowed-file-name-masks
      (cons '(&quot;.+\\.pl$&quot;
              flymake-proc-perl-init
              flymake-proc-simple-cleanup
              flymake-proc-get-real-file-name)
            flymake-proc-allowed-file-name-masks))
</pre></div>

<p>Note that we use standard <code>cleanup-function</code> and
<code>getfname-function</code>.
</p>
<p>Finally, we add an entry to <code>flymake-proc-err-line-patterns</code>:
</p>
<div class="lisp">
<pre class="lisp">(setq flymake-proc-err-line-patterns
      (cons '(&quot;\\(.*\\) at \\([^ \n]+\\) line \\([0-9]+\\)[,.\n]&quot;
              2 3 nil 1)
            flymake-proc-err-line-patterns))
</pre></div>

<hr>
<a name="Example_002d_002d_002dConfiguring-a-tool-called-via-make"></a>
<div class="header">
<p>
Previous: <a href="#Example_002d_002d_002dConfiguring-a-tool-called-directly" accesskey="p" rel="prev">Example---Configuring a tool called directly</a>, Up: <a href="#Adding-support-for-a-new-syntax-check-tool" accesskey="u" rel="up">Adding support for a new syntax check tool</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Example_002d_002d_002dConfiguring-a-tool-called-via-make-1"></a>
<h4 class="subsection">3.2.2 Example&mdash;Configuring a tool called via make</h4>
<a name="index-adding-support-for-C-_0028gcc_002bmake_0029"></a>

<p>In this example we will add support for C files syntax checked by
<code>gcc</code> called via <code>make</code>.
</p>
<p>We&rsquo;re not required to write any new functions, as Flymake already has
functions for <code>make</code>.  We just add a new entry to the
<code>flymake-proc-allowed-file-name-masks</code>:
</p>
<div class="lisp">
<pre class="lisp">(setq flymake-proc-allowed-file-name-masks
      (cons '(&quot;.+\\.c$&quot;
              flymake-proc-simple-make-init
              flymake-proc-simple-cleanup
              flymake-proc-get-real-file-name)
            flymake-proc-allowed-file-name-masks))
</pre></div>

<p><code>flymake-proc-simple-make-init</code> builds the following <code>make</code>
command line:
</p>
<div class="lisp">
<pre class="lisp">(list &quot;make&quot;
      (list &quot;-s&quot; &quot;-C&quot;
            base-dir
            (concat &quot;CHK_SOURCES=&quot; source)
            &quot;SYNTAX_CHECK_MODE=1&quot;
            &quot;check-syntax&quot;))
</pre></div>

<p><code>base-dir</code> is a directory containing the <samp>Makefile</samp>, see
<a href="#Locating-the-buildfile">Locating the buildfile</a>.
</p>
<p>Thus, <samp>Makefile</samp> must contain the <code>check-syntax</code> target.  In
our case this target might look like this:
</p>
<pre class="verbatim">check-syntax:
	gcc -o /dev/null -S ${CHK_SOURCES} || true
</pre>
<p>The format of error messages reported by <code>gcc</code> is already
supported by Flymake, so we don&rsquo;t have to add a new entry to
<code>flymake-err-line-patterns</code>.  Note that if you are using
Automake, you may want to replace <code>gcc</code> with the standard
Automake variable <code>COMPILE</code>:
</p>
<pre class="verbatim">check-syntax:
	$(COMPILE) -o /dev/null -S ${CHK_SOURCES} || true
</pre>
<hr>
<a name="Implementation-overview"></a>
<div class="header">
<p>
Next: <a href="#Making-a-temporary-copy" accesskey="n" rel="next">Making a temporary copy</a>, Previous: <a href="#Adding-support-for-a-new-syntax-check-tool" accesskey="p" rel="prev">Adding support for a new syntax check tool</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Implementation-overview-1"></a>
<h3 class="section">3.3 Implementation overview</h3>
<a name="index-syntax-check-models"></a>
<a name="index-master-file"></a>

<p><code>flymake-proc-legacy-backend</code> saves a copy of the buffer in a
temporary file in the buffer&rsquo;s directory (or in the system temporary
directory, for Java files), creates a syntax check command and
launches a process with this command.  The output is parsed using a
list of error message patterns, and error information (file name, line
number, type and text) is saved.  After the process has finished,
Flymake highlights erroneous lines in the buffer using the accumulated
error information.
</p>
<p>Syntax check is considered possible if there&rsquo;s an entry in
<code>flymake-proc-allowed-file-name-masks</code> matching buffer&rsquo;s filename and
its <code>init-function</code> returns non-<code>nil</code> value.
</p>
<p>Two syntax check modes are distinguished:
</p>
<ol>
<li> Buffer can be syntax checked in a standalone fashion, that is, the
file (its temporary copy, in fact) can be passed over to the compiler to
do the syntax check.  Examples are C/C<tt>++</tt> sources (<samp>.c</samp>,
<samp>.cpp</samp>) and Java (<samp>.java</samp>).

</li><li> Buffer can be syntax checked, but additional file, called master file,
is required to perform this operation.  A master file is a file that
includes the current file, so that running a syntax check tool on it
will also check syntax in the current file.  Examples are C/C<tt>++</tt>
headers (<samp>.h</samp>, <samp>.hpp</samp>).

</li></ol>

<p>These modes are handled inside init/cleanup/getfname functions, see
<a href="#Adding-support-for-a-new-syntax-check-tool">Adding support for a new syntax check tool</a>.
</p>
<p>The Proc backend contains implementations of all functionality
required to support different syntax check modes described above
(making temporary copies, finding master files, etc.), as well as some
tool-specific (routines for Make, Ant, etc.) code.
</p>

<hr>
<a name="Making-a-temporary-copy"></a>
<div class="header">
<p>
Next: <a href="#Locating-a-master-file" accesskey="n" rel="next">Locating a master file</a>, Previous: <a href="#Implementation-overview" accesskey="p" rel="prev">Implementation overview</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Making-a-temporary-copy-1"></a>
<h3 class="section">3.4 Making a temporary copy</h3>
<a name="index-temporary-copy-of-the-buffer"></a>

<p>After the possibility of the syntax check has been determined, a
temporary copy of the current buffer is made so that the most recent
unsaved changes could be seen by the syntax check tool.  Making a copy
is quite straightforward in a standalone case (mode <code>1</code>), as it&rsquo;s
just saving buffer contents to a temporary file.
</p>
<p>Things get trickier, however, when master file is involved, as it
requires to
</p>
<ul>
<li> locate a master file
</li><li> patch it to include the current file using its new (temporary) name.
</li></ul>

<p>Locating a master file is discussed in the following section.
</p>
<p>Patching just changes all appropriate lines of the master file so that they
use the new (temporary) name of the current file.  For example, suppose current
file name is <code>file.h</code>, the master file is <code>file.cpp</code>, and
it includes current file via <code>#include &quot;file.h&quot;</code>.  Current file&rsquo;s copy
is saved to file <code>file_flymake.h</code>, so the include line must be
changed to <code>#include &quot;file_flymake.h&quot;</code>.  Finally, patched master file
is saved to <code>file_flymake_master.cpp</code>, and the last one is passed to
the syntax check tool.
</p>
<hr>
<a name="Locating-a-master-file"></a>
<div class="header">
<p>
Next: <a href="#Getting-the-include-directories" accesskey="n" rel="next">Getting the include directories</a>, Previous: <a href="#Making-a-temporary-copy" accesskey="p" rel="prev">Making a temporary copy</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Locating-a-master-file-1"></a>
<h3 class="section">3.5 Locating a master file</h3>
<a name="index-locating-a-master-file"></a>
<a name="index-master-file_002c-locating"></a>

<p>Master file is located in two steps.
</p>
<p>First, a list of possible master files is built.  A simple name
matching is used to find the files.  For a C++ header <samp>file.h</samp>,
the Proc backend searches for all <samp>.cpp</samp> files in the directories
whose relative paths are stored in a customizable variable
<code>flymake-proc-master-file-dirs</code>, which usually contains something
like <code>(&quot;.&quot; &quot;./src&quot;)</code>.  No more than
<code>flymake-proc-master-file-count-limit</code> entries is added to the
master file list.  The list is then sorted to move files with names
<samp>file.cpp</samp> to the top.
</p>
<p>Next, each master file in a list is checked to contain the appropriate
include directives.  No more than <code>flymake-proc-check-file-limit</code> of each
file are parsed.
</p>
<p>For <samp>file.h</samp>, the include directives to look for are
<code>#include &quot;file.h&quot;</code>, <code>#include &quot;../file.h&quot;</code>, etc.  Each
include is checked against a list of include directories
(see <a href="#Getting-the-include-directories">Getting the include directories</a>) to be sure it points to the
correct <samp>file.h</samp>.
</p>
<p>First matching master file found stops the search.  The master file is then
patched and saved to disk.  In case no master file is found, syntax check is
aborted, and corresponding status (&lsquo;<samp>!</samp>&rsquo;) is reported in the mode line.
See <a href="#Syntax-check-statuses">Syntax check statuses</a>.
</p>
<hr>
<a name="Getting-the-include-directories"></a>
<div class="header">
<p>
Next: <a href="#Locating-the-buildfile" accesskey="n" rel="next">Locating the buildfile</a>, Previous: <a href="#Locating-a-master-file" accesskey="p" rel="prev">Locating a master file</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Getting-the-include-directories-1"></a>
<h3 class="section">3.6 Getting the include directories</h3>
<a name="index-include-directories-_0028C_002fC_002b_002b-specific_0029"></a>

<p>Two sets of include directories are distinguished: system include directories
and project include directories.  The former is just the contents of the
<code>INCLUDE</code> environment variable.  The latter is not so easy to obtain,
and the way it can be obtained can vary greatly for different projects.
Therefore, a customizable variable
<code>flymake-proc-get-project-include-dirs-function</code> is used to provide the
way to implement the desired behavior.
</p>
<p>The default implementation, <code>flymake-proc-get-project-include-dirs-imp</code>,
uses a <code>make</code> call.  This requires a correct base directory, that is, a
directory containing a correct <samp>Makefile</samp>, to be determined.
</p>
<p>As obtaining the project include directories might be a costly operation, its
return value is cached in the hash table.  The cache is cleared in the beginning
of every syntax check attempt.
</p>
<hr>
<a name="Locating-the-buildfile"></a>
<div class="header">
<p>
Next: <a href="#Starting-the-syntax-check-process" accesskey="n" rel="next">Starting the syntax check process</a>, Previous: <a href="#Getting-the-include-directories" accesskey="p" rel="prev">Getting the include directories</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Locating-the-buildfile-1"></a>
<h3 class="section">3.7 Locating the buildfile</h3>
<a name="index-locating-the-buildfile"></a>
<a name="index-buildfile_002c-locating"></a>
<a name="index-Makefile_002c-locating"></a>

<p>The Proc backend can be configured to use different tools for
performing syntax checks.  For example, it can use direct compiler
call to syntax check a perl script or a call to <code>make</code> for a
more complicated case of a C/C<tt>++</tt> source.  The general idea is
that simple files, like Perl scripts and <acronym>HTML</acronym> pages, can be checked by
directly invoking a corresponding tool.  Files that are usually more
complex and generally used as part of larger projects, might require
non-trivial options to be passed to the syntax check tool, like
include directories for C<tt>++</tt>.  The latter files are syntax checked
using some build tool, like Make or Ant.
</p>
<p>All Make configuration data is usually stored in a file called
<samp>Makefile</samp>.  To allow for future extensions, Flymake uses a notion of
buildfile to reference the <em>project configuration</em> file.
</p>
<a name="index-flymake_002dproc_002dfind_002dbuildfile"></a>
<p>Special function, <code>flymake-proc-find-buildfile</code> is provided for locating buildfiles.
Searching for a buildfile is done in a manner similar to that of searching
for possible master files.
In case there&rsquo;s no build file, the syntax check is aborted.
</p>
<p>Buildfile values are also cached.
</p>
<hr>
<a name="Starting-the-syntax-check-process"></a>
<div class="header">
<p>
Next: <a href="#Parsing-the-output" accesskey="n" rel="next">Parsing the output</a>, Previous: <a href="#Locating-the-buildfile" accesskey="p" rel="prev">Locating the buildfile</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Starting-the-syntax-check-process-1"></a>
<h3 class="section">3.8 Starting the syntax check process</h3>
<a name="index-syntax-check-process_002c-legacy-proc-backend"></a>

<p>The command line (command name and the list of arguments) for
launching a process is returned by the initialization function.  The
Proc backend then just starts an asynchronous process and configures a
process filter and sentinel, which are used for processing the output
of the syntax check tool.  When exiting Emacs, running processes will
be killed without prompting the user.
</p>
<hr>
<a name="Parsing-the-output"></a>
<div class="header">
<p>
Next: <a href="#Interaction-with-other-modes" accesskey="n" rel="next">Interaction with other modes</a>, Previous: <a href="#Starting-the-syntax-check-process" accesskey="p" rel="prev">Starting the syntax check process</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Parsing-the-output-1"></a>
<h3 class="section">3.9 Parsing the output</h3>
<a name="index-parsing-the-output_002c-legacy-proc-backend"></a>

<p>The output generated by the syntax check tool is parsed in the process
filter/sentinel using the error message patterns stored in the
<code>flymake-proc-err-line-patterns</code> variable.  This variable contains a
list of items of the form <code>(regexp&nbsp;<span class="nolinebreak">file-idx</span>&nbsp;<span class="nolinebreak">line-idx</span>&nbsp;<span class="nolinebreak">err-text-idx)</span></code><!-- /@w -->, used to determine whether a particular line is an
error message and extract file name, line number and error text,
respectively.  Error type (error/warning) is also guessed by matching
error text with the &lsquo;<samp>^[wW]arning</samp>&rsquo; pattern.  Anything that was not
classified as a warning is considered an error.  Type is then used to
sort error menu items, which shows error messages first.
</p>
<p>The Proc backend is also able to interpret error message patterns
missing err-text-idx information.  This is done by merely taking the
rest of the matched line (<code>(substring line (match-end 0))</code>) as
error text.  This trick allows making use of a huge collection of
error message line patterns from <samp>compile.el</samp>.  All these error
patterns are appended to the end of
<code>flymake-proc-err-line-patterns</code>.
</p>
<p>The error information obtained is saved in a buffer local
variable.  The buffer for which the process output belongs is
determined from the process-id<!-- /@w -->-&gt;<!-- /@w -->buffer mapping updated
after every process launch/exit.
</p>
<hr>
<a name="Interaction-with-other-modes"></a>
<div class="header">
<p>
Previous: <a href="#Parsing-the-output" accesskey="p" rel="prev">Parsing the output</a>, Up: <a href="#The-legacy-Proc-backend" accesskey="u" rel="up">The legacy Proc backend</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Interaction-with-other-modes-1"></a>
<h3 class="section">3.10 Interaction with other modes</h3>
<a name="index-interaction-with-other-modes_002c-legacy-proc-backend"></a>
<a name="index-interaction-with-compile-mode_002c-legacy-proc-backend"></a>

<p>The only mode the Proc backend currently knows about is
<code>compile</code>.
</p>
<p>The Proc backend can be configured to not start syntax check if it
thinks the compilation is in progress, by testing the
<code>compilation-in-progress</code> variable.  The reason why this might be
useful is saving CPU time in case both syntax check and compilation
are very CPU intensive.  The original reason for adding this feature,
though, was working around a locking problem with MS Visual C++
compiler.  The variable in question is
<code>flymake-proc-compilation-prevents-syntax-check</code>.
</p>
<a name="index-flymake_002dproc_002dcompile"></a>
<p>The Proc backend also provides an alternative command for starting
compilation, <code>flymake-proc-compile</code>.  It just kills all the active
syntax check processes before calling <code>compile</code>.
</p>
<hr>
<a name="GNU-Free-Documentation-License"></a>
<div class="header">
<p>
Next: <a href="#Index" accesskey="n" rel="next">Index</a>, Previous: <a href="#The-legacy-Proc-backend" accesskey="p" rel="prev">The legacy Proc backend</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="GNU-Free-Documentation-License-1"></a>
<h2 class="appendix">Appendix A GNU Free Documentation License</h2>
<div align="center">Version 1.3, 3 November 2008
</div>

<div class="display">
<pre class="display">Copyright &copy; 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
<a href="https://fsf.org/">https://fsf.org/</a>

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
</pre></div>

<ol start="0">
<li> PREAMBLE

<p>The purpose of this License is to make a manual, textbook, or other
functional and useful document <em>free</em> in the sense of freedom: to
assure everyone the effective freedom to copy and redistribute it,
with or without modifying it, either commercially or noncommercially.
Secondarily, this License preserves for the author and publisher a way
to get credit for their work, while not being considered responsible
for modifications made by others.
</p>
<p>This License is a kind of &ldquo;copyleft&rdquo;, which means that derivative
works of the document must themselves be free in the same sense.  It
complements the GNU General Public License, which is a copyleft
license designed for free software.
</p>
<p>We have designed this License in order to use it for manuals for free
software, because free software needs free documentation: a free
program should come with manuals providing the same freedoms that the
software does.  But this License is not limited to software manuals;
it can be used for any textual work, regardless of subject matter or
whether it is published as a printed book.  We recommend this License
principally for works whose purpose is instruction or reference.
</p>
</li><li> APPLICABILITY AND DEFINITIONS

<p>This License applies to any manual or other work, in any medium, that
contains a notice placed by the copyright holder saying it can be
distributed under the terms of this License.  Such a notice grants a
world-wide, royalty-free license, unlimited in duration, to use that
work under the conditions stated herein.  The &ldquo;Document&rdquo;, below,
refers to any such manual or work.  Any member of the public is a
licensee, and is addressed as &ldquo;you&rdquo;.  You accept the license if you
copy, modify or distribute the work in a way requiring permission
under copyright law.
</p>
<p>A &ldquo;Modified Version&rdquo; of the Document means any work containing the
Document or a portion of it, either copied verbatim, or with
modifications and/or translated into another language.
</p>
<p>A &ldquo;Secondary Section&rdquo; is a named appendix or a front-matter section
of the Document that deals exclusively with the relationship of the
publishers or authors of the Document to the Document&rsquo;s overall
subject (or to related matters) and contains nothing that could fall
directly within that overall subject.  (Thus, if the Document is in
part a textbook of mathematics, a Secondary Section may not explain
any mathematics.)  The relationship could be a matter of historical
connection with the subject or with related matters, or of legal,
commercial, philosophical, ethical or political position regarding
them.
</p>
<p>The &ldquo;Invariant Sections&rdquo; are certain Secondary Sections whose titles
are designated, as being those of Invariant Sections, in the notice
that says that the Document is released under this License.  If a
section does not fit the above definition of Secondary then it is not
allowed to be designated as Invariant.  The Document may contain zero
Invariant Sections.  If the Document does not identify any Invariant
Sections then there are none.
</p>
<p>The &ldquo;Cover Texts&rdquo; are certain short passages of text that are listed,
as Front-Cover Texts or Back-Cover Texts, in the notice that says that
the Document is released under this License.  A Front-Cover Text may
be at most 5 words, and a Back-Cover Text may be at most 25 words.
</p>
<p>A &ldquo;Transparent&rdquo; copy of the Document means a machine-readable copy,
represented in a format whose specification is available to the
general public, that is suitable for revising the document
straightforwardly with generic text editors or (for images composed of
pixels) generic paint programs or (for drawings) some widely available
drawing editor, and that is suitable for input to text formatters or
for automatic translation to a variety of formats suitable for input
to text formatters.  A copy made in an otherwise Transparent file
format whose markup, or absence of markup, has been arranged to thwart
or discourage subsequent modification by readers is not Transparent.
An image format is not Transparent if used for any substantial amount
of text.  A copy that is not &ldquo;Transparent&rdquo; is called &ldquo;Opaque&rdquo;.
</p>
<p>Examples of suitable formats for Transparent copies include plain
ASCII without markup, Texinfo input format, LaTeX input
format, SGML or XML using a publicly available
DTD, and standard-conforming simple HTML,
PostScript or PDF designed for human modification.  Examples
of transparent image formats include PNG, XCF and
JPG.  Opaque formats include proprietary formats that can be
read and edited only by proprietary word processors, SGML or
XML for which the DTD and/or processing tools are
not generally available, and the machine-generated HTML,
PostScript or PDF produced by some word processors for
output purposes only.
</p>
<p>The &ldquo;Title Page&rdquo; means, for a printed book, the title page itself,
plus such following pages as are needed to hold, legibly, the material
this License requires to appear in the title page.  For works in
formats which do not have any title page as such, &ldquo;Title Page&rdquo; means
the text near the most prominent appearance of the work&rsquo;s title,
preceding the beginning of the body of the text.
</p>
<p>The &ldquo;publisher&rdquo; means any person or entity that distributes copies
of the Document to the public.
</p>
<p>A section &ldquo;Entitled XYZ&rdquo; means a named subunit of the Document whose
title either is precisely XYZ or contains XYZ in parentheses following
text that translates XYZ in another language.  (Here XYZ stands for a
specific section name mentioned below, such as &ldquo;Acknowledgements&rdquo;,
&ldquo;Dedications&rdquo;, &ldquo;Endorsements&rdquo;, or &ldquo;History&rdquo;.)  To &ldquo;Preserve the Title&rdquo;
of such a section when you modify the Document means that it remains a
section &ldquo;Entitled XYZ&rdquo; according to this definition.
</p>
<p>The Document may include Warranty Disclaimers next to the notice which
states that this License applies to the Document.  These Warranty
Disclaimers are considered to be included by reference in this
License, but only as regards disclaiming warranties: any other
implication that these Warranty Disclaimers may have is void and has
no effect on the meaning of this License.
</p>
</li><li> VERBATIM COPYING

<p>You may copy and distribute the Document in any medium, either
commercially or noncommercially, provided that this License, the
copyright notices, and the license notice saying this License applies
to the Document are reproduced in all copies, and that you add no other
conditions whatsoever to those of this License.  You may not use
technical measures to obstruct or control the reading or further
copying of the copies you make or distribute.  However, you may accept
compensation in exchange for copies.  If you distribute a large enough
number of copies you must also follow the conditions in section 3.
</p>
<p>You may also lend copies, under the same conditions stated above, and
you may publicly display copies.
</p>
</li><li> COPYING IN QUANTITY

<p>If you publish printed copies (or copies in media that commonly have
printed covers) of the Document, numbering more than 100, and the
Document&rsquo;s license notice requires Cover Texts, you must enclose the
copies in covers that carry, clearly and legibly, all these Cover
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
the back cover.  Both covers must also clearly and legibly identify
you as the publisher of these copies.  The front cover must present
the full title with all words of the title equally prominent and
visible.  You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated
as verbatim copying in other respects.
</p>
<p>If the required texts for either cover are too voluminous to fit
legibly, you should put the first ones listed (as many as fit
reasonably) on the actual cover, and continue the rest onto adjacent
pages.
</p>
<p>If you publish or distribute Opaque copies of the Document numbering
more than 100, you must either include a machine-readable Transparent
copy along with each Opaque copy, or state in or with each Opaque copy
a computer-network location from which the general network-using
public has access to download using public-standard network protocols
a complete Transparent copy of the Document, free of added material.
If you use the latter option, you must take reasonably prudent steps,
when you begin distribution of Opaque copies in quantity, to ensure
that this Transparent copy will remain thus accessible at the stated
location until at least one year after the last time you distribute an
Opaque copy (directly or through your agents or retailers) of that
edition to the public.
</p>
<p>It is requested, but not required, that you contact the authors of the
Document well before redistributing any large number of copies, to give
them a chance to provide you with an updated version of the Document.
</p>
</li><li> MODIFICATIONS

<p>You may copy and distribute a Modified Version of the Document under
the conditions of sections 2 and 3 above, provided that you release
the Modified Version under precisely this License, with the Modified
Version filling the role of the Document, thus licensing distribution
and modification of the Modified Version to whoever possesses a copy
of it.  In addition, you must do these things in the Modified Version:
</p>
<ol type="A" start="1">
<li> Use in the Title Page (and on the covers, if any) a title distinct
from that of the Document, and from those of previous versions
(which should, if there were any, be listed in the History section
of the Document).  You may use the same title as a previous version
if the original publisher of that version gives permission.

</li><li> List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified
Version, together with at least five of the principal authors of the
Document (all of its principal authors, if it has fewer than five),
unless they release you from this requirement.

</li><li> State on the Title page the name of the publisher of the
Modified Version, as the publisher.

</li><li> Preserve all the copyright notices of the Document.

</li><li> Add an appropriate copyright notice for your modifications
adjacent to the other copyright notices.

</li><li> Include, immediately after the copyright notices, a license notice
giving the public permission to use the Modified Version under the
terms of this License, in the form shown in the Addendum below.

</li><li> Preserve in that license notice the full lists of Invariant Sections
and required Cover Texts given in the Document&rsquo;s license notice.

</li><li> Include an unaltered copy of this License.

</li><li> Preserve the section Entitled &ldquo;History&rdquo;, Preserve its Title, and add
to it an item stating at least the title, year, new authors, and
publisher of the Modified Version as given on the Title Page.  If
there is no section Entitled &ldquo;History&rdquo; in the Document, create one
stating the title, year, authors, and publisher of the Document as
given on its Title Page, then add an item describing the Modified
Version as stated in the previous sentence.

</li><li> Preserve the network location, if any, given in the Document for
public access to a Transparent copy of the Document, and likewise
the network locations given in the Document for previous versions
it was based on.  These may be placed in the &ldquo;History&rdquo; section.
You may omit a network location for a work that was published at
least four years before the Document itself, or if the original
publisher of the version it refers to gives permission.

</li><li> For any section Entitled &ldquo;Acknowledgements&rdquo; or &ldquo;Dedications&rdquo;, Preserve
the Title of the section, and preserve in the section all the
substance and tone of each of the contributor acknowledgements and/or
dedications given therein.

</li><li> Preserve all the Invariant Sections of the Document,
unaltered in their text and in their titles.  Section numbers
or the equivalent are not considered part of the section titles.

</li><li> Delete any section Entitled &ldquo;Endorsements&rdquo;.  Such a section
may not be included in the Modified Version.

</li><li> Do not retitle any existing section to be Entitled &ldquo;Endorsements&rdquo; or
to conflict in title with any Invariant Section.

</li><li> Preserve any Warranty Disclaimers.
</li></ol>

<p>If the Modified Version includes new front-matter sections or
appendices that qualify as Secondary Sections and contain no material
copied from the Document, you may at your option designate some or all
of these sections as invariant.  To do this, add their titles to the
list of Invariant Sections in the Modified Version&rsquo;s license notice.
These titles must be distinct from any other section titles.
</p>
<p>You may add a section Entitled &ldquo;Endorsements&rdquo;, provided it contains
nothing but endorsements of your Modified Version by various
parties&mdash;for example, statements of peer review or that the text has
been approved by an organization as the authoritative definition of a
standard.
</p>
<p>You may add a passage of up to five words as a Front-Cover Text, and a
passage of up to 25 words as a Back-Cover Text, to the end of the list
of Cover Texts in the Modified Version.  Only one passage of
Front-Cover Text and one of Back-Cover Text may be added by (or
through arrangements made by) any one entity.  If the Document already
includes a cover text for the same cover, previously added by you or
by arrangement made by the same entity you are acting on behalf of,
you may not add another; but you may replace the old one, on explicit
permission from the previous publisher that added the old one.
</p>
<p>The author(s) and publisher(s) of the Document do not by this License
give permission to use their names for publicity for or to assert or
imply endorsement of any Modified Version.
</p>
</li><li> COMBINING DOCUMENTS

<p>You may combine the Document with other documents released under this
License, under the terms defined in section 4 above for modified
versions, provided that you include in the combination all of the
Invariant Sections of all of the original documents, unmodified, and
list them all as Invariant Sections of your combined work in its
license notice, and that you preserve all their Warranty Disclaimers.
</p>
<p>The combined work need only contain one copy of this License, and
multiple identical Invariant Sections may be replaced with a single
copy.  If there are multiple Invariant Sections with the same name but
different contents, make the title of each such section unique by
adding at the end of it, in parentheses, the name of the original
author or publisher of that section if known, or else a unique number.
Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.
</p>
<p>In the combination, you must combine any sections Entitled &ldquo;History&rdquo;
in the various original documents, forming one section Entitled
&ldquo;History&rdquo;; likewise combine any sections Entitled &ldquo;Acknowledgements&rdquo;,
and any sections Entitled &ldquo;Dedications&rdquo;.  You must delete all
sections Entitled &ldquo;Endorsements.&rdquo;
</p>
</li><li> COLLECTIONS OF DOCUMENTS

<p>You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this
License in the various documents with a single copy that is included in
the collection, provided that you follow the rules of this License for
verbatim copying of each of the documents in all other respects.
</p>
<p>You may extract a single document from such a collection, and distribute
it individually under this License, provided you insert a copy of this
License into the extracted document, and follow this License in all
other respects regarding verbatim copying of that document.
</p>
</li><li> AGGREGATION WITH INDEPENDENT WORKS

<p>A compilation of the Document or its derivatives with other separate
and independent documents or works, in or on a volume of a storage or
distribution medium, is called an &ldquo;aggregate&rdquo; if the copyright
resulting from the compilation is not used to limit the legal rights
of the compilation&rsquo;s users beyond what the individual works permit.
When the Document is included in an aggregate, this License does not
apply to the other works in the aggregate which are not themselves
derivative works of the Document.
</p>
<p>If the Cover Text requirement of section 3 is applicable to these
copies of the Document, then if the Document is less than one half of
the entire aggregate, the Document&rsquo;s Cover Texts may be placed on
covers that bracket the Document within the aggregate, or the
electronic equivalent of covers if the Document is in electronic form.
Otherwise they must appear on printed covers that bracket the whole
aggregate.
</p>
</li><li> TRANSLATION

<p>Translation is considered a kind of modification, so you may
distribute translations of the Document under the terms of section 4.
Replacing Invariant Sections with translations requires special
permission from their copyright holders, but you may include
translations of some or all Invariant Sections in addition to the
original versions of these Invariant Sections.  You may include a
translation of this License, and all the license notices in the
Document, and any Warranty Disclaimers, provided that you also include
the original English version of this License and the original versions
of those notices and disclaimers.  In case of a disagreement between
the translation and the original version of this License or a notice
or disclaimer, the original version will prevail.
</p>
<p>If a section in the Document is Entitled &ldquo;Acknowledgements&rdquo;,
&ldquo;Dedications&rdquo;, or &ldquo;History&rdquo;, the requirement (section 4) to Preserve
its Title (section 1) will typically require changing the actual
title.
</p>
</li><li> TERMINATION

<p>You may not copy, modify, sublicense, or distribute the Document
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense, or distribute it is void, and
will automatically terminate your rights under this License.
</p>
<p>However, if you cease all violation of this License, then your license
from a particular copyright holder is reinstated (a) provisionally,
unless and until the copyright holder explicitly and finally
terminates your license, and (b) permanently, if the copyright holder
fails to notify you of the violation by some reasonable means prior to
60 days after the cessation.
</p>
<p>Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.
</p>
<p>Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, receipt of a copy of some or all of the same material does
not give you any rights to use it.
</p>
</li><li> FUTURE REVISIONS OF THIS LICENSE

<p>The Free Software Foundation may publish new, revised versions
of the GNU Free Documentation License from time to time.  Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.  See
<a href="https://www.gnu.org/licenses/">https://www.gnu.org/licenses/</a>.
</p>
<p>Each version of the License is given a distinguishing version number.
If the Document specifies that a particular numbered version of this
License &ldquo;or any later version&rdquo; applies to it, you have the option of
following the terms and conditions either of that specified version or
of any later version that has been published (not as a draft) by the
Free Software Foundation.  If the Document does not specify a version
number of this License, you may choose any version ever published (not
as a draft) by the Free Software Foundation.  If the Document
specifies that a proxy can decide which future versions of this
License can be used, that proxy&rsquo;s public statement of acceptance of a
version permanently authorizes you to choose that version for the
Document.
</p>
</li><li> RELICENSING

<p>&ldquo;Massive Multiauthor Collaboration Site&rdquo; (or &ldquo;MMC Site&rdquo;) means any
World Wide Web server that publishes copyrightable works and also
provides prominent facilities for anybody to edit those works.  A
public wiki that anybody can edit is an example of such a server.  A
&ldquo;Massive Multiauthor Collaboration&rdquo; (or &ldquo;MMC&rdquo;) contained in the
site means any set of copyrightable works thus published on the MMC
site.
</p>
<p>&ldquo;CC-BY-SA&rdquo; means the Creative Commons Attribution-Share Alike 3.0
license published by Creative Commons Corporation, a not-for-profit
corporation with a principal place of business in San Francisco,
California, as well as future copyleft versions of that license
published by that same organization.
</p>
<p>&ldquo;Incorporate&rdquo; means to publish or republish a Document, in whole or
in part, as part of another Document.
</p>
<p>An MMC is &ldquo;eligible for relicensing&rdquo; if it is licensed under this
License, and if all works that were first published under this License
somewhere other than this MMC, and subsequently incorporated in whole
or in part into the MMC, (1) had no cover texts or invariant sections,
and (2) were thus incorporated prior to November 1, 2008.
</p>
<p>The operator of an MMC Site may republish an MMC contained in the site
under CC-BY-SA on the same site at any time before August 1, 2009,
provided the MMC is eligible for relicensing.
</p>
</li></ol>

<a name="ADDENDUM_003a-How-to-use-this-License-for-your-documents"></a>
<h3 class="heading">ADDENDUM: How to use this License for your documents</h3>

<p>To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and
license notices just after the title page:
</p>
<div class="smallexample">
<pre class="smallexample">  Copyright (C)  <var>year</var>  <var>your name</var>.
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.3
  or any later version published by the Free Software Foundation;
  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
  Texts.  A copy of the license is included in the section entitled ``GNU
  Free Documentation License''.
</pre></div>

<p>If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the &ldquo;with&hellip;Texts.&rdquo; line with this:
</p>
<div class="smallexample">
<pre class="smallexample">    with the Invariant Sections being <var>list their titles</var>, with
    the Front-Cover Texts being <var>list</var>, and with the Back-Cover Texts
    being <var>list</var>.
</pre></div>

<p>If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.
</p>
<p>If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License,
to permit their use in free software.
</p>

<hr>
<a name="Index"></a>
<div class="header">
<p>
Previous: <a href="#GNU-Free-Documentation-License" accesskey="p" rel="prev">GNU Free Documentation License</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Index-1"></a>
<h2 class="unnumbered">Index</h2>

<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Index_cp_letter-A"><b>A</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-B"><b>B</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-C"><b>C</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-D"><b>D</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-E"><b>E</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-F"><b>F</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-I"><b>I</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-L"><b>L</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-M"><b>M</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-O"><b>O</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-P"><b>P</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-R"><b>R</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-S"><b>S</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-T"><b>T</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-U"><b>U</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-V"><b>V</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-W"><b>W</b></a>
 &nbsp; 
</td></tr></table>
<table class="index-cp" border="0">
<tr><td></td><th align="left">Index Entry</th><td>&nbsp;</td><th align="left"> Section</th></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-A">A</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-access-diagnostic-object">access diagnostic object</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-add-a-log-message">add a log message</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-adding-support-for-a-new-syntax-check-tool">adding support for a new syntax check tool</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Adding-support-for-a-new-syntax-check-tool">Adding support for a new syntax check tool</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-adding-support-for-C-_0028gcc_002bmake_0029">adding support for C (gcc+make)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Example_002d_002d_002dConfiguring-a-tool-called-via-make">Example---Configuring a tool called via make</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-adding-support-for-perl">adding support for perl</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Example_002d_002d_002dConfiguring-a-tool-called-directly">Example---Configuring a tool called directly</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-B">B</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-backend-exceptions">backend exceptions</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-backend-functions">backend functions</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-functions">Backend functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-backend_002c-annotated-example">backend, annotated example</a>:</td><td>&nbsp;</td><td valign="top"><a href="#An-annotated-example-backend">An annotated example backend</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-backends_002c-disabled">backends, disabled</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-bitmap-of-diagnostic">bitmap of diagnostic</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-buffer-position-from-line-and-column-number">buffer position from line and column number</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-buildfile_002c-locating">buildfile, locating</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Locating-the-buildfile">Locating the buildfile</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-C">C</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-collect-diagnostic-objects">collect diagnostic objects</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-create-diagnostic-object">create diagnostic object</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-customizable-variables">customizable variables</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-customizing-error-types">customizing error types</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-D">D</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-disabled-backends">disabled backends</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-E">E</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-error-types_002c-customization">error types, customization</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-example-of-backend">example of backend</a>:</td><td>&nbsp;</td><td valign="top"><a href="#An-annotated-example-backend">An annotated example backend</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-extending-flymake">extending flymake</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Extending-Flymake">Extending Flymake</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-F">F</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake-logging">flymake logging</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dcategory"><code>flymake-category</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiag_002dregion"><code>flymake-diag-region</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dbackend"><code>flymake-diagnostic-backend</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dbeg"><code>flymake-diagnostic-beg</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dbuffer"><code>flymake-diagnostic-buffer</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dend"><code>flymake-diagnostic-end</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dfunctions"><code>flymake-diagnostic-functions</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-functions">Backend functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dtext"><code>flymake-diagnostic-text</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostic_002dtypes_002dalist"><code>flymake-diagnostic-types-alist</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostics"><code>flymake-diagnostics</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddiagnostics-1"><code>flymake-diagnostics</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002ddisabled_002dbackends"><code>flymake-disabled-backends</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002derror"><code>flymake-error</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002derror-1"><code>flymake-error</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002derror_002dbitmap"><code>flymake-error-bitmap</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dfringe_002dindicator_002dposition"><code>flymake-fringe-indicator-position</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dlog"><code>flymake-log</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dmake_002ddiagnostic"><code>flymake-make-diagnostic</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dno_002dchanges_002dtimeout"><code>flymake-no-changes-timeout</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dnote"><code>flymake-note</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dnote-1"><code>flymake-note</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dallowed_002dfile_002dname_002dmasks"><code>flymake-proc-allowed-file-name-masks</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dcheck_002dfile_002dlimit"><code>flymake-proc-check-file-limit</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dcompilation_002dprevents_002dsyntax_002dcheck"><code>flymake-proc-compilation-prevents-syntax-check</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dcompile"><code>flymake-proc-compile</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Interaction-with-other-modes">Interaction with other modes</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002ddiagnostic_002dtype_002dpred"><code>flymake-proc-diagnostic-type-pred</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002derr_002dline_002dpatterns"><code>flymake-proc-err-line-patterns</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dfind_002dbuildfile"><code>flymake-proc-find-buildfile</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Locating-the-buildfile">Locating the buildfile</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dget_002dproject_002dinclude_002ddirs_002dfunction"><code>flymake-proc-get-project-include-dirs-function</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dlegacy_002dbackend"><code>flymake-proc-legacy-backend</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#The-legacy-Proc-backend">The legacy Proc backend</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dmaster_002dfile_002dcount_002dlimit"><code>flymake-proc-master-file-count-limit</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dproc_002dmaster_002dfile_002ddirs"><code>flymake-proc-master-file-dirs</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dreporting_002dbackends"><code>flymake-reporting-backends</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002drunning_002dbackends"><code>flymake-running-backends</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dstart_002don_002dflymake_002dmode"><code>flymake-start-on-flymake-mode</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dstart_002dsyntax_002dcheck_002don_002dnewline"><code>flymake-start-syntax-check-on-newline</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dwarning"><code>flymake-warning</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dwarning-1"><code>flymake-warning</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dwarning_002dbitmap"><code>flymake-warning-bitmap</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-flymake_002dwrap_002daround"><code>flymake-wrap-around</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-I">I</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-include-directories-_0028C_002fC_002b_002b-specific_0029">include directories (C/C++ specific)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Getting-the-include-directories">Getting the include directories</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-interaction-with-compile-mode_002c-legacy-proc-backend">interaction with compile mode, legacy proc backend</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Interaction-with-other-modes">Interaction with other modes</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-interaction-with-other-modes_002c-legacy-proc-backend">interaction with other modes, legacy proc backend</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Interaction-with-other-modes">Interaction with other modes</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-L">L</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-legacy-proc-backend">legacy proc backend</a>:</td><td>&nbsp;</td><td valign="top"><a href="#The-legacy-Proc-backend">The legacy Proc backend</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-locating-a-master-file">locating a master file</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Locating-a-master-file">Locating a master file</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-locating-the-buildfile">locating the buildfile</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Locating-the-buildfile">Locating the buildfile</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-logging">logging</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-M">M</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-Makefile_002c-locating">Makefile, locating</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Locating-the-buildfile">Locating the buildfile</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-master-file">master file</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Implementation-overview">Implementation overview</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-master-file_002c-locating">master file, locating</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Locating-a-master-file">Locating a master file</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-O">O</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-overview-of-flymake">overview of flymake</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Using-Flymake">Using Flymake</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-P">P</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-parsing-the-output_002c-legacy-proc-backend">parsing the output, legacy proc backend</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Parsing-the-output">Parsing the output</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-predefined-diagnostic-types">predefined diagnostic types</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-proc-backend-customization-variables">proc backend customization variables</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Proc-customization-variables">Proc customization variables</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-R">R</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-reset-disabled-backends">reset disabled backends</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-S">S</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-severity-of-diagnostic">severity of diagnostic</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-error-types">Flymake error types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-syntax-check-models">syntax check models</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Implementation-overview">Implementation overview</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-syntax-check-process_002c-legacy-proc-backend">syntax check process, legacy proc backend</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Starting-the-syntax-check-process">Starting the syntax check process</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-Syntax-check-statuses">Syntax check statuses</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Syntax-check-statuses">Syntax check statuses</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-T">T</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-temporary-copy-of-the-buffer">temporary copy of the buffer</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Making-a-temporary-copy">Making a temporary copy</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-U">U</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-using-flymake">using flymake</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Using-Flymake">Using Flymake</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-utility-functions">utility functions</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Flymake-utility-functions">Flymake utility functions</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-V">V</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-variables-for-customizing-flymake">variables for customizing flymake</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Customizable-variables">Customizable variables</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-W">W</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-warning_002dminimum_002dlevel"><code>warning-minimum-level</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-warning_002dminimum_002dlog_002dlevel"><code>warning-minimum-log-level</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Backend-exceptions">Backend exceptions</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
</table>
<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Index_cp_letter-A"><b>A</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-B"><b>B</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-C"><b>C</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-D"><b>D</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-E"><b>E</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-F"><b>F</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-I"><b>I</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-L"><b>L</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-M"><b>M</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-O"><b>O</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-P"><b>P</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-R"><b>R</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-S"><b>S</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-T"><b>T</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-U"><b>U</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-V"><b>V</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-W"><b>W</b></a>
 &nbsp; 
</td></tr></table>

<hr>



</body>
</html>
