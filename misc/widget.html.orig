<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<!-- Copyright (C) 2000-2016 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being "A GNU Manual",
and with the Back-Cover Texts as in (a) below.  A copy of the license
is included in the section entitled "GNU Free Documentation License".

(a) The FSF's Back-Cover Text is: "You have the freedom to copy and
modify this GNU manual." -->
<!-- Created by GNU Texinfo 6.3, http://www.gnu.org/software/texinfo/ -->
<head>
<title>The Emacs Widget Library</title>

<meta name="description" content="The Emacs Widget Library">
<meta name="keywords" content="The Emacs Widget Library">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">
<meta name="Generator" content="makeinfo">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="#Top" rel="start" title="Top">
<link href="#Index" rel="index" title="Index">
<link href="#SEC_Contents" rel="contents" title="Table of Contents">
<link href="dir.html#Top" rel="up" title="(dir)">
<style type="text/css">
<!--
a.summary-letter {text-decoration: none}
blockquote.indentedblock {margin-right: 0em}
blockquote.smallindentedblock {margin-right: 0em; font-size: smaller}
blockquote.smallquotation {font-size: smaller}
div.display {margin-left: 3.2em}
div.example {margin-left: 3.2em}
div.lisp {margin-left: 3.2em}
div.smalldisplay {margin-left: 3.2em}
div.smallexample {margin-left: 3.2em}
div.smalllisp {margin-left: 3.2em}
kbd {font-style: oblique}
pre.display {font-family: inherit}
pre.format {font-family: inherit}
pre.menu-comment {font-family: serif}
pre.menu-preformatted {font-family: serif}
pre.smalldisplay {font-family: inherit; font-size: smaller}
pre.smallexample {font-size: smaller}
pre.smallformat {font-family: inherit; font-size: smaller}
pre.smalllisp {font-size: smaller}
span.nolinebreak {white-space: nowrap}
span.roman {font-family: initial; font-weight: normal}
span.sansserif {font-family: sans-serif; font-weight: normal}
ul.no-bullet {list-style: none}
-->
</style>


</head>

<body lang="en">
<h1 class="settitle" align="center">The Emacs Widget Library</h1>





<a name="SEC_Contents"></a>
<h2 class="contents-heading">Table of Contents</h2>

<div class="contents">

<ul class="no-bullet">
  <li><a name="toc-Introduction-1" href="#Introduction">1 Introduction</a></li>
  <li><a name="toc-User-Interface-1" href="#User-Interface">2 User Interface</a>
  <ul class="no-bullet">
    <li><a name="toc-Editable-Text-Fields" href="#Editable-Text-Fields">2.1 Editable Text Fields</a></li>
    <li><a name="toc-Buttons" href="#Buttons">2.2 Buttons</a></li>
    <li><a name="toc-Navigation" href="#Navigation">2.3 Navigation</a></li>
  </ul></li>
  <li><a name="toc-Programming-Example-1" href="#Programming-Example">3 Programming Example</a></li>
  <li><a name="toc-Setting-Up-the-Buffer-1" href="#Setting-Up-the-Buffer">4 Setting Up the Buffer</a></li>
  <li><a name="toc-Basic-Types-1" href="#Basic-Types">5 Basic Types</a>
  <ul class="no-bullet">
    <li><a name="toc-The-link-Widget" href="#link">5.1 The <code>link</code> Widget</a></li>
    <li><a name="toc-The-url_002dlink-Widget" href="#url_002dlink">5.2 The <code>url-link</code> Widget</a></li>
    <li><a name="toc-The-info_002dlink-Widget" href="#info_002dlink">5.3 The <code>info-link</code> Widget</a></li>
    <li><a name="toc-The-push_002dbutton-Widget" href="#push_002dbutton">5.4 The <code>push-button</code> Widget</a></li>
    <li><a name="toc-The-editable_002dfield-Widget" href="#editable_002dfield">5.5 The <code>editable-field</code> Widget</a></li>
    <li><a name="toc-The-text-Widget" href="#text">5.6 The <code>text</code> Widget</a></li>
    <li><a name="toc-The-menu_002dchoice-Widget" href="#menu_002dchoice">5.7 The <code>menu-choice</code> Widget</a></li>
    <li><a name="toc-The-radio_002dbutton_002dchoice-Widget" href="#radio_002dbutton_002dchoice">5.8 The <code>radio-button-choice</code> Widget</a></li>
    <li><a name="toc-The-item-Widget" href="#item">5.9 The <code>item</code> Widget</a></li>
    <li><a name="toc-The-choice_002ditem-Widget" href="#choice_002ditem">5.10 The <code>choice-item</code> Widget</a></li>
    <li><a name="toc-The-toggle-Widget" href="#toggle">5.11 The <code>toggle</code> Widget</a></li>
    <li><a name="toc-The-checkbox-Widget" href="#checkbox">5.12 The <code>checkbox</code> Widget</a></li>
    <li><a name="toc-The-checklist-Widget" href="#checklist">5.13 The <code>checklist</code> Widget</a></li>
    <li><a name="toc-The-editable_002dlist-Widget" href="#editable_002dlist">5.14 The <code>editable-list</code> Widget</a></li>
    <li><a name="toc-The-group-Widget" href="#group">5.15 The <code>group</code> Widget</a></li>
  </ul></li>
  <li><a name="toc-Sexp-Types-1" href="#Sexp-Types">6 Sexp Types</a>
  <ul class="no-bullet">
    <li><a name="toc-The-Constant-Widgets" href="#constants">6.1 The Constant Widgets</a></li>
    <li><a name="toc-Generic-Sexp-Widget" href="#generic">6.2 Generic Sexp Widget</a></li>
    <li><a name="toc-Atomic-Sexp-Widgets" href="#atoms">6.3 Atomic Sexp Widgets</a></li>
    <li><a name="toc-Composite-Sexp-Widgets" href="#composite">6.4 Composite Sexp Widgets</a></li>
  </ul></li>
  <li><a name="toc-Properties" href="#Widget-Properties">7 Properties</a></li>
  <li><a name="toc-Defining-New-Widgets-1" href="#Defining-New-Widgets">8 Defining New Widgets</a></li>
  <li><a name="toc-Widget-Browser-1" href="#Widget-Browser">9 Widget Browser</a></li>
  <li><a name="toc-Widget-Minor-Mode-1" href="#Widget-Minor-Mode">10 Widget Minor Mode</a></li>
  <li><a name="toc-Utilities-1" href="#Utilities">11 Utilities</a></li>
  <li><a name="toc-Wishlist" href="#Widget-Wishlist">12 Wishlist</a></li>
  <li><a name="toc-GNU-Free-Documentation-License-1" href="#GNU-Free-Documentation-License">Appendix A GNU Free Documentation License</a></li>
  <li><a name="toc-Index-1" href="#Index">Index</a></li>
</ul>
</div>


<a name="Top"></a>
<div class="header">
<p>
Next: <a href="#Introduction" accesskey="n" rel="next">Introduction</a>, Up: <a href="dir.html#Top" accesskey="u" rel="up">(dir)</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-Emacs-Widget-Library"></a>
<h1 class="top">The Emacs Widget Library</h1>

<p>Copyright &copy; 2000&ndash;2016 Free Software Foundation, Inc.
</p>
<blockquote>
<p>Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being &ldquo;A GNU Manual&rdquo;,
and with the Back-Cover Texts as in (a) below.  A copy of the license
is included in the section entitled &ldquo;GNU Free Documentation License&rdquo;.
</p>
<p>(a) The FSF&rsquo;s Back-Cover Text is: &ldquo;You have the freedom to copy and
modify this GNU manual.&rdquo;
</p></blockquote>


<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#Introduction" accesskey="1">Introduction</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#User-Interface" accesskey="2">User Interface</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Programming-Example" accesskey="3">Programming Example</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Setting-Up-the-Buffer" accesskey="4">Setting Up the Buffer</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Basic-Types" accesskey="5">Basic Types</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Sexp-Types" accesskey="6">Sexp Types</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Widget-Properties" accesskey="7">Widget Properties</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Defining-New-Widgets" accesskey="8">Defining New Widgets</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Widget-Browser" accesskey="9">Widget Browser</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Widget-Minor-Mode">Widget Minor Mode</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Utilities">Utilities</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Widget-Wishlist">Widget Wishlist</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#GNU-Free-Documentation-License">GNU Free Documentation License</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#Index">Index</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="Introduction"></a>
<div class="header">
<p>
Next: <a href="#User-Interface" accesskey="n" rel="next">User Interface</a>, Previous: <a href="#Top" accesskey="p" rel="prev">Top</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Introduction-1"></a>
<h2 class="chapter">1 Introduction</h2>

<p>Most graphical user interface toolkits provide a number of standard
user interface controls (sometimes known as &ldquo;widgets&rdquo; or &ldquo;gadgets&rdquo;).
Emacs doesn&rsquo;t really support anything like this, except for an
incredibly powerful text &ldquo;widget.&rdquo;  On the other hand, Emacs does
provide the necessary primitives to implement many other widgets
within a text buffer.  The <code>widget</code> package simplifies this task.
</p>
<a name="index-basic-widgets"></a>
<a name="index-widgets_002c-basic-types"></a>
<p>The basic widgets are:
</p>
<dl compact="compact">
<dt><code>link</code></dt>
<dd><p>Areas of text with an associated action.  Intended for hypertext links
embedded in text.
</p></dd>
<dt><code>push-button</code></dt>
<dd><p>Like link, but intended for stand-alone buttons.
</p></dd>
<dt><code>editable-field</code></dt>
<dd><p>An editable text field.  It can be either variable or fixed length.
</p></dd>
<dt><code>menu-choice</code></dt>
<dd><p>Allows the user to choose one of multiple options from a menu, each
option is itself a widget.  Only the selected option will be visible in
the buffer.
</p></dd>
<dt><code>radio-button-choice</code></dt>
<dd><p>Allows the user to choose one of multiple options by activating radio
buttons.  The options are implemented as widgets.  All options will be
visible in the buffer.
</p></dd>
<dt><code>item</code></dt>
<dd><p>A simple constant widget intended to be used in the <code>menu-choice</code> and
<code>radio-button-choice</code> widgets.
</p></dd>
<dt><code>choice-item</code></dt>
<dd><p>A button item only intended for use in choices.  When invoked, the user
will be asked to select another option from the choice widget.
</p></dd>
<dt><code>toggle</code></dt>
<dd><p>A simple &lsquo;<samp>on</samp>&rsquo;/&lsquo;<samp>off</samp>&rsquo; switch.
</p></dd>
<dt><code>checkbox</code></dt>
<dd><p>A checkbox (&lsquo;<samp>[ ]</samp>&rsquo;/&lsquo;<samp>[X]</samp>&rsquo;).
</p></dd>
<dt><code>editable-list</code></dt>
<dd><p>Create an editable list.  The user can insert or delete items in the
list.  Each list item is itself a widget.
</p></dd>
</dl>

<p>Now, of what possible use can support for widgets be in a text editor?
I&rsquo;m glad you asked.  The answer is that widgets are useful for
implementing forms.  A <em>form</em> in Emacs is a buffer where the user is
supposed to fill out a number of fields, each of which has a specific
meaning.  The user is not supposed to change or delete any of the text
between the fields.  Examples of forms in Emacs are the <samp>forms</samp>
package (of course), the customize buffers, the mail and news compose
modes, and the <acronym>HTML</acronym> form support in the <samp>w3</samp> browser.
</p>
<a name="index-widget-library_002c-why-use-it"></a>
<p>The advantages for a programmer of using the <code>widget</code> package to
implement forms are:
</p>
<ol>
<li> More complex fields than just editable text are supported.
</li><li> You can give the users immediate feedback if they enter invalid data in a
text field, and sometimes prevent entering invalid data.
</li><li> You can have fixed sized fields, thus allowing multiple fields to be
lined up in columns.
</li><li> It is simple to query or set the value of a field.
</li><li> Editing happens in the buffer, not in the mini-buffer.
</li><li> Packages using the library get a uniform look, making them easier for
the user to learn.
</li><li> As support for embedded graphics improve, the widget library will be
extended to use the GUI features.  This means that your code using the
widget library will also use the new graphic features automatically.
</li></ol>

<hr>
<a name="User-Interface"></a>
<div class="header">
<p>
Next: <a href="#Programming-Example" accesskey="n" rel="next">Programming Example</a>, Previous: <a href="#Introduction" accesskey="p" rel="prev">Introduction</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="User-Interface-1"></a>
<h2 class="chapter">2 User Interface</h2>

<p>A form consists of read only text for documentation and some fields,
where each field contains two parts, a tag and a value.  The tags are
used to identify the fields, so the documentation can refer to the
&lsquo;<samp>foo field</samp>&rsquo;, meaning the field tagged with &lsquo;<samp>Foo</samp>&rsquo;. Here is an
example form:
</p>
<div class="example">
<pre class="example">Here is some documentation.

Name: <i>My Name</i>     <strong>Choose</strong>: This option
Address:  <i>Some Place
In some City
Some country.</i>

See also <b>_other work_</b> for more information.

Numbers: count to three below
<b>[INS]</b> <b>[DEL]</b> <i>One</i>
<b>[INS]</b> <b>[DEL]</b> <i>Eh, two?</i>
<b>[INS]</b> <b>[DEL]</b> <i>Five!</i>
<b>[INS]</b>

Select multiple:

<b>[X]</b> This
<b>[ ]</b> That
<b>[X]</b> Thus

Select one:

<b>(*)</b> One
<b>( )</b> Another One.
<b>( )</b> A Final One.

<b>[Apply Form]</b> <b>[Reset Form]</b>
</pre></div>

<p>The top level widgets in this example are tagged &lsquo;<samp>Name</samp>&rsquo;,
&lsquo;<samp>Choose</samp>&rsquo;, &lsquo;<samp>Address</samp>&rsquo;, &lsquo;<samp>_other work_</samp>&rsquo;, &lsquo;<samp>Numbers</samp>&rsquo;,
&lsquo;<samp>Select multiple</samp>&rsquo;, &lsquo;<samp>Select one</samp>&rsquo;, &lsquo;<samp>[Apply Form]</samp>&rsquo;, and
&lsquo;<samp>[Reset Form]</samp>&rsquo;.  There are basically two things the user can do
within a form, namely editing the editable text fields and activating
the buttons.
</p>
<a name="Editable-Text-Fields"></a>
<h3 class="section">2.1 Editable Text Fields</h3>

<p>In the example, the value for the &lsquo;<samp>Name</samp>&rsquo; is most likely displayed
in an editable text field, and so are values for each of the members of
the &lsquo;<samp>Numbers</samp>&rsquo; list.  All the normal Emacs editing operations are
available for editing these fields.  The only restriction is that each
change you make must be contained within a single editable text field.
For example, capitalizing all text from the middle of one field to the
middle of another field is prohibited.
</p>
<p>Editable text fields are created by the <code>editable-field</code> widget.
</p>
<p><strong>Warning:</strong> In an <code>editable-field</code> widget, the editable
field must not be adjacent to another widget&mdash;that won&rsquo;t work.
You must put some text in between.  Either make this text part of
the <code>editable-field</code> widget itself, or insert it with
<code>widget-insert</code>.
</p>
<p>The <code>:format</code> keyword is useful for generating the necessary
text; for instance, if you give it a value of <code>&quot;Name: %v &quot;</code>,
the &lsquo;<samp>Name: </samp>&rsquo; part will provide the necessary separating text
before the field and the trailing space will provide the
separating text after the field.  If you don&rsquo;t include the
<code>:size</code> keyword, the field will extend to the end of the
line, and the terminating newline will provide separation after.
</p>
<p><strong>Warning:</strong> In an <code>editable-field</code> widget, the &lsquo;<samp>%v</samp>&rsquo; escape
must be preceded by some other text in the <code>:format</code> string
(if specified).
</p>
<p>The editing text fields are highlighted with the
<code>widget-field-face</code> face, making them easy to find.
</p>
<dl>
<dt><a name="index-widget_002dfield_002dface"></a>Face: <strong>widget-field-face</strong></dt>
<dd><p>Face used for other editing fields.
</p></dd></dl>

<a name="Buttons"></a>
<h3 class="section">2.2 Buttons</h3>

<a name="index-widget-buttons"></a>
<a name="index-button-widgets"></a>
<p>Some portions of the buffer have an associated <em>action</em>, which can
be <em>invoked</em> by a standard key or mouse command.  These portions
are called <em>buttons</em>.  The default commands for activating a button
are:
</p>
<dl compact="compact">
<dt><kbd><span class="key">RET</span></kbd></dt>
<dd><dl>
<dt><a name="index-widget_002dbutton_002dpress"></a>Command: <strong>widget-button-press</strong> <em><var>pos</var> &amp;optional <var>event</var></em></dt>
<dd><p>Invoke the button at <var>pos</var>, defaulting to point.
If point is not located on a button, invoke the binding in
<code>widget-global-map</code> (by default the global map).
</p></dd></dl>

<a name="index-mouse_002d2-_0028on-button-widgets_0029"></a>
</dd>
<dt><kbd>mouse-2</kbd></dt>
<dd><dl>
<dt><a name="index-widget_002dbutton_002dclick"></a>Command: <strong>widget-button-click</strong> <em><var>event</var></em></dt>
<dd><p>Invoke the button at the location of the mouse pointer.  If the mouse
pointer is located in an editable text field, invoke the binding in
<code>widget-global-map</code> (by default the global map).
</p></dd></dl>
</dd>
</dl>

<p>There are several different kind of buttons, all of which are present in
the example:
</p>
<dl compact="compact">
<dd><a name="index-option-field-tag"></a>
</dd>
<dt><em>The Option Field Tags</em></dt>
<dd><p>When you invoke one of these buttons, you will be asked to choose
between a number of different options.  This is how you edit an option
field.  Option fields are created by the <code>menu-choice</code> widget.  In
the example, &lsquo;<samp><b>Choose</b></samp>&rsquo; is an option field tag.
</p></dd>
<dt><em>The &lsquo;<samp><b>[INS]</b></samp>&rsquo; and &lsquo;<samp><b>[DEL]</b></samp>&rsquo; buttons</em></dt>
<dd><p>Activating these will insert or delete elements from an editable list.
The list is created by the <code>editable-list</code> widget.
<a name="index-embedded-buttons"></a>
</p></dd>
<dt><em>Embedded Buttons</em></dt>
<dd><p>The &lsquo;<samp><b>_other work_</b></samp>&rsquo; is an example of an embedded
button.  Embedded buttons are not associated with any fields, but can serve
any purpose, such as implementing hypertext references.  They are
usually created by the <code>link</code> widget.
</p></dd>
<dt><em>The &lsquo;<samp><b>[ ]</b></samp>&rsquo; and &lsquo;<samp><b>[X]</b></samp>&rsquo; buttons</em></dt>
<dd><p>Activating one of these will convert it to the other.  This is useful
for implementing multiple-choice fields.  You can create them with the
<code>checkbox</code> widget.
</p></dd>
<dt><em>The &lsquo;<samp><b>( )</b></samp>&rsquo; and &lsquo;<samp><b>(*)</b></samp>&rsquo; buttons</em></dt>
<dd><p>Only one radio button in a <code>radio-button-choice</code> widget can be
selected at any time.  When you invoke one of the unselected radio
buttons, it will be selected and the previous selected radio button will
become unselected.
</p></dd>
<dt><em>The &lsquo;<samp><b>[Apply Form]</b></samp>&rsquo; and &lsquo;<samp><b>[Reset Form]</b></samp>&rsquo; buttons</em></dt>
<dd><p>These are explicit buttons made with the <code>push-button</code> widget.  The
main difference from the <code>link</code> widget is that the buttons will be
displayed as GUI buttons when possible.
</p></dd>
</dl>

<p>To make them easier to locate, buttons are emphasized in the buffer.
</p>
<dl>
<dt><a name="index-widget_002dbutton_002dface"></a>Face: <strong>widget-button-face</strong></dt>
<dd><p>Face used for buttons.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dmouse_002dface"></a>User Option: <strong>widget-mouse-face</strong></dt>
<dd><p>Face used for highlighting a button when the mouse pointer moves across
it.
</p></dd></dl>

<a name="Navigation"></a>
<h3 class="section">2.3 Navigation</h3>

<p>You can use all the normal Emacs commands to move around in a form
buffer, plus you will have these additional commands:
</p>
<dl compact="compact">
<dt><kbd><span class="key">TAB</span></kbd></dt>
<dd><dl>
<dt><a name="index-widget_002dforward"></a>Command: <strong>widget-forward</strong> <em>&amp;optional count</em></dt>
<dd><p>Move point <var>count</var> buttons or editing fields forward.
</p></dd></dl>
</dd>
<dt><kbd><kbd>M-<span class="key">TAB</span></kbd></kbd></dt>
<dt><kbd><kbd>S-<span class="key">TAB</span></kbd></kbd></dt>
<dd><dl>
<dt><a name="index-widget_002dbackward"></a>Command: <strong>widget-backward</strong> <em>&amp;optional count</em></dt>
<dd><p>Move point <var>count</var> buttons or editing fields backward.
</p></dd></dl>
</dd>
</dl>

<hr>
<a name="Programming-Example"></a>
<div class="header">
<p>
Next: <a href="#Setting-Up-the-Buffer" accesskey="n" rel="next">Setting Up the Buffer</a>, Previous: <a href="#User-Interface" accesskey="p" rel="prev">User Interface</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Programming-Example-1"></a>
<h2 class="chapter">3 Programming Example</h2>

<a name="index-widgets_002c-programming-example"></a>
<a name="index-example-of-using-widgets"></a>
<p>Here is the code to implement the user interface example (see <a href="#User-Interface">User Interface</a>).
</p>
<div class="lisp">
<pre class="lisp">(require 'widget)

(eval-when-compile
  (require 'wid-edit))

(defvar widget-example-repeat)

(defun widget-example ()
  &quot;Create the widgets from the Widget manual.&quot;
  (interactive)
  (switch-to-buffer &quot;*Widget Example*&quot;)
  (kill-all-local-variables)
  (make-local-variable 'widget-example-repeat)
  (let ((inhibit-read-only t))
    (erase-buffer))
  (remove-overlays)
  (widget-insert &quot;Here is some documentation.\n\n&quot;)
  (widget-create 'editable-field
                 :size 13
                 :format &quot;Name: %v &quot; ; Text after the field!
                 &quot;My Name&quot;)
  (widget-create 'menu-choice
                 :tag &quot;Choose&quot;
                 :value &quot;This&quot;
                 :help-echo &quot;Choose me, please!&quot;
                 :notify (lambda (widget &amp;rest ignore)
                           (message &quot;%s is a good choice!&quot;
                                    (widget-value widget)))
                 '(item :tag &quot;This option&quot; :value &quot;This&quot;)
                 '(choice-item &quot;That option&quot;)
                 '(editable-field :menu-tag &quot;No option&quot; &quot;Thus option&quot;))
  (widget-create 'editable-field
                 :format &quot;Address: %v&quot;
                 &quot;Some Place\nIn some City\nSome country.&quot;)
  (widget-insert &quot;\nSee also &quot;)
  (widget-create 'link
                 :notify (lambda (&amp;rest ignore)
                           (widget-value-set widget-example-repeat
                                             '(&quot;En&quot; &quot;To&quot; &quot;Tre&quot;))
                           (widget-setup))
                 &quot;other work&quot;)
  (widget-insert
    &quot; for more information.\n\nNumbers: count to three below\n&quot;)
  (setq widget-example-repeat
        (widget-create 'editable-list
                       :entry-format &quot;%i %d %v&quot;
                       :notify
                       (lambda (widget &amp;rest ignore)
                         (let ((old (widget-get widget
                                                ':example-length))
                               (new (length (widget-value widget))))
                           (unless (eq old new)
                             (widget-put widget ':example-length new)
                             (message &quot;You can count to %d.&quot; new))))
                       :value '(&quot;One&quot; &quot;Eh, two?&quot; &quot;Five!&quot;)
                       '(editable-field :value &quot;three&quot;)))
  (widget-insert &quot;\n\nSelect multiple:\n\n&quot;)
  (widget-create 'checkbox t)
  (widget-insert &quot; This\n&quot;)
  (widget-create 'checkbox nil)
  (widget-insert &quot; That\n&quot;)
  (widget-create 'checkbox
                 :notify (lambda (&amp;rest ignore) (message &quot;Tickle&quot;))
                 t)
  (widget-insert &quot; Thus\n\nSelect one:\n\n&quot;)
  (widget-create 'radio-button-choice
                 :value &quot;One&quot;
                 :notify (lambda (widget &amp;rest ignore)
                           (message &quot;You selected %s&quot;
                                    (widget-value widget)))
                 '(item &quot;One&quot;) '(item &quot;Another One.&quot;)
                 '(item &quot;A Final One.&quot;))
  (widget-insert &quot;\n&quot;)
  (widget-create 'push-button
                 :notify (lambda (&amp;rest ignore)
                           (if (= (length
                                   (widget-value widget-example-repeat))
                                  3)
                               (message &quot;Congratulation!&quot;)
                             (error &quot;Three was the count!&quot;)))
                 &quot;Apply Form&quot;)
  (widget-insert &quot; &quot;)
  (widget-create 'push-button
                 :notify (lambda (&amp;rest ignore)
                           (widget-example))
                 &quot;Reset Form&quot;)
  (widget-insert &quot;\n&quot;)
  (use-local-map widget-keymap)
  (widget-setup))
</pre></div>

<hr>
<a name="Setting-Up-the-Buffer"></a>
<div class="header">
<p>
Next: <a href="#Basic-Types" accesskey="n" rel="next">Basic Types</a>, Previous: <a href="#Programming-Example" accesskey="p" rel="prev">Programming Example</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Setting-Up-the-Buffer-1"></a>
<h2 class="chapter">4 Setting Up the Buffer</h2>

<p>Widgets are created with <code>widget-create</code>, which returns a
<em>widget</em> object.  This object can be queried and manipulated by
other widget functions, until it is deleted with <code>widget-delete</code>.
After the widgets have been created, <code>widget-setup</code> must be called
to enable them.
</p>
<dl>
<dt><a name="index-widget_002dcreate"></a>Function: <strong>widget-create</strong> <em>type [ keyword argument ]&hellip;</em></dt>
<dd><p>Create and return a widget of type <var>type</var>.
The syntax for the <var>type</var> argument is described in <a href="#Basic-Types">Basic Types</a>.
</p>
<p>The keyword arguments can be used to overwrite the keyword arguments
that are part of <var>type</var>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002ddelete"></a>Function: <strong>widget-delete</strong> <em>widget</em></dt>
<dd><p>Delete <var>widget</var> and remove it from the buffer.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dsetup"></a>Function: <strong>widget-setup</strong></dt>
<dd><p>Set up a buffer to support widgets.
</p>
<p>This should be called after creating all the widgets and before allowing
the user to edit them.
</p></dd></dl>

<p>If you want to insert text outside the widgets in the form, the
recommended way to do that is with <code>widget-insert</code>.
</p>
<dl>
<dt><a name="index-widget_002dinsert"></a>Function: <strong>widget-insert</strong></dt>
<dd><p>Insert the arguments, either strings or characters, at point.
The inserted text will be read-only.
</p></dd></dl>

<p>There is a standard widget keymap which you might find useful.
</p>
<a name="index-widget_002dbutton_002dpress-1"></a>
<a name="index-widget_002dbutton_002dclick-1"></a>
<dl>
<dt><a name="index-widget_002dkeymap"></a>Const: <strong>widget-keymap</strong></dt>
<dd><p><tt class="key">TAB</tt> and <kbd>C-<span class="key">TAB</span></kbd> are bound to <code>widget-forward</code> and
<code>widget-backward</code>, respectively.  <tt class="key">RET</tt> and <kbd>mouse-2</kbd>
are bound to <code>widget-button-press</code> and
<code>widget-button-click</code>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dglobal_002dmap"></a>Variable: <strong>widget-global-map</strong></dt>
<dd><p>Keymap used by <code>widget-button-press</code> and <code>widget-button-click</code>
when not on a button.  By default this is <code>global-map</code>.
</p></dd></dl>

<hr>
<a name="Basic-Types"></a>
<div class="header">
<p>
Next: <a href="#Sexp-Types" accesskey="n" rel="next">Sexp Types</a>, Previous: <a href="#Setting-Up-the-Buffer" accesskey="p" rel="prev">Setting Up the Buffer</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Basic-Types-1"></a>
<h2 class="chapter">5 Basic Types</h2>

<p>This is the general syntax of a type specification:
</p>
<div class="example">
<pre class="example"><var>name</var> ::= (<var>name</var> [<var>keyword</var> <var>argument</var>]... <var>args</var>)
     |   <var>name</var>
</pre></div>

<p>Where, <var>name</var> is a widget name, <var>keyword</var> is the name of a
property, <var>argument</var> is the value of the property, and <var>args</var>
are interpreted in a widget specific way.
</p>
<a name="index-keyword-arguments"></a>
<p>The following keyword arguments apply to all widgets:
</p>
<dl compact="compact">
<dd><a name="index-value-keyword"></a>
</dd>
<dt><code>:value</code></dt>
<dd><p>The initial value for widgets of this type.
</p>
<a name="index-format-keyword"></a>
</dd>
<dt><code>:format</code></dt>
<dd><p>This string will be inserted in the buffer when you create a widget.
The following &lsquo;<samp>%</samp>&rsquo; escapes are available:
</p>
<dl compact="compact">
<dt>&lsquo;<samp>%[</samp>&rsquo;</dt>
<dt>&lsquo;<samp>%]</samp>&rsquo;</dt>
<dd><p>The text inside will be marked as a button.
</p>
<p>By default, the text will be shown in <code>widget-button-face</code>, and
surrounded by brackets.
</p>
<dl>
<dt><a name="index-widget_002dbutton_002dprefix"></a>User Option: <strong>widget-button-prefix</strong></dt>
<dd><p>String to prefix buttons.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dbutton_002dsuffix"></a>User Option: <strong>widget-button-suffix</strong></dt>
<dd><p>String to suffix buttons.
</p></dd></dl>

</dd>
<dt>&lsquo;<samp>%{</samp>&rsquo;</dt>
<dt>&lsquo;<samp>%}</samp>&rsquo;</dt>
<dd><p>The text inside will be displayed with the face specified by
<code>:sample-face</code>.
</p>
</dd>
<dt>&lsquo;<samp>%v</samp>&rsquo;</dt>
<dd><p>This will be replaced with the buffer representation of the widget&rsquo;s
value.  What this is depends on the widget type.
</p>
<p><strong>Warning:</strong> In an <code>editable-field</code> widget, the &lsquo;<samp>%v</samp>&rsquo; escape
must be preceded by some other text in the format string (if specified).
</p>
</dd>
<dt>&lsquo;<samp>%d</samp>&rsquo;</dt>
<dd><p>Insert the string specified by <code>:doc</code> here.
</p>
</dd>
<dt>&lsquo;<samp>%h</samp>&rsquo;</dt>
<dd><p>Like &lsquo;<samp>%d</samp>&rsquo;, with the following modifications: If the documentation
string is more than one line, it will add a button which will toggle
between showing only the first line, and showing the full text.
Furthermore, if there is no <code>:doc</code> property in the widget, it will
instead examine the <code>:documentation-property</code> property.  If it is a
lambda expression, it will be called with the widget&rsquo;s value as an
argument, and the result will be used as the documentation text.
</p>
</dd>
<dt>&lsquo;<samp>%t</samp>&rsquo;</dt>
<dd><p>Insert the string specified by <code>:tag</code> here, or the <code>princ</code>
representation of the value if there is no tag.
</p>
</dd>
<dt>&lsquo;<samp>%%</samp>&rsquo;</dt>
<dd><p>Insert a literal &lsquo;<samp>%</samp>&rsquo;.
</p></dd>
</dl>

<a name="index-button_002dface-keyword"></a>
</dd>
<dt><code>:button-face</code></dt>
<dd><p>Face used to highlight text inside %[ %] in the format.
</p>
<a name="index-button_002dprefix-keyword"></a>
<a name="index-button_002dsuffix-keyword"></a>
</dd>
<dt><code>:button-prefix</code></dt>
<dt><code>:button-suffix</code></dt>
<dd><p>Text around %[ %] in the format.
</p>
<p>These can be
</p><dl compact="compact">
<dt><em>nil</em></dt>
<dd><p>No text is inserted.
</p>
</dd>
<dt><em>a string</em></dt>
<dd><p>The string is inserted literally.
</p>
</dd>
<dt><em>a symbol</em></dt>
<dd><p>The value of the symbol is expanded according to this table.
</p></dd>
</dl>

<a name="index-doc-keyword"></a>
</dd>
<dt><code>:doc</code></dt>
<dd><p>The string inserted by the &lsquo;<samp>%d</samp>&rsquo; escape in the format
string.
</p>
<a name="index-tag-keyword"></a>
</dd>
<dt><code>:tag</code></dt>
<dd><p>The string inserted by the &lsquo;<samp>%t</samp>&rsquo; escape in the format
string.
</p>
<a name="index-tag_002dglyph-keyword"></a>
</dd>
<dt><code>:tag-glyph</code></dt>
<dd><p>Name of image to use instead of the string specified by <code>:tag</code> on
Emacsen that supports it.
</p>
<a name="index-help_002decho-keyword"></a>
</dd>
<dt><code>:help-echo</code></dt>
<dd><p>Specifies how to display a message whenever you move to the widget with
either <code>widget-forward</code> or <code>widget-backward</code> or move the mouse
over it (using the standard <code>help-echo</code> mechanism).  The argument
is either a string to display, a function of one argument, the widget,
which should return a string to display, or a form that evaluates to
such a string.
</p>
<a name="index-follow_002dlink-keyword"></a>
</dd>
<dt><code>:follow-link</code></dt>
<dd><p>Specifies how to interpret a <tt class="key">mouse-1</tt> click on the widget.
See <a href="http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Clickable-Text">Defining Clickable Text</a> in <cite>the Emacs Lisp Reference Manual</cite>.
</p>
<a name="index-indent-keyword"></a>
</dd>
<dt><code>:indent</code></dt>
<dd><p>An integer indicating the absolute number of spaces to indent children
of this widget.
</p>
<a name="index-offset-keyword"></a>
</dd>
<dt><code>:offset</code></dt>
<dd><p>An integer indicating how many extra spaces to add to the widget&rsquo;s
grandchildren compared to this widget.
</p>
<a name="index-extra_002doffset-keyword"></a>
</dd>
<dt><code>:extra-offset</code></dt>
<dd><p>An integer indicating how many extra spaces to add to the widget&rsquo;s
children compared to this widget.
</p>
<a name="index-notify-keyword"></a>
</dd>
<dt><code>:notify</code></dt>
<dd><p>A function called each time the widget or a nested widget is changed.
The function is called with two or three arguments.  The first argument
is the widget itself, the second argument is the widget that was
changed, and the third argument is the event leading to the change, if
any.
</p>
<a name="index-menu_002dtag-keyword"></a>
</dd>
<dt><code>:menu-tag</code></dt>
<dd><p>Tag used in the menu when the widget is used as an option in a
<code>menu-choice</code> widget.
</p>
<a name="index-menu_002dtag_002dget-keyword"></a>
</dd>
<dt><code>:menu-tag-get</code></dt>
<dd><p>Function used for finding the tag when the widget is used as an option
in a <code>menu-choice</code> widget.  By default, the tag used will be either the
<code>:menu-tag</code> or <code>:tag</code> property if present, or the <code>princ</code>
representation of the <code>:value</code> property if not.
</p>
<a name="index-match-keyword"></a>
</dd>
<dt><code>:match</code></dt>
<dd><p>Should be a function called with two arguments, the widget and a value,
and returning non-<code>nil</code> if the widget can represent the specified value.
</p>
<a name="index-validate-keyword"></a>
</dd>
<dt><code>:validate</code></dt>
<dd><p>A function which takes a widget as an argument, and returns <code>nil</code>
if the widget&rsquo;s current value is valid for the widget.  Otherwise it
should return the widget containing the invalid data, and set that
widget&rsquo;s <code>:error</code> property to a string explaining the error.
</p>
<p>The following predefined function can be used:
</p>
<dl>
<dt><a name="index-widget_002dchildren_002dvalidate"></a>Function: <strong>widget-children-validate</strong> <em>widget</em></dt>
<dd><p>All the <code>:children</code> of <var>widget</var> must be valid.
</p></dd></dl>

<a name="index-tab_002dorder-keyword"></a>
</dd>
<dt><code>:tab-order</code></dt>
<dd><p>Specify the order in which widgets are traversed with
<code>widget-forward</code> or <code>widget-backward</code>.  This is only partially
implemented.
</p>
<ol>
<li> Widgets with tabbing order <code>-1</code> are ignored.

</li><li> (Unimplemented) When on a widget with tabbing order <var>n</var>, go to the
next widget in the buffer with tabbing order <var>n+1</var> or <code>nil</code>,
whichever comes first.

</li><li> When on a widget with no tabbing order specified, go to the next widget
in the buffer with a positive tabbing order, or <code>nil</code>
</li></ol>

<a name="index-parent-keyword"></a>
</dd>
<dt><code>:parent</code></dt>
<dd><p>The parent of a nested widget (e.g., a <code>menu-choice</code> item or an
element of a <code>editable-list</code> widget).
</p>
<a name="index-sibling_002dargs-keyword"></a>
</dd>
<dt><code>:sibling-args</code></dt>
<dd><p>This keyword is only used for members of a <code>radio-button-choice</code> or
<code>checklist</code>.  The value should be a list of extra keyword
arguments, which will be used when creating the <code>radio-button</code> or
<code>checkbox</code> associated with this item.
</p>
</dd>
</dl>

<dl>
<dt><a name="index-widget_002dglyph_002ddirectory"></a>User Option: <strong>widget-glyph-directory</strong></dt>
<dd><p>Directory where glyphs are found.
Widget will look here for a file with the same name as specified for the
image, with either a <samp>.xpm</samp> (if supported) or <samp>.xbm</samp> extension.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dglyph_002denable"></a>User Option: <strong>widget-glyph-enable</strong></dt>
<dd><p>If non-<code>nil</code>, allow glyphs to appear on displays where they are supported.
</p></dd></dl>


<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#link" accesskey="1">link</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#url_002dlink" accesskey="2">url-link</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#info_002dlink" accesskey="3">info-link</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#push_002dbutton" accesskey="4">push-button</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#editable_002dfield" accesskey="5">editable-field</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#text" accesskey="6">text</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#menu_002dchoice" accesskey="7">menu-choice</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#radio_002dbutton_002dchoice" accesskey="8">radio-button-choice</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#item" accesskey="9">item</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#choice_002ditem">choice-item</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#toggle">toggle</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#checkbox">checkbox</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#checklist">checklist</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#editable_002dlist">editable-list</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#group">group</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="link"></a>
<div class="header">
<p>
Next: <a href="#url_002dlink" accesskey="n" rel="next">url-link</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-link-Widget"></a>
<h3 class="section">5.1 The <code>link</code> Widget</h3>
<a name="index-link-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (link [<var>keyword</var> <var>argument</var>]...  [ <var>value</var> ])
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property.  The value should be a string, which will be inserted in the
buffer.
</p>
<p>By default the link will be shown in brackets.
</p>
<dl>
<dt><a name="index-widget_002dlink_002dprefix"></a>User Option: <strong>widget-link-prefix</strong></dt>
<dd><p>String to prefix links.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dlink_002dsuffix"></a>User Option: <strong>widget-link-suffix</strong></dt>
<dd><p>String to suffix links.
</p></dd></dl>

<hr>
<a name="url_002dlink"></a>
<div class="header">
<p>
Next: <a href="#info_002dlink" accesskey="n" rel="next">info-link</a>, Previous: <a href="#link" accesskey="p" rel="prev">link</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-url_002dlink-Widget"></a>
<h3 class="section">5.2 The <code>url-link</code> Widget</h3>
<a name="index-url_002dlink-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (url-link [<var>keyword</var> <var>argument</var>]...  <var>url</var>)
</pre></div>

<a name="index-browse_002durl_002dbrowser_002dfunction_002c-and-url_002dlink-widget"></a>
<p>When this link is invoked, the <acronym>WWW</acronym> browser specified by
<code>browse-url-browser-function</code> will be called with <var>url</var>.
</p>
<hr>
<a name="info_002dlink"></a>
<div class="header">
<p>
Next: <a href="#push_002dbutton" accesskey="n" rel="next">push-button</a>, Previous: <a href="#url_002dlink" accesskey="p" rel="prev">url-link</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-info_002dlink-Widget"></a>
<h3 class="section">5.3 The <code>info-link</code> Widget</h3>
<a name="index-info_002dlink-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (info-link [<var>keyword</var> <var>argument</var>]...  <var>address</var>)
</pre></div>

<p>When this link is invoked, the built-in Info reader is started on
<var>address</var>.
</p>
<hr>
<a name="push_002dbutton"></a>
<div class="header">
<p>
Next: <a href="#editable_002dfield" accesskey="n" rel="next">editable-field</a>, Previous: <a href="#info_002dlink" accesskey="p" rel="prev">info-link</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-push_002dbutton-Widget"></a>
<h3 class="section">5.4 The <code>push-button</code> Widget</h3>
<a name="index-push_002dbutton-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (push-button [<var>keyword</var> <var>argument</var>]...  [ <var>value</var> ])
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property.  The value should be a string, which will be inserted in the
buffer.
</p>
<p>By default the tag will be shown in brackets.
</p>
<dl>
<dt><a name="index-widget_002dpush_002dbutton_002dprefix"></a>User Option: <strong>widget-push-button-prefix</strong></dt>
<dd><p>String to prefix push buttons.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dpush_002dbutton_002dsuffix"></a>User Option: <strong>widget-push-button-suffix</strong></dt>
<dd><p>String to suffix push buttons.
</p></dd></dl>

<hr>
<a name="editable_002dfield"></a>
<div class="header">
<p>
Next: <a href="#text" accesskey="n" rel="next">text</a>, Previous: <a href="#push_002dbutton" accesskey="p" rel="prev">push-button</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-editable_002dfield-Widget"></a>
<h3 class="section">5.5 The <code>editable-field</code> Widget</h3>
<a name="index-editable_002dfield-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (editable-field [<var>keyword</var> <var>argument</var>]... [ <var>value</var> ])
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property.  The value should be a string, which will be inserted in the
field.  This widget will match all string values.
</p>
<p>The following extra properties are recognized:
</p>
<dl compact="compact">
<dd><a name="index-size-keyword"></a>
</dd>
<dt><code>:size</code></dt>
<dd><p>The width of the editable field.<br>
By default the field will reach to the end of the line.
</p>
<a name="index-value_002dface-keyword"></a>
</dd>
<dt><code>:value-face</code></dt>
<dd><p>Face used for highlighting the editable field.  Default is
<code>widget-field-face</code>, see <a href="#User-Interface">User Interface</a>.
</p>
<a name="index-secret-keyword"></a>
</dd>
<dt><code>:secret</code></dt>
<dd><p>Character used to display the value.  You can set this to, e.g., <code>?*</code>
if the field contains a password or other secret information.  By
default, this is <code>nil</code>, and the value is not secret.
</p>
<a name="index-valid_002dregexp-keyword"></a>
</dd>
<dt><code>:valid-regexp</code></dt>
<dd><p>By default the <code>:validate</code> function will match the content of the
field with the value of this attribute.  The default value is <code>&quot;&quot;</code>
which matches everything.
</p>
<a name="index-keymap-keyword"></a>
<a name="index-widget_002dfield_002dkeymap"></a>
</dd>
<dt><code>:keymap</code></dt>
<dd><p>Keymap used in the editable field.  The default value is
<code>widget-field-keymap</code>, which allows you to use all the normal
editing commands, even if the buffer&rsquo;s major mode suppresses some of
them.  Pressing <tt class="key">RET</tt> invokes the function specified by
<code>:action</code>.
</p></dd>
</dl>

<hr>
<a name="text"></a>
<div class="header">
<p>
Next: <a href="#menu_002dchoice" accesskey="n" rel="next">menu-choice</a>, Previous: <a href="#editable_002dfield" accesskey="p" rel="prev">editable-field</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-text-Widget"></a>
<h3 class="section">5.6 The <code>text</code> Widget</h3>
<a name="index-text-widget"></a>

<a name="index-widget_002dtext_002dkeymap"></a>
<p>This is just like <code>editable-field</code>, but intended for multiline text
fields.  The default <code>:keymap</code> is <code>widget-text-keymap</code>, which
does not rebind the <tt class="key">RET</tt> key.
</p>
<hr>
<a name="menu_002dchoice"></a>
<div class="header">
<p>
Next: <a href="#radio_002dbutton_002dchoice" accesskey="n" rel="next">radio-button-choice</a>, Previous: <a href="#text" accesskey="p" rel="prev">text</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-menu_002dchoice-Widget"></a>
<h3 class="section">5.7 The <code>menu-choice</code> Widget</h3>
<a name="index-menu_002dchoice-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (menu-choice [<var>keyword</var> <var>argument</var>]... <var>type</var> ... )
</pre></div>

<p>The <var>type</var> argument represents each possible choice.  The widget&rsquo;s
value will be that of the chosen <var>type</var> argument.  This widget will
match any value matching at least one of the specified <var>type</var>
arguments.
</p>
<dl compact="compact">
<dd><a name="index-void-keyword"></a>
</dd>
<dt><code>:void</code></dt>
<dd><p>Widget type used as a fallback when the value does not match any of the
specified <var>type</var> arguments.
</p>
<a name="index-case_002dfold-keyword"></a>
</dd>
<dt><code>:case-fold</code></dt>
<dd><p>Set this to <code>nil</code> if you don&rsquo;t want to ignore case when prompting for a
choice through the minibuffer.
</p>
<a name="index-children-keyword"></a>
</dd>
<dt><code>:children</code></dt>
<dd><p>A list whose <small>CAR</small> is the widget representing the currently chosen
type in the buffer.
</p>
<a name="index-choice-keyword"></a>
</dd>
<dt><code>:choice</code></dt>
<dd><p>The current chosen type.
</p>
<a name="index-args-keyword"></a>
</dd>
<dt><code>:args</code></dt>
<dd><p>The list of types.
</p></dd>
</dl>

<hr>
<a name="radio_002dbutton_002dchoice"></a>
<div class="header">
<p>
Next: <a href="#item" accesskey="n" rel="next">item</a>, Previous: <a href="#menu_002dchoice" accesskey="p" rel="prev">menu-choice</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-radio_002dbutton_002dchoice-Widget"></a>
<h3 class="section">5.8 The <code>radio-button-choice</code> Widget</h3>
<a name="index-radio_002dbutton_002dchoice-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (radio-button-choice [<var>keyword</var> <var>argument</var>]...  <var>type</var> ... )
</pre></div>

<p>The component types specify the choices, with one radio button for
each.  The widget&rsquo;s value will be that of the chosen <var>type</var>
argument.  This widget matches any value that matches at least one of
the specified <var>type</var> arguments.
</p>
<p>The following extra properties are recognized.
</p>
<dl compact="compact">
<dd><a name="index-entry_002dformat-keyword"></a>
</dd>
<dt><code>:entry-format</code></dt>
<dd><p>This string will be inserted for each entry in the list.
The following &lsquo;<samp>%</samp>&rsquo; escapes are available:
</p><dl compact="compact">
<dt>&lsquo;<samp>%v</samp>&rsquo;</dt>
<dd><p>Replace with the buffer representation of the <var>type</var> widget.
</p></dd>
<dt>&lsquo;<samp>%b</samp>&rsquo;</dt>
<dd><p>Replace with the radio button.
</p></dd>
<dt>&lsquo;<samp>%%</samp>&rsquo;</dt>
<dd><p>Insert a literal &lsquo;<samp>%</samp>&rsquo;.
</p></dd>
</dl>

<a name="index-button_002dargs-keyword"></a>
</dd>
<dt><code>:button-args</code></dt>
<dd><p>A list of keywords to pass to the radio buttons.  Useful for setting,
e.g., the &lsquo;<samp>:help-echo</samp>&rsquo; for each button.
</p>
<a name="index-buttons-keyword"></a>
</dd>
<dt><code>:buttons</code></dt>
<dd><p>The widgets representing the radio buttons.
</p>
<a name="index-children-keyword-1"></a>
</dd>
<dt><code>:children</code></dt>
<dd><p>The widgets representing each type.
</p>
<a name="index-choice-keyword-1"></a>
</dd>
<dt><code>:choice</code></dt>
<dd><p>The current chosen type
</p>
<a name="index-args-keyword-1"></a>
</dd>
<dt><code>:args</code></dt>
<dd><p>The list of types.
</p></dd>
</dl>

<p>You can add extra radio button items to a <code>radio-button-choice</code>
widget after it has been created with the function
<code>widget-radio-add-item</code>.
</p>
<dl>
<dt><a name="index-widget_002dradio_002dadd_002ditem"></a>Function: <strong>widget-radio-add-item</strong> <em>widget type</em></dt>
<dd><p>Add to <code>radio-button-choice</code> widget <var>widget</var> a new radio button
item of type <var>type</var>.
</p></dd></dl>

<p>Please note that such items added after the <code>radio-button-choice</code>
widget has been created will <strong>not</strong> be properly destructed when
you call <code>widget-delete</code>.
</p>
<hr>
<a name="item"></a>
<div class="header">
<p>
Next: <a href="#choice_002ditem" accesskey="n" rel="next">choice-item</a>, Previous: <a href="#radio_002dbutton_002dchoice" accesskey="p" rel="prev">radio-button-choice</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-item-Widget"></a>
<h3 class="section">5.9 The <code>item</code> Widget</h3>
<a name="index-item-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>item</var> ::= (item [<var>keyword</var> <var>argument</var>]... <var>value</var>)
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property.  The value should be a string, which will be inserted in the
buffer.  This widget will only match the specified value.
</p>
<hr>
<a name="choice_002ditem"></a>
<div class="header">
<p>
Next: <a href="#toggle" accesskey="n" rel="next">toggle</a>, Previous: <a href="#item" accesskey="p" rel="prev">item</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-choice_002ditem-Widget"></a>
<h3 class="section">5.10 The <code>choice-item</code> Widget</h3>
<a name="index-choice_002ditem-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>item</var> ::= (choice-item [<var>keyword</var> <var>argument</var>]... <var>value</var>)
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property.  The value should be a string, which will be inserted in the
buffer as a button.  Activating the button of a <code>choice-item</code> is
equivalent to activating the parent widget.  This widget will only match
the specified value.
</p>
<hr>
<a name="toggle"></a>
<div class="header">
<p>
Next: <a href="#checkbox" accesskey="n" rel="next">checkbox</a>, Previous: <a href="#choice_002ditem" accesskey="p" rel="prev">choice-item</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-toggle-Widget"></a>
<h3 class="section">5.11 The <code>toggle</code> Widget</h3>
<a name="index-toggle-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (toggle [<var>keyword</var> <var>argument</var>]...)
</pre></div>

<p>The widget has two possible states, &lsquo;<samp>on</samp>&rsquo; and &lsquo;<samp>off</samp>&rsquo;, which
correspond to a <code>t</code> or <code>nil</code> value, respectively.
</p>
<p>The following extra properties are recognized:
</p>
<dl compact="compact">
<dt><code>:on</code></dt>
<dd><p>A string representing the &lsquo;<samp>on</samp>&rsquo; state.  By default the string
&lsquo;<samp>on</samp>&rsquo;.
</p></dd>
<dt><code>:off</code></dt>
<dd><p>A string representing the &lsquo;<samp>off</samp>&rsquo; state.  By default the string
&lsquo;<samp>off</samp>&rsquo;.
<a name="index-on_002dglyph-keyword"></a>
</p></dd>
<dt><code>:on-glyph</code></dt>
<dd><p>Name of a glyph to be used instead of the &lsquo;<samp>:on</samp>&rsquo; text string, on
emacsen that supports this.
<a name="index-off_002dglyph-keyword"></a>
</p></dd>
<dt><code>:off-glyph</code></dt>
<dd><p>Name of a glyph to be used instead of the &lsquo;<samp>:off</samp>&rsquo; text string, on
emacsen that supports this.
</p></dd>
</dl>

<hr>
<a name="checkbox"></a>
<div class="header">
<p>
Next: <a href="#checklist" accesskey="n" rel="next">checklist</a>, Previous: <a href="#toggle" accesskey="p" rel="prev">toggle</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-checkbox-Widget"></a>
<h3 class="section">5.12 The <code>checkbox</code> Widget</h3>
<a name="index-checkbox-widget"></a>

<p>This widget has two possible states, &lsquo;<samp>selected</samp>&rsquo; and
&lsquo;<samp>unselected</samp>&rsquo;, which corresponds to a <code>t</code> or <code>nil</code> value.
</p>
<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (checkbox [<var>keyword</var> <var>argument</var>]...)
</pre></div>

<hr>
<a name="checklist"></a>
<div class="header">
<p>
Next: <a href="#editable_002dlist" accesskey="n" rel="next">editable-list</a>, Previous: <a href="#checkbox" accesskey="p" rel="prev">checkbox</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-checklist-Widget"></a>
<h3 class="section">5.13 The <code>checklist</code> Widget</h3>
<a name="index-checklist-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (checklist [<var>keyword</var> <var>argument</var>]...  <var>type</var> ... )
</pre></div>

<p>The <var>type</var> arguments represent each checklist item.  The widget&rsquo;s
value will be a list containing the values of all checked <var>type</var>
arguments.  The checklist widget will match a list whose elements all
match at least one of the specified <var>type</var> arguments.
</p>
<p>The following extra properties are recognized:
</p>
<dl compact="compact">
<dd><a name="index-entry_002dformat-keyword-1"></a>
</dd>
<dt><code>:entry-format</code></dt>
<dd><p>This string will be inserted for each entry in the list.
The following &lsquo;<samp>%</samp>&rsquo; escapes are available:
</p><dl compact="compact">
<dt>&lsquo;<samp>%v</samp>&rsquo;</dt>
<dd><p>Replaced with the buffer representation of the <var>type</var> widget.
</p></dd>
<dt>&lsquo;<samp>%b</samp>&rsquo;</dt>
<dd><p>Replace with the checkbox.
</p></dd>
<dt>&lsquo;<samp>%%</samp>&rsquo;</dt>
<dd><p>Insert a literal &lsquo;<samp>%</samp>&rsquo;.
</p></dd>
</dl>

<a name="index-greedy-keyword"></a>
</dd>
<dt><code>:greedy</code></dt>
<dd><p>Usually a checklist will only match if the items are in the exact
sequence given in the specification.  By setting <code>:greedy</code> to
non-<code>nil</code>, it will allow the items to come in any sequence.
However, if you extract the value they will be in the sequence given
in the checklist, i.e., the original sequence is forgotten.
</p>
<a name="index-button_002dargs-keyword-1"></a>
</dd>
<dt><code>:button-args</code></dt>
<dd><p>A list of keywords to pass to the checkboxes.  Useful for setting,
e.g., the &lsquo;<samp>:help-echo</samp>&rsquo; for each checkbox.
</p>
<a name="index-buttons-keyword-1"></a>
</dd>
<dt><code>:buttons</code></dt>
<dd><p>The widgets representing the checkboxes.
</p>
<a name="index-children-keyword-2"></a>
</dd>
<dt><code>:children</code></dt>
<dd><p>The widgets representing each type.
</p>
<a name="index-args-keyword-2"></a>
</dd>
<dt><code>:args</code></dt>
<dd><p>The list of types.
</p></dd>
</dl>

<hr>
<a name="editable_002dlist"></a>
<div class="header">
<p>
Next: <a href="#group" accesskey="n" rel="next">group</a>, Previous: <a href="#checklist" accesskey="p" rel="prev">checklist</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-editable_002dlist-Widget"></a>
<h3 class="section">5.14 The <code>editable-list</code> Widget</h3>
<a name="index-editable_002dlist-widget"></a>

<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (editable-list [<var>keyword</var> <var>argument</var>]... <var>type</var>)
</pre></div>

<p>The value is a list, where each member represents one widget of type
<var>type</var>.
</p>
<p>The following extra properties are recognized:
</p>
<dl compact="compact">
<dd><a name="index-entry_002dformat-keyword-2"></a>
</dd>
<dt><code>:entry-format</code></dt>
<dd><p>This string will be inserted for each entry in the list.
The following &lsquo;<samp>%</samp>&rsquo; escapes are available:
</p><dl compact="compact">
<dt>&lsquo;<samp>%v</samp>&rsquo;</dt>
<dd><p>This will be replaced with the buffer representation of the <var>type</var>
widget.
</p></dd>
<dt>&lsquo;<samp>%i</samp>&rsquo;</dt>
<dd><p>Insert the <b>[INS]</b> button.
</p></dd>
<dt>&lsquo;<samp>%d</samp>&rsquo;</dt>
<dd><p>Insert the <b>[DEL]</b> button.
</p></dd>
<dt>&lsquo;<samp>%%</samp>&rsquo;</dt>
<dd><p>Insert a literal &lsquo;<samp>%</samp>&rsquo;.
</p></dd>
</dl>

<a name="index-insert_002dbutton_002dargs-keyword"></a>
</dd>
<dt><code>:insert-button-args</code></dt>
<dd><p>A list of keyword arguments to pass to the insert buttons.
</p>
<a name="index-delete_002dbutton_002dargs-keyword"></a>
</dd>
<dt><code>:delete-button-args</code></dt>
<dd><p>A list of keyword arguments to pass to the delete buttons.
</p>
<a name="index-append_002dbutton_002dargs-keyword"></a>
</dd>
<dt><code>:append-button-args</code></dt>
<dd><p>A list of keyword arguments to pass to the trailing insert button.
</p>
<a name="index-buttons-keyword-2"></a>
</dd>
<dt><code>:buttons</code></dt>
<dd><p>The widgets representing the insert and delete buttons.
</p>
<a name="index-children-keyword-3"></a>
</dd>
<dt><code>:children</code></dt>
<dd><p>The widgets representing the elements of the list.
</p>
<a name="index-args-keyword-3"></a>
</dd>
<dt><code>:args</code></dt>
<dd><p>List whose <small>CAR</small> is the type of the list elements.
</p></dd>
</dl>

<hr>
<a name="group"></a>
<div class="header">
<p>
Previous: <a href="#editable_002dlist" accesskey="p" rel="prev">editable-list</a>, Up: <a href="#Basic-Types" accesskey="u" rel="up">Basic Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-group-Widget"></a>
<h3 class="section">5.15 The <code>group</code> Widget</h3>
<a name="index-group-widget"></a>

<p>This widget simply group other widgets together.
</p>
<p>Syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (group [<var>keyword</var> <var>argument</var>]... <var>type</var>...)
</pre></div>

<p>The value is a list, with one member for each <var>type</var>.
</p>
<hr>
<a name="Sexp-Types"></a>
<div class="header">
<p>
Next: <a href="#Widget-Properties" accesskey="n" rel="next">Widget Properties</a>, Previous: <a href="#Basic-Types" accesskey="p" rel="prev">Basic Types</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Sexp-Types-1"></a>
<h2 class="chapter">6 Sexp Types</h2>
<a name="index-sexp-types"></a>

<p>A number of widgets for editing <em>s-expressions</em> (Lisp types), sexp
for short, are also available.  These basically fall in several
categories described in this section.
</p>
<table class="menu" border="0" cellspacing="0">
<tr><td align="left" valign="top">&bull; <a href="#constants" accesskey="1">constants</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#generic" accesskey="2">generic</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#atoms" accesskey="3">atoms</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
<tr><td align="left" valign="top">&bull; <a href="#composite" accesskey="4">composite</a>:</td><td>&nbsp;&nbsp;</td><td align="left" valign="top">
</td></tr>
</table>

<hr>
<a name="constants"></a>
<div class="header">
<p>
Next: <a href="#generic" accesskey="n" rel="next">generic</a>, Up: <a href="#Sexp-Types" accesskey="u" rel="up">Sexp Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="The-Constant-Widgets"></a>
<h3 class="section">6.1 The Constant Widgets</h3>
<a name="index-constant-widgets"></a>

<p>The <code>const</code> widget can contain any Lisp expression, but the user is
prohibited from editing it, which is mainly useful as a component of one
of the composite widgets.
</p>
<p>The syntax for the <code>const</code> widget is:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (const [<var>keyword</var> <var>argument</var>]...  [ <var>value</var> ])
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property and can be any s-expression.
</p>
<dl>
<dt><a name="index-const"></a>Widget: <strong>const</strong></dt>
<dd><p>This will display any valid s-expression in an immutable part of the
buffer.
</p></dd></dl>

<p>There are two variations of the <code>const</code> widget, namely
<code>variable-item</code> and <code>function-item</code>.  These should contain a
symbol with a variable or function binding.  The major difference from
the <code>const</code> widget is that they will allow the user to see the
variable or function documentation for the symbol.
</p>
<dl>
<dt><a name="index-variable_002ditem"></a>Widget: <strong>variable-item</strong></dt>
<dd><p>An immutable symbol that is bound as a variable.
</p></dd></dl>

<dl>
<dt><a name="index-function_002ditem"></a>Widget: <strong>function-item</strong></dt>
<dd><p>An immutable symbol that is bound as a function.
</p></dd></dl>

<hr>
<a name="generic"></a>
<div class="header">
<p>
Next: <a href="#atoms" accesskey="n" rel="next">atoms</a>, Previous: <a href="#constants" accesskey="p" rel="prev">constants</a>, Up: <a href="#Sexp-Types" accesskey="u" rel="up">Sexp Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Generic-Sexp-Widget"></a>
<h3 class="section">6.2 Generic Sexp Widget</h3>
<a name="index-generic-sexp-widget"></a>

<p>The <code>sexp</code> widget can contain any Lisp expression, and allows the
user to edit it inline in the buffer.
</p>
<p>The syntax for the <code>sexp</code> widget is:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (sexp [<var>keyword</var> <var>argument</var>]...  [ <var>value</var> ])
</pre></div>

<dl>
<dt><a name="index-sexp"></a>Widget: <strong>sexp</strong></dt>
<dd><p>This will allow you to edit any valid s-expression in an editable buffer
field.
</p>
<p>The <code>sexp</code> widget takes the same keyword arguments as the
<code>editable-field</code> widget.  See <a href="#editable_002dfield">editable-field</a>.
</p></dd></dl>

<hr>
<a name="atoms"></a>
<div class="header">
<p>
Next: <a href="#composite" accesskey="n" rel="next">composite</a>, Previous: <a href="#generic" accesskey="p" rel="prev">generic</a>, Up: <a href="#Sexp-Types" accesskey="u" rel="up">Sexp Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Atomic-Sexp-Widgets"></a>
<h3 class="section">6.3 Atomic Sexp Widgets</h3>
<a name="index-atomic-sexp-widget"></a>

<p>The atoms are s-expressions that do not consist of other s-expressions.
For example, a string, a file name, or a symbol are atoms, while a list
is a composite type.  You can edit the value of an atom with the
following widgets.
</p>
<p>The syntax for all the atoms are:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (<var>construct</var> [<var>keyword</var> <var>argument</var>]...  [ <var>value</var> ])
</pre></div>

<p>The <var>value</var>, if present, is used to initialize the <code>:value</code>
property and must be an expression of the same type as the widget.
That is, the string widget can only be initialized with a string.
</p>
<p>All the atom widgets take the same keyword arguments as the
<code>editable-field</code> widget.  See <a href="#editable_002dfield">editable-field</a>.
</p>
<dl>
<dt><a name="index-string"></a>Widget: <strong>string</strong></dt>
<dd><p>Allows you to edit a string in an editable field.
</p></dd></dl>

<dl>
<dt><a name="index-regexp"></a>Widget: <strong>regexp</strong></dt>
<dd><p>Allows you to edit a regular expression in an editable field.
</p></dd></dl>

<dl>
<dt><a name="index-character"></a>Widget: <strong>character</strong></dt>
<dd><p>Allows you to enter a character in an editable field.
</p></dd></dl>

<dl>
<dt><a name="index-file"></a>Widget: <strong>file</strong></dt>
<dd><p>Allows you to edit a file name in an editable field.
</p>
<p>Keywords:
</p><dl compact="compact">
<dd><a name="index-must_002dmatch-keyword"></a>
</dd>
<dt><code>:must-match</code></dt>
<dd><p>If this is set to non-<code>nil</code>, only existing file names will be
allowed in the minibuffer.
</p></dd>
</dl>
</dd></dl>

<dl>
<dt><a name="index-directory"></a>Widget: <strong>directory</strong></dt>
<dd><p>Allows you to edit a directory name in an editable field.
Similar to the <code>file</code> widget.
</p></dd></dl>

<dl>
<dt><a name="index-symbol"></a>Widget: <strong>symbol</strong></dt>
<dd><p>Allows you to edit a Lisp symbol in an editable field.
</p></dd></dl>

<dl>
<dt><a name="index-function"></a>Widget: <strong>function</strong></dt>
<dd><p>Allows you to edit a lambda expression, or a function name with completion.
</p></dd></dl>

<dl>
<dt><a name="index-variable"></a>Widget: <strong>variable</strong></dt>
<dd><p>Allows you to edit a variable name, with completion.
</p></dd></dl>

<dl>
<dt><a name="index-integer"></a>Widget: <strong>integer</strong></dt>
<dd><p>Allows you to edit an integer in an editable field.
</p></dd></dl>

<dl>
<dt><a name="index-number"></a>Widget: <strong>number</strong></dt>
<dd><p>Allows you to edit a number in an editable field.
</p></dd></dl>

<dl>
<dt><a name="index-boolean"></a>Widget: <strong>boolean</strong></dt>
<dd><p>Allows you to edit a boolean.  In Lisp this means a variable which is
either <code>nil</code> meaning false, or non-<code>nil</code> meaning true.
</p></dd></dl>


<hr>
<a name="composite"></a>
<div class="header">
<p>
Previous: <a href="#atoms" accesskey="p" rel="prev">atoms</a>, Up: <a href="#Sexp-Types" accesskey="u" rel="up">Sexp Types</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Composite-Sexp-Widgets"></a>
<h3 class="section">6.4 Composite Sexp Widgets</h3>
<a name="index-composite-sexp-widgets"></a>

<p>The syntax for the composite widget construct is:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (<var>construct</var> [<var>keyword</var> <var>argument</var>]...  <var>component</var>...)
</pre></div>

<p>where each <var>component</var> must be a widget type.  Each component widget
will be displayed in the buffer, and will be editable by the user.
</p>
<dl>
<dt><a name="index-cons"></a>Widget: <strong>cons</strong></dt>
<dd><p>The value of a <code>cons</code> widget must be a cons-cell whose <small>CAR</small>
and <small>CDR</small> have two specified types.  It uses this syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (cons [<var>keyword</var> <var>argument</var>]...  <var>car-type</var> <var>cdr-type</var>)
</pre></div>
</dd></dl>

<dl>
<dt><a name="index-choice"></a>Widget: <strong>choice</strong></dt>
<dd><p>The value matched by a <code>choice</code> widget must have one of a fixed
set of types.  The widget&rsquo;s syntax is as follows:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (choice [<var>keyword</var> <var>argument</var>]...  <var>type</var> ... )
</pre></div>

<p>The value of a <code>choice</code> widget can be anything that matches any of the
<var>types</var>.
</p></dd></dl>

<dl>
<dt><a name="index-list"></a>Widget: <strong>list</strong></dt>
<dd><p>The value of a <code>list</code> widget must be a list whose element types
match the specified component types:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (list [<var>keyword</var> <var>argument</var>]...  <var>component-type</var>...)
</pre></div>

<p>Thus, <code>(list string number)</code> matches lists of two elements,
the first being a string and the second being a number.
</p></dd></dl>

<dl>
<dt><a name="index-vector"></a>Widget: <strong>vector</strong></dt>
<dd><p>The <code>vector</code> widget is like the <code>list</code> widget but matches
vectors instead of lists.  Thus, <code>(vector string number)</code> matches
vectors of two elements, the first being a string and the second being
a number.
</p></dd></dl>

<p>The above suffice for specifying fixed size lists and vectors.  To get
variable length lists and vectors, you can use a <code>choice</code>,
<code>set</code>, or <code>repeat</code> widget together with the <code>:inline</code>
keyword.  If any component of a composite widget has the
<code>:inline</code> keyword set, its value must be a list which will then
be spliced into the composite.  For example, to specify a list whose
first element must be a file name, and whose remaining elements should
either be the symbol <code>t</code> or two strings (file names), you can use
the following widget specification:
</p>
<div class="example">
<pre class="example">(list file
      (choice (const t)
              (list :inline t
                    :value (&quot;foo&quot; &quot;bar&quot;)
                    string string)))
</pre></div>

<p>The value of a widget of this type will either have the form
<code>(file t)</code> or <code>(file <var>string</var> <var>string</var>)</code>.
</p>
<p>This concept of <code>:inline</code> may be hard to understand.  It was
certainly hard to implement, so instead of confusing you more by
trying to explain it here, I&rsquo;ll just suggest you meditate over it for
a while.
</p>
<dl>
<dt><a name="index-set"></a>Widget: <strong>set</strong></dt>
<dd><p>Specifies a type whose values are the lists whose elements all belong
to a given set.  The order of elements of the list is not significant.
Here&rsquo;s the syntax:
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (set [<var>keyword</var> <var>argument</var>]...  <var>permitted-element</var> ... )
</pre></div>

<p>Use <code>const</code> to specify each permitted element, like this:
<code>(set (const a) (const b))</code>.
</p></dd></dl>

<dl>
<dt><a name="index-repeat"></a>Widget: <strong>repeat</strong></dt>
<dd><p>Specifies a list of any number of elements that fit a certain type.
</p>
<div class="example">
<pre class="example"><var>type</var> ::= (repeat [<var>keyword</var> <var>argument</var>]...  <var>type</var>)
</pre></div>
</dd></dl>

<hr>
<a name="Widget-Properties"></a>
<div class="header">
<p>
Next: <a href="#Defining-New-Widgets" accesskey="n" rel="next">Defining New Widgets</a>, Previous: <a href="#Sexp-Types" accesskey="p" rel="prev">Sexp Types</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Properties"></a>
<h2 class="chapter">7 Properties</h2>
<a name="index-properties-of-widgets"></a>
<a name="index-widget-properties"></a>

<p>You can examine or set the value of a widget by using the widget object
that was returned by <code>widget-create</code>.
</p>
<dl>
<dt><a name="index-widget_002dvalue"></a>Function: <strong>widget-value</strong> <em>widget</em></dt>
<dd><p>Return the current value contained in <var>widget</var>.
It is an error to call this function on an uninitialized widget.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dvalue_002dset"></a>Function: <strong>widget-value-set</strong> <em>widget value</em></dt>
<dd><p>Set the value contained in <var>widget</var> to <var>value</var>.
It is an error to call this function with an invalid <var>value</var>.
</p></dd></dl>

<p><strong>Important:</strong> You <em>must</em> call <code>widget-setup</code> after
modifying the value of a widget before the user is allowed to edit the
widget again.  It is enough to call <code>widget-setup</code> once if you
modify multiple widgets.  This is currently only necessary if the widget
contains an editing field, but may be necessary for other widgets in the
future.
</p>
<p>If your application needs to associate some information with the widget
objects, for example a reference to the item being edited, it can be
done with <code>widget-put</code> and <code>widget-get</code>.  The property names
must begin with a &lsquo;<samp>:</samp>&rsquo;.
</p>
<dl>
<dt><a name="index-widget_002dput"></a>Function: <strong>widget-put</strong> <em>widget property value</em></dt>
<dd><p>In <var>widget</var> set <var>property</var> to <var>value</var>.
<var>property</var> should be a symbol, while <var>value</var> can be anything.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dget"></a>Function: <strong>widget-get</strong> <em>widget property</em></dt>
<dd><p>In <var>widget</var> return the value for <var>property</var>.
<var>property</var> should be a symbol, the value is what was last set by
<code>widget-put</code> for <var>property</var>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dmember"></a>Function: <strong>widget-member</strong> <em>widget property</em></dt>
<dd><p>Non-<code>nil</code> if <var>widget</var> has a value (even <code>nil</code>) for
property <var>property</var>.
</p></dd></dl>

<p>Occasionally it can be useful to know which kind of widget you have,
i.e., the name of the widget type you gave when the widget was created.
</p>
<dl>
<dt><a name="index-widget_002dtype"></a>Function: <strong>widget-type</strong> <em>widget</em></dt>
<dd><p>Return the name of <var>widget</var>, a symbol.
</p></dd></dl>

<a name="index-active-widget"></a>
<a name="index-inactive-widget"></a>
<a name="index-activate-a-widget"></a>
<a name="index-deactivate-a-widget"></a>
<p>Widgets can be in two states: active, which means they are modifiable by
the user, or inactive, which means they cannot be modified by the user.
You can query or set the state with the following code:
</p>
<div class="lisp">
<pre class="lisp">;; Examine if <var>widget</var> is active or not.
(if (widget-apply <var>widget</var> :active)
    (message &quot;Widget is active.&quot;)
  (message &quot;Widget is inactive.&quot;)

;; Make <var>widget</var> inactive.
(widget-apply <var>widget</var> :deactivate)

;; Make <var>widget</var> active.
(widget-apply <var>widget</var> :activate)
</pre></div>

<p>A widget is inactive if it, or any of its ancestors (found by
following the <code>:parent</code> link), have been deactivated.  To make sure
a widget is really active, you must therefore activate both it and
all its ancestors.
</p>
<div class="lisp">
<pre class="lisp">(while widget
  (widget-apply widget :activate)
  (setq widget (widget-get widget :parent)))
</pre></div>

<p>You can check if a widget has been made inactive by examining the value
of the <code>:inactive</code> keyword.  If this is non-<code>nil</code>, the widget itself
has been deactivated.  This is different from using the <code>:active</code>
keyword, in that the latter tells you if the widget <strong>or</strong> any of
its ancestors have been deactivated.  Do not attempt to set the
<code>:inactive</code> keyword directly.  Use the <code>:activate</code>
<code>:deactivate</code> keywords instead.
</p>

<hr>
<a name="Defining-New-Widgets"></a>
<div class="header">
<p>
Next: <a href="#Widget-Browser" accesskey="n" rel="next">Widget Browser</a>, Previous: <a href="#Widget-Properties" accesskey="p" rel="prev">Widget Properties</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Defining-New-Widgets-1"></a>
<h2 class="chapter">8 Defining New Widgets</h2>
<a name="index-new-widgets"></a>
<a name="index-defining-new-widgets"></a>

<p>You can define specialized widgets with <code>define-widget</code>.  It allows
you to create a shorthand for more complex widgets, including specifying
component widgets and new default values for the keyword
arguments.
</p>
<dl>
<dt><a name="index-define_002dwidget"></a>Function: <strong>define-widget</strong> <em>name class doc &amp;rest args</em></dt>
<dd><p>Define a new widget type named <var>name</var> from <code>class</code>.
</p>
<p><var>name</var> and class should both be symbols, <code>class</code> should be one
of the existing widget types.
</p>
<p>The third argument <var>doc</var> is a documentation string for the widget.
</p>
<p>After the new widget has been defined, the following two calls will
create identical widgets:
</p>
<ul>
<li> <div class="lisp">
<pre class="lisp">(widget-create <var>name</var>)
</pre></div>

</li><li> <div class="lisp">
<pre class="lisp">(apply widget-create <var>class</var> <var>args</var>)
</pre></div>
</li></ul>

</dd></dl>

<p>Using <code>define-widget</code> just stores the definition of the widget type
in the <code>widget-type</code> property of <var>name</var>, which is what
<code>widget-create</code> uses.
</p>
<p>If you only want to specify defaults for keywords with no complex
conversions, you can use <code>identity</code> as your conversion function.
</p>
<p>The following additional keyword arguments are useful when defining new
widgets:
</p><dl compact="compact">
<dd><a name="index-convert_002dwidget-keyword"></a>
</dd>
<dt><code>:convert-widget</code></dt>
<dd><p>Function to convert a widget type before creating a widget of that
type.  It takes a widget type as an argument, and returns the converted
widget type.  When a widget is created, this function is called for the
widget type and all the widget&rsquo;s parent types, most derived first.
</p>
<p>The following predefined functions can be used here:
</p>
<dl>
<dt><a name="index-widget_002dtypes_002dconvert_002dwidget"></a>Function: <strong>widget-types-convert-widget</strong> <em>widget</em></dt>
<dd><p>Convert <code>:args</code> as widget types in <var>widget</var>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dvalue_002dconvert_002dwidget"></a>Function: <strong>widget-value-convert-widget</strong> <em>widget</em></dt>
<dd><p>Initialize <code>:value</code> from <code>:args</code> in <var>widget</var>.
</p></dd></dl>

<a name="index-copy-keyword"></a>
</dd>
<dt><code>:copy</code></dt>
<dd><p>Function to deep copy a widget type.  It takes a shallow copy of the
widget type as an argument (made by <code>copy-sequence</code>), and returns a
deep copy.  The purpose of this is to avoid having different instances
of combined widgets share nested attributes.
</p>
<p>The following predefined functions can be used here:
</p>
<dl>
<dt><a name="index-widget_002dtypes_002dcopy"></a>Function: <strong>widget-types-copy</strong> <em>widget</em></dt>
<dd><p>Copy <code>:args</code> as widget types in <var>widget</var>.
</p></dd></dl>

<a name="index-value_002dto_002dinternal-keyword"></a>
</dd>
<dt><code>:value-to-internal</code></dt>
<dd><p>Function to convert the value to the internal format.  The function
takes two arguments, a widget and an external value, and returns the
internal value.  The function is called on the present <code>:value</code>
when the widget is created, and on any value set later with
<code>widget-value-set</code>.
</p>
<a name="index-value_002dto_002dexternal-keyword"></a>
</dd>
<dt><code>:value-to-external</code></dt>
<dd><p>Function to convert the value to the external format.  The function
takes two arguments, a widget and an internal value, and returns the
external value.  The function is called on the present <code>:value</code>
when the widget is created, and on any value set later with
<code>widget-value-set</code>.
</p>
<a name="index-create-keyword"></a>
</dd>
<dt><code>:create</code></dt>
<dd><p>Function to create a widget from scratch.  The function takes one
argument, a widget type, and creates a widget of that type, inserts it
in the buffer, and returns a widget object.
</p>
<a name="index-delete-keyword"></a>
</dd>
<dt><code>:delete</code></dt>
<dd><p>Function to delete a widget.  The function takes one argument, a widget,
and should remove all traces of the widget from the buffer.
</p>
<p>The default value is:
</p>
<dl>
<dt><a name="index-widget_002ddefault_002ddelete"></a>Function: <strong>widget-default-delete</strong> <em>widget</em></dt>
<dd><p>Remove <var>widget</var> from the buffer.
Delete all <code>:children</code> and <code>:buttons</code> in <var>widget</var>.
</p></dd></dl>

<p>In most cases you should not change this value, but instead use
<code>:value-delete</code> to make any additional cleanup.
</p>
<a name="index-value_002dcreate-keyword"></a>
</dd>
<dt><code>:value-create</code></dt>
<dd><p>Function to expand the &lsquo;<samp>%v</samp>&rsquo; escape in the format string.  It will
be called with the widget as its argument and should insert a
representation of the widget&rsquo;s value in the buffer.
</p>
<p>Nested widgets should be listed in <code>:children</code> or <code>:buttons</code>
to make sure they are automatically deleted.
</p>
<a name="index-value_002ddelete-keyword"></a>
</dd>
<dt><code>:value-delete</code></dt>
<dd><p>Should remove the representation of the widget&rsquo;s value from the buffer.
It will be called with the widget as its argument.  It doesn&rsquo;t have to
remove the text, but it should release markers and delete nested widgets
if these are not listed in <code>:children</code> or <code>:buttons</code>.
</p>
<a name="index-value_002dget-keyword"></a>
</dd>
<dt><code>:value-get</code></dt>
<dd><p>Function to extract the value of a widget, as it is displayed in the
buffer.
</p>
<p>The following predefined function can be used here:
</p>
<dl>
<dt><a name="index-widget_002dvalue_002dvalue_002dget"></a>Function: <strong>widget-value-value-get</strong> <em>widget</em></dt>
<dd><p>Return the <code>:value</code> property of <var>widget</var>.
</p></dd></dl>

<a name="index-format_002dhandler-keyword"></a>
</dd>
<dt><code>:format-handler</code></dt>
<dd><p>Function to handle unknown &lsquo;<samp>%</samp>&rsquo; escapes in the format string.  It
will be called with the widget and the character that follows the
&lsquo;<samp>%</samp>&rsquo; as arguments.  You can set this to allow your widget to handle
non-standard escapes.
</p>
<a name="index-widget_002ddefault_002dformat_002dhandler"></a>
<p>You should end up calling <code>widget-default-format-handler</code> to handle
unknown escape sequences, which will handle the &lsquo;<samp>%h</samp>&rsquo; and any future
escape sequences, as well as give an error for unknown escapes.
</p>
<a name="index-action-keyword"></a>
</dd>
<dt><code>:action</code></dt>
<dd><p>Function to handle user initiated events.  By default, <code>:notify</code>
the parent.
</p>
<p>The following predefined function can be used here:
</p>
<dl>
<dt><a name="index-widget_002dparent_002daction"></a>Function: <strong>widget-parent-action</strong> <em>widget &amp;optional event</em></dt>
<dd><p>Tell <code>:parent</code> of <var>widget</var> to handle the <code>:action</code>.
Optional <var>event</var> is the event that triggered the action.
</p></dd></dl>

<a name="index-prompt_002dvalue-keyword"></a>
</dd>
<dt><code>:prompt-value</code></dt>
<dd><p>Function to prompt for a value in the minibuffer.  The function should
take four arguments, <var>widget</var>, <var>prompt</var>, <var>value</var>, and
<var>unbound</var> and should return a value for widget entered by the user.
<var>prompt</var> is the prompt to use.  <var>value</var> is the default value to
use, unless <var>unbound</var> is non-<code>nil</code>, in which case there is no default
value.  The function should read the value using the method most natural
for this widget, and does not have to check that it matches.
</p></dd>
</dl>

<p>If you want to define a new widget from scratch, use the <code>default</code>
widget as its base.
</p>
<dl>
<dt><a name="index-default"></a>Widget: <strong>default</strong></dt>
<dd><p>Widget used as a base for other widgets.
</p>
<p>It provides most of the functionality that is referred to as &ldquo;by
default&rdquo; in this text.
</p></dd></dl>

<hr>
<a name="Widget-Browser"></a>
<div class="header">
<p>
Next: <a href="#Widget-Minor-Mode" accesskey="n" rel="next">Widget Minor Mode</a>, Previous: <a href="#Defining-New-Widgets" accesskey="p" rel="prev">Defining New Widgets</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Widget-Browser-1"></a>
<h2 class="chapter">9 Widget Browser</h2>
<a name="index-widget-browser"></a>

<p>There is a separate package to browse widgets.  This is intended to help
programmers who want to examine the content of a widget.  The browser
shows the value of each keyword, but uses links for certain keywords
such as &lsquo;<samp>:parent</samp>&rsquo;, which avoids printing cyclic structures.
</p>
<dl>
<dt><a name="index-widget_002dbrowse"></a>Command: <strong>widget-browse</strong> <em><var>widget</var></em></dt>
<dd><p>Create a widget browser for <var>widget</var>.
When called interactively, prompt for <var>widget</var>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dbrowse_002dother_002dwindow"></a>Command: <strong>widget-browse-other-window</strong> <em><var>widget</var></em></dt>
<dd><p>Create a widget browser for <var>widget</var> and show it in another window.
When called interactively, prompt for <var>widget</var>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dbrowse_002dat"></a>Command: <strong>widget-browse-at</strong> <em><var>pos</var></em></dt>
<dd><p>Create a widget browser for the widget at <var>pos</var>.
When called interactively, use the position of point.
</p></dd></dl>

<hr>
<a name="Widget-Minor-Mode"></a>
<div class="header">
<p>
Next: <a href="#Utilities" accesskey="n" rel="next">Utilities</a>, Previous: <a href="#Widget-Browser" accesskey="p" rel="prev">Widget Browser</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Widget-Minor-Mode-1"></a>
<h2 class="chapter">10 Widget Minor Mode</h2>
<a name="index-widget-minor-mode"></a>

<p>There is a minor mode for manipulating widgets in major modes that
don&rsquo;t provide any support for widgets themselves.  This is mostly
intended to be useful for programmers doing experiments.
</p>
<dl>
<dt><a name="index-widget_002dminor_002dmode"></a>Command: <strong>widget-minor-mode</strong></dt>
<dd><p>Toggle minor mode for traversing widgets.
With arg, turn widget mode on if and only if arg is positive.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dminor_002dmode_002dkeymap"></a>Variable: <strong>widget-minor-mode-keymap</strong></dt>
<dd><p>Keymap used in <code>widget-minor-mode</code>.
</p></dd></dl>

<hr>
<a name="Utilities"></a>
<div class="header">
<p>
Next: <a href="#Widget-Wishlist" accesskey="n" rel="next">Widget Wishlist</a>, Previous: <a href="#Widget-Minor-Mode" accesskey="p" rel="prev">Widget Minor Mode</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Utilities-1"></a>
<h2 class="chapter">11 Utilities</h2>
<a name="index-utility-functions-for-widgets"></a>

<dl>
<dt><a name="index-widget_002dprompt_002dvalue"></a>Function: <strong>widget-prompt-value</strong> <em>widget prompt [ value unbound ]</em></dt>
<dd><p>Prompt for a value matching <var>widget</var>, using <var>prompt</var>.
The current value is assumed to be <var>value</var>, unless <var>unbound</var> is
non-<code>nil</code>.
</p></dd></dl>

<dl>
<dt><a name="index-widget_002dget_002dsibling"></a>Function: <strong>widget-get-sibling</strong> <em>widget</em></dt>
<dd><p>Get the item which <var>widget</var> is assumed to toggle.
This is only meaningful for radio buttons or checkboxes in a list.
</p></dd></dl>

<hr>
<a name="Widget-Wishlist"></a>
<div class="header">
<p>
Next: <a href="#GNU-Free-Documentation-License" accesskey="n" rel="next">GNU Free Documentation License</a>, Previous: <a href="#Utilities" accesskey="p" rel="prev">Utilities</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Wishlist"></a>
<h2 class="chapter">12 Wishlist</h2>
<a name="index-todo"></a>

<ul>
<li> It should be possible to add or remove items from a list with <kbd>C-k</kbd>
and <kbd>C-o</kbd> (suggested by <small>RMS</small>).

</li><li> The &lsquo;<samp>[INS]</samp>&rsquo; and &lsquo;<samp>[DEL]</samp>&rsquo; buttons should be replaced by a single
dash (&lsquo;<samp>-</samp>&rsquo;).  The dash should be a button that, when invoked, asks
whether you want to add or delete an item (<small>RMS</small> wanted to git rid of
the ugly buttons, the dash is my idea).

</li><li> The <code>menu-choice</code> tag should be prettier, something like the abbreviated
menus in Open Look.

</li><li> Finish <code>:tab-order</code>.

</li><li> Make indentation work with glyphs and proportional fonts.

</li><li> Add commands to show overview of object and class hierarchies to the
browser.

</li><li> Find a way to disable mouse highlight for inactive widgets.

</li><li> Find a way to make glyphs look inactive.

</li><li> Add <code>property-list</code> widget.

</li><li> Add <code>association-list</code> widget.

</li><li> Add <code>key-binding</code> widget.

</li><li> Add <code>widget</code> widget for editing widget specifications.

</li><li> Find clean way to implement variable length list.
See <code>TeX-printer-list</code> for an explanation.

</li><li> <kbd>C-h</kbd> in <code>widget-prompt-value</code> should give type specific help.

</li><li> Add a <code>mailto</code> widget.
</li></ul>

<hr>
<a name="GNU-Free-Documentation-License"></a>
<div class="header">
<p>
Next: <a href="#Index" accesskey="n" rel="next">Index</a>, Previous: <a href="#Widget-Wishlist" accesskey="p" rel="prev">Widget Wishlist</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="GNU-Free-Documentation-License-1"></a>
<h2 class="appendix">Appendix A GNU Free Documentation License</h2>
<div align="center">Version 1.3, 3 November 2008
</div>

<div class="display">
<pre class="display">Copyright &copy; 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
<a href="http://fsf.org/">http://fsf.org/</a>

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
</pre></div>

<ol>
<li> PREAMBLE

<p>The purpose of this License is to make a manual, textbook, or other
functional and useful document <em>free</em> in the sense of freedom: to
assure everyone the effective freedom to copy and redistribute it,
with or without modifying it, either commercially or noncommercially.
Secondarily, this License preserves for the author and publisher a way
to get credit for their work, while not being considered responsible
for modifications made by others.
</p>
<p>This License is a kind of &ldquo;copyleft&rdquo;, which means that derivative
works of the document must themselves be free in the same sense.  It
complements the GNU General Public License, which is a copyleft
license designed for free software.
</p>
<p>We have designed this License in order to use it for manuals for free
software, because free software needs free documentation: a free
program should come with manuals providing the same freedoms that the
software does.  But this License is not limited to software manuals;
it can be used for any textual work, regardless of subject matter or
whether it is published as a printed book.  We recommend this License
principally for works whose purpose is instruction or reference.
</p>
</li><li> APPLICABILITY AND DEFINITIONS

<p>This License applies to any manual or other work, in any medium, that
contains a notice placed by the copyright holder saying it can be
distributed under the terms of this License.  Such a notice grants a
world-wide, royalty-free license, unlimited in duration, to use that
work under the conditions stated herein.  The &ldquo;Document&rdquo;, below,
refers to any such manual or work.  Any member of the public is a
licensee, and is addressed as &ldquo;you&rdquo;.  You accept the license if you
copy, modify or distribute the work in a way requiring permission
under copyright law.
</p>
<p>A &ldquo;Modified Version&rdquo; of the Document means any work containing the
Document or a portion of it, either copied verbatim, or with
modifications and/or translated into another language.
</p>
<p>A &ldquo;Secondary Section&rdquo; is a named appendix or a front-matter section
of the Document that deals exclusively with the relationship of the
publishers or authors of the Document to the Document&rsquo;s overall
subject (or to related matters) and contains nothing that could fall
directly within that overall subject.  (Thus, if the Document is in
part a textbook of mathematics, a Secondary Section may not explain
any mathematics.)  The relationship could be a matter of historical
connection with the subject or with related matters, or of legal,
commercial, philosophical, ethical or political position regarding
them.
</p>
<p>The &ldquo;Invariant Sections&rdquo; are certain Secondary Sections whose titles
are designated, as being those of Invariant Sections, in the notice
that says that the Document is released under this License.  If a
section does not fit the above definition of Secondary then it is not
allowed to be designated as Invariant.  The Document may contain zero
Invariant Sections.  If the Document does not identify any Invariant
Sections then there are none.
</p>
<p>The &ldquo;Cover Texts&rdquo; are certain short passages of text that are listed,
as Front-Cover Texts or Back-Cover Texts, in the notice that says that
the Document is released under this License.  A Front-Cover Text may
be at most 5 words, and a Back-Cover Text may be at most 25 words.
</p>
<p>A &ldquo;Transparent&rdquo; copy of the Document means a machine-readable copy,
represented in a format whose specification is available to the
general public, that is suitable for revising the document
straightforwardly with generic text editors or (for images composed of
pixels) generic paint programs or (for drawings) some widely available
drawing editor, and that is suitable for input to text formatters or
for automatic translation to a variety of formats suitable for input
to text formatters.  A copy made in an otherwise Transparent file
format whose markup, or absence of markup, has been arranged to thwart
or discourage subsequent modification by readers is not Transparent.
An image format is not Transparent if used for any substantial amount
of text.  A copy that is not &ldquo;Transparent&rdquo; is called &ldquo;Opaque&rdquo;.
</p>
<p>Examples of suitable formats for Transparent copies include plain
ASCII without markup, Texinfo input format, LaTeX input
format, SGML or XML using a publicly available
DTD, and standard-conforming simple HTML,
PostScript or PDF designed for human modification.  Examples
of transparent image formats include PNG, XCF and
JPG.  Opaque formats include proprietary formats that can be
read and edited only by proprietary word processors, SGML or
XML for which the DTD and/or processing tools are
not generally available, and the machine-generated HTML,
PostScript or PDF produced by some word processors for
output purposes only.
</p>
<p>The &ldquo;Title Page&rdquo; means, for a printed book, the title page itself,
plus such following pages as are needed to hold, legibly, the material
this License requires to appear in the title page.  For works in
formats which do not have any title page as such, &ldquo;Title Page&rdquo; means
the text near the most prominent appearance of the work&rsquo;s title,
preceding the beginning of the body of the text.
</p>
<p>The &ldquo;publisher&rdquo; means any person or entity that distributes copies
of the Document to the public.
</p>
<p>A section &ldquo;Entitled XYZ&rdquo; means a named subunit of the Document whose
title either is precisely XYZ or contains XYZ in parentheses following
text that translates XYZ in another language.  (Here XYZ stands for a
specific section name mentioned below, such as &ldquo;Acknowledgements&rdquo;,
&ldquo;Dedications&rdquo;, &ldquo;Endorsements&rdquo;, or &ldquo;History&rdquo;.)  To &ldquo;Preserve the Title&rdquo;
of such a section when you modify the Document means that it remains a
section &ldquo;Entitled XYZ&rdquo; according to this definition.
</p>
<p>The Document may include Warranty Disclaimers next to the notice which
states that this License applies to the Document.  These Warranty
Disclaimers are considered to be included by reference in this
License, but only as regards disclaiming warranties: any other
implication that these Warranty Disclaimers may have is void and has
no effect on the meaning of this License.
</p>
</li><li> VERBATIM COPYING

<p>You may copy and distribute the Document in any medium, either
commercially or noncommercially, provided that this License, the
copyright notices, and the license notice saying this License applies
to the Document are reproduced in all copies, and that you add no other
conditions whatsoever to those of this License.  You may not use
technical measures to obstruct or control the reading or further
copying of the copies you make or distribute.  However, you may accept
compensation in exchange for copies.  If you distribute a large enough
number of copies you must also follow the conditions in section 3.
</p>
<p>You may also lend copies, under the same conditions stated above, and
you may publicly display copies.
</p>
</li><li> COPYING IN QUANTITY

<p>If you publish printed copies (or copies in media that commonly have
printed covers) of the Document, numbering more than 100, and the
Document&rsquo;s license notice requires Cover Texts, you must enclose the
copies in covers that carry, clearly and legibly, all these Cover
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
the back cover.  Both covers must also clearly and legibly identify
you as the publisher of these copies.  The front cover must present
the full title with all words of the title equally prominent and
visible.  You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated
as verbatim copying in other respects.
</p>
<p>If the required texts for either cover are too voluminous to fit
legibly, you should put the first ones listed (as many as fit
reasonably) on the actual cover, and continue the rest onto adjacent
pages.
</p>
<p>If you publish or distribute Opaque copies of the Document numbering
more than 100, you must either include a machine-readable Transparent
copy along with each Opaque copy, or state in or with each Opaque copy
a computer-network location from which the general network-using
public has access to download using public-standard network protocols
a complete Transparent copy of the Document, free of added material.
If you use the latter option, you must take reasonably prudent steps,
when you begin distribution of Opaque copies in quantity, to ensure
that this Transparent copy will remain thus accessible at the stated
location until at least one year after the last time you distribute an
Opaque copy (directly or through your agents or retailers) of that
edition to the public.
</p>
<p>It is requested, but not required, that you contact the authors of the
Document well before redistributing any large number of copies, to give
them a chance to provide you with an updated version of the Document.
</p>
</li><li> MODIFICATIONS

<p>You may copy and distribute a Modified Version of the Document under
the conditions of sections 2 and 3 above, provided that you release
the Modified Version under precisely this License, with the Modified
Version filling the role of the Document, thus licensing distribution
and modification of the Modified Version to whoever possesses a copy
of it.  In addition, you must do these things in the Modified Version:
</p>
<ol>
<li> Use in the Title Page (and on the covers, if any) a title distinct
from that of the Document, and from those of previous versions
(which should, if there were any, be listed in the History section
of the Document).  You may use the same title as a previous version
if the original publisher of that version gives permission.

</li><li> List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified
Version, together with at least five of the principal authors of the
Document (all of its principal authors, if it has fewer than five),
unless they release you from this requirement.

</li><li> State on the Title page the name of the publisher of the
Modified Version, as the publisher.

</li><li> Preserve all the copyright notices of the Document.

</li><li> Add an appropriate copyright notice for your modifications
adjacent to the other copyright notices.

</li><li> Include, immediately after the copyright notices, a license notice
giving the public permission to use the Modified Version under the
terms of this License, in the form shown in the Addendum below.

</li><li> Preserve in that license notice the full lists of Invariant Sections
and required Cover Texts given in the Document&rsquo;s license notice.

</li><li> Include an unaltered copy of this License.

</li><li> Preserve the section Entitled &ldquo;History&rdquo;, Preserve its Title, and add
to it an item stating at least the title, year, new authors, and
publisher of the Modified Version as given on the Title Page.  If
there is no section Entitled &ldquo;History&rdquo; in the Document, create one
stating the title, year, authors, and publisher of the Document as
given on its Title Page, then add an item describing the Modified
Version as stated in the previous sentence.

</li><li> Preserve the network location, if any, given in the Document for
public access to a Transparent copy of the Document, and likewise
the network locations given in the Document for previous versions
it was based on.  These may be placed in the &ldquo;History&rdquo; section.
You may omit a network location for a work that was published at
least four years before the Document itself, or if the original
publisher of the version it refers to gives permission.

</li><li> For any section Entitled &ldquo;Acknowledgements&rdquo; or &ldquo;Dedications&rdquo;, Preserve
the Title of the section, and preserve in the section all the
substance and tone of each of the contributor acknowledgements and/or
dedications given therein.

</li><li> Preserve all the Invariant Sections of the Document,
unaltered in their text and in their titles.  Section numbers
or the equivalent are not considered part of the section titles.

</li><li> Delete any section Entitled &ldquo;Endorsements&rdquo;.  Such a section
may not be included in the Modified Version.

</li><li> Do not retitle any existing section to be Entitled &ldquo;Endorsements&rdquo; or
to conflict in title with any Invariant Section.

</li><li> Preserve any Warranty Disclaimers.
</li></ol>

<p>If the Modified Version includes new front-matter sections or
appendices that qualify as Secondary Sections and contain no material
copied from the Document, you may at your option designate some or all
of these sections as invariant.  To do this, add their titles to the
list of Invariant Sections in the Modified Version&rsquo;s license notice.
These titles must be distinct from any other section titles.
</p>
<p>You may add a section Entitled &ldquo;Endorsements&rdquo;, provided it contains
nothing but endorsements of your Modified Version by various
parties&mdash;for example, statements of peer review or that the text has
been approved by an organization as the authoritative definition of a
standard.
</p>
<p>You may add a passage of up to five words as a Front-Cover Text, and a
passage of up to 25 words as a Back-Cover Text, to the end of the list
of Cover Texts in the Modified Version.  Only one passage of
Front-Cover Text and one of Back-Cover Text may be added by (or
through arrangements made by) any one entity.  If the Document already
includes a cover text for the same cover, previously added by you or
by arrangement made by the same entity you are acting on behalf of,
you may not add another; but you may replace the old one, on explicit
permission from the previous publisher that added the old one.
</p>
<p>The author(s) and publisher(s) of the Document do not by this License
give permission to use their names for publicity for or to assert or
imply endorsement of any Modified Version.
</p>
</li><li> COMBINING DOCUMENTS

<p>You may combine the Document with other documents released under this
License, under the terms defined in section 4 above for modified
versions, provided that you include in the combination all of the
Invariant Sections of all of the original documents, unmodified, and
list them all as Invariant Sections of your combined work in its
license notice, and that you preserve all their Warranty Disclaimers.
</p>
<p>The combined work need only contain one copy of this License, and
multiple identical Invariant Sections may be replaced with a single
copy.  If there are multiple Invariant Sections with the same name but
different contents, make the title of each such section unique by
adding at the end of it, in parentheses, the name of the original
author or publisher of that section if known, or else a unique number.
Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.
</p>
<p>In the combination, you must combine any sections Entitled &ldquo;History&rdquo;
in the various original documents, forming one section Entitled
&ldquo;History&rdquo;; likewise combine any sections Entitled &ldquo;Acknowledgements&rdquo;,
and any sections Entitled &ldquo;Dedications&rdquo;.  You must delete all
sections Entitled &ldquo;Endorsements.&rdquo;
</p>
</li><li> COLLECTIONS OF DOCUMENTS

<p>You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this
License in the various documents with a single copy that is included in
the collection, provided that you follow the rules of this License for
verbatim copying of each of the documents in all other respects.
</p>
<p>You may extract a single document from such a collection, and distribute
it individually under this License, provided you insert a copy of this
License into the extracted document, and follow this License in all
other respects regarding verbatim copying of that document.
</p>
</li><li> AGGREGATION WITH INDEPENDENT WORKS

<p>A compilation of the Document or its derivatives with other separate
and independent documents or works, in or on a volume of a storage or
distribution medium, is called an &ldquo;aggregate&rdquo; if the copyright
resulting from the compilation is not used to limit the legal rights
of the compilation&rsquo;s users beyond what the individual works permit.
When the Document is included in an aggregate, this License does not
apply to the other works in the aggregate which are not themselves
derivative works of the Document.
</p>
<p>If the Cover Text requirement of section 3 is applicable to these
copies of the Document, then if the Document is less than one half of
the entire aggregate, the Document&rsquo;s Cover Texts may be placed on
covers that bracket the Document within the aggregate, or the
electronic equivalent of covers if the Document is in electronic form.
Otherwise they must appear on printed covers that bracket the whole
aggregate.
</p>
</li><li> TRANSLATION

<p>Translation is considered a kind of modification, so you may
distribute translations of the Document under the terms of section 4.
Replacing Invariant Sections with translations requires special
permission from their copyright holders, but you may include
translations of some or all Invariant Sections in addition to the
original versions of these Invariant Sections.  You may include a
translation of this License, and all the license notices in the
Document, and any Warranty Disclaimers, provided that you also include
the original English version of this License and the original versions
of those notices and disclaimers.  In case of a disagreement between
the translation and the original version of this License or a notice
or disclaimer, the original version will prevail.
</p>
<p>If a section in the Document is Entitled &ldquo;Acknowledgements&rdquo;,
&ldquo;Dedications&rdquo;, or &ldquo;History&rdquo;, the requirement (section 4) to Preserve
its Title (section 1) will typically require changing the actual
title.
</p>
</li><li> TERMINATION

<p>You may not copy, modify, sublicense, or distribute the Document
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense, or distribute it is void, and
will automatically terminate your rights under this License.
</p>
<p>However, if you cease all violation of this License, then your license
from a particular copyright holder is reinstated (a) provisionally,
unless and until the copyright holder explicitly and finally
terminates your license, and (b) permanently, if the copyright holder
fails to notify you of the violation by some reasonable means prior to
60 days after the cessation.
</p>
<p>Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.
</p>
<p>Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, receipt of a copy of some or all of the same material does
not give you any rights to use it.
</p>
</li><li> FUTURE REVISIONS OF THIS LICENSE

<p>The Free Software Foundation may publish new, revised versions
of the GNU Free Documentation License from time to time.  Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.  See
<a href="http://www.gnu.org/copyleft/">http://www.gnu.org/copyleft/</a>.
</p>
<p>Each version of the License is given a distinguishing version number.
If the Document specifies that a particular numbered version of this
License &ldquo;or any later version&rdquo; applies to it, you have the option of
following the terms and conditions either of that specified version or
of any later version that has been published (not as a draft) by the
Free Software Foundation.  If the Document does not specify a version
number of this License, you may choose any version ever published (not
as a draft) by the Free Software Foundation.  If the Document
specifies that a proxy can decide which future versions of this
License can be used, that proxy&rsquo;s public statement of acceptance of a
version permanently authorizes you to choose that version for the
Document.
</p>
</li><li> RELICENSING

<p>&ldquo;Massive Multiauthor Collaboration Site&rdquo; (or &ldquo;MMC Site&rdquo;) means any
World Wide Web server that publishes copyrightable works and also
provides prominent facilities for anybody to edit those works.  A
public wiki that anybody can edit is an example of such a server.  A
&ldquo;Massive Multiauthor Collaboration&rdquo; (or &ldquo;MMC&rdquo;) contained in the
site means any set of copyrightable works thus published on the MMC
site.
</p>
<p>&ldquo;CC-BY-SA&rdquo; means the Creative Commons Attribution-Share Alike 3.0
license published by Creative Commons Corporation, a not-for-profit
corporation with a principal place of business in San Francisco,
California, as well as future copyleft versions of that license
published by that same organization.
</p>
<p>&ldquo;Incorporate&rdquo; means to publish or republish a Document, in whole or
in part, as part of another Document.
</p>
<p>An MMC is &ldquo;eligible for relicensing&rdquo; if it is licensed under this
License, and if all works that were first published under this License
somewhere other than this MMC, and subsequently incorporated in whole
or in part into the MMC, (1) had no cover texts or invariant sections,
and (2) were thus incorporated prior to November 1, 2008.
</p>
<p>The operator of an MMC Site may republish an MMC contained in the site
under CC-BY-SA on the same site at any time before August 1, 2009,
provided the MMC is eligible for relicensing.
</p>
</li></ol>

<a name="ADDENDUM_003a-How-to-use-this-License-for-your-documents"></a>
<h3 class="heading">ADDENDUM: How to use this License for your documents</h3>

<p>To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and
license notices just after the title page:
</p>
<div class="smallexample">
<pre class="smallexample">  Copyright (C)  <var>year</var>  <var>your name</var>.
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.3
  or any later version published by the Free Software Foundation;
  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
  Texts.  A copy of the license is included in the section entitled ``GNU
  Free Documentation License''.
</pre></div>

<p>If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the &ldquo;with&hellip;Texts.&rdquo; line with this:
</p>
<div class="smallexample">
<pre class="smallexample">    with the Invariant Sections being <var>list their titles</var>, with
    the Front-Cover Texts being <var>list</var>, and with the Back-Cover Texts
    being <var>list</var>.
</pre></div>

<p>If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.
</p>
<p>If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License,
to permit their use in free software.
</p>

<hr>
<a name="Index"></a>
<div class="header">
<p>
Previous: <a href="#GNU-Free-Documentation-License" accesskey="p" rel="prev">GNU Free Documentation License</a>, Up: <a href="#Top" accesskey="u" rel="up">Top</a> &nbsp; [<a href="#SEC_Contents" title="Table of contents" rel="contents">Contents</a>][<a href="#Index" title="Index" rel="index">Index</a>]</p>
</div>
<a name="Index-1"></a>
<h2 class="unnumbered">Index</h2>

<p>This is an alphabetical listing of all concepts, functions, commands,
variables, and widgets described in this manual.
</p><table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Index_cp_letter-A"><b>A</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-B"><b>B</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-C"><b>C</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-D"><b>D</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-E"><b>E</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-F"><b>F</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-G"><b>G</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-H"><b>H</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-I"><b>I</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-K"><b>K</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-L"><b>L</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-M"><b>M</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-N"><b>N</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-O"><b>O</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-P"><b>P</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-R"><b>R</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-S"><b>S</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-T"><b>T</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-U"><b>U</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-V"><b>V</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-W"><b>W</b></a>
 &nbsp; 
</td></tr></table>
<table class="index-cp" border="0">
<tr><td></td><th align="left">Index Entry</th><td>&nbsp;</td><th align="left"> Section</th></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-A">A</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-action-keyword"><code>action<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-activate-a-widget">activate a widget</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-active-widget">active widget</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-append_002dbutton_002dargs-keyword"><code>append-button-args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-args-keyword"><code>args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#menu_002dchoice">menu-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-args-keyword-1"><code>args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-args-keyword-2"><code>args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-args-keyword-3"><code>args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-atomic-sexp-widget">atomic sexp widget</a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-B">B</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-basic-widgets">basic widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Introduction">Introduction</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-boolean"><code>boolean</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-browse_002durl_002dbrowser_002dfunction_002c-and-url_002dlink-widget"><code>browse-url-browser-function<span class="roman">, and <code>url-link</code> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#url_002dlink">url-link</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-button-widgets">button widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-button_002dargs-keyword"><code>button-args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-button_002dargs-keyword-1"><code>button-args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-button_002dface-keyword"><code>button-face<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-button_002dprefix-keyword"><code>button-prefix<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-button_002dsuffix-keyword"><code>button-suffix<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-buttons-keyword"><code>buttons<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-buttons-keyword-1"><code>buttons<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-buttons-keyword-2"><code>buttons<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-C">C</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-case_002dfold-keyword"><code>case-fold<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#menu_002dchoice">menu-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-character"><code>character</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-checkbox-widget"><code>checkbox<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checkbox">checkbox</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-checklist-widget"><code>checklist<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-children-keyword"><code>children<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#menu_002dchoice">menu-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-children-keyword-1"><code>children<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-children-keyword-2"><code>children<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-children-keyword-3"><code>children<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-choice"><code>choice</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-choice-keyword"><code>choice<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#menu_002dchoice">menu-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-choice-keyword-1"><code>choice<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-choice_002ditem-widget"><code>choice-item<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#choice_002ditem">choice-item</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-composite-sexp-widgets">composite sexp widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-cons"><code>cons</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-const"><code>const</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#constants">constants</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-constant-widgets">constant widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#constants">constants</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-convert_002dwidget-keyword"><code>convert-widget<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-copy-keyword"><code>copy<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-create-keyword"><code>create<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-D">D</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-deactivate-a-widget">deactivate a widget</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-default"><code>default</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-define_002dwidget"><code>define-widget</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-defining-new-widgets">defining new widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-delete-keyword"><code>delete<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-delete_002dbutton_002dargs-keyword"><code>delete-button-args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-directory"><code>directory</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-doc-keyword"><code>doc<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-E">E</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-editable_002dfield-widget"><code>editable-field<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-editable_002dlist-widget"><code>editable-list<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-embedded-buttons">embedded buttons</a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-entry_002dformat-keyword"><code>entry-format<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-entry_002dformat-keyword-1"><code>entry-format<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-entry_002dformat-keyword-2"><code>entry-format<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-example-of-using-widgets">example of using widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Programming-Example">Programming Example</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-extra_002doffset-keyword"><code>extra-offset<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-F">F</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-file"><code>file</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-follow_002dlink-keyword"><code>follow-link<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-format-keyword"><code>format<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-format_002dhandler-keyword"><code>format-handler<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-function"><code>function</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-function_002ditem"><code>function-item</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#constants">constants</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-G">G</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-generic-sexp-widget">generic sexp widget</a>:</td><td>&nbsp;</td><td valign="top"><a href="#generic">generic</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-greedy-keyword"><code>greedy<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#checklist">checklist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-group-widget"><code>group<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#group">group</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-H">H</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-help_002decho-keyword"><code>help-echo<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-I">I</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-inactive-widget">inactive widget</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-indent-keyword"><code>indent<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-info_002dlink-widget"><code>info-link<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#info_002dlink">info-link</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-insert_002dbutton_002dargs-keyword"><code>insert-button-args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dlist">editable-list</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-integer"><code>integer</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-item-widget"><code>item<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#item">item</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-K">K</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-keymap-keyword"><code>keymap<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-keyword-arguments">keyword arguments</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-L">L</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-link-widget"><code>link<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#link">link</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-list"><code>list</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-M">M</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-match-keyword"><code>match<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-menu_002dchoice-widget"><code>menu-choice<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#menu_002dchoice">menu-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-menu_002dtag-keyword"><code>menu-tag<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-menu_002dtag_002dget-keyword"><code>menu-tag-get<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-mouse_002d2-_0028on-button-widgets_0029"><code>mouse-2 <span class="roman">(on button widgets</span>)</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-must_002dmatch-keyword"><code>must-match<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-N">N</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-new-widgets">new widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-notify-keyword"><code>notify<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-number"><code>number</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-O">O</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-off_002dglyph-keyword"><code>off-glyph<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#toggle">toggle</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-offset-keyword"><code>offset<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-on_002dglyph-keyword"><code>on-glyph<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#toggle">toggle</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-option-field-tag">option field tag</a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-P">P</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-parent-keyword"><code>parent<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-prompt_002dvalue-keyword"><code>prompt-value<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-properties-of-widgets">properties of widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-push_002dbutton-widget"><code>push-button<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#push_002dbutton">push-button</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-R">R</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-radio_002dbutton_002dchoice-widget"><code>radio-button-choice<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-regexp"><code>regexp</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-repeat"><code>repeat</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-S">S</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-secret-keyword"><code>secret<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-set"><code>set</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-sexp"><code>sexp</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#generic">generic</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-sexp-types">sexp types</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Sexp-Types">Sexp Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-sibling_002dargs-keyword"><code>sibling-args<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-size-keyword"><code>size<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-string"><code>string</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-symbol"><code>symbol</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-T">T</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-tab_002dorder-keyword"><code>tab-order<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-tag-keyword"><code>tag<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-tag_002dglyph-keyword"><code>tag-glyph<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-text-widget"><code>text<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#text">text</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-todo">todo</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Wishlist">Widget Wishlist</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-toggle-widget"><code>toggle<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#toggle">toggle</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-U">U</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-url_002dlink-widget"><code>url-link<span class="roman"> widget</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#url_002dlink">url-link</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-utility-functions-for-widgets">utility functions for widgets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Utilities">Utilities</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-V">V</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-valid_002dregexp-keyword"><code>valid-regexp<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-validate-keyword"><code>validate<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value-keyword"><code>value<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value_002dcreate-keyword"><code>value-create<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value_002ddelete-keyword"><code>value-delete<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value_002dface-keyword"><code>value-face<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value_002dget-keyword"><code>value-get<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value_002dto_002dexternal-keyword"><code>value-to-external<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-value_002dto_002dinternal-keyword"><code>value-to-internal<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-variable"><code>variable</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#atoms">atoms</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-variable_002ditem"><code>variable-item</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#constants">constants</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-vector"><code>vector</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#composite">composite</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-void-keyword"><code>void<span class="roman"> keyword</span></code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#menu_002dchoice">menu-choice</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
<tr><th><a name="Index_cp_letter-W">W</a></th><td></td><td></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget-browser">widget browser</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Browser">Widget Browser</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget-buttons">widget buttons</a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget-library_002c-why-use-it">widget library, why use it</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Introduction">Introduction</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget-minor-mode">widget minor mode</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Minor-Mode">Widget Minor Mode</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget-properties">widget properties</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbackward"><code>widget-backward</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbrowse"><code>widget-browse</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Browser">Widget Browser</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbrowse_002dat"><code>widget-browse-at</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Browser">Widget Browser</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbrowse_002dother_002dwindow"><code>widget-browse-other-window</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Browser">Widget Browser</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dclick"><code>widget-button-click</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dclick-1"><code>widget-button-click</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dface"><code>widget-button-face</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dprefix"><code>widget-button-prefix</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dpress"><code>widget-button-press</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dpress-1"><code>widget-button-press</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dbutton_002dsuffix"><code>widget-button-suffix</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dchildren_002dvalidate"><code>widget-children-validate</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dcreate"><code>widget-create</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002ddefault_002ddelete"><code>widget-default-delete</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002ddefault_002dformat_002dhandler"><code>widget-default-format-handler</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002ddelete"><code>widget-delete</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dfield_002dface"><code>widget-field-face</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dfield_002dkeymap"><code>widget-field-keymap</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#editable_002dfield">editable-field</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dforward"><code>widget-forward</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dget"><code>widget-get</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dget_002dsibling"><code>widget-get-sibling</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Utilities">Utilities</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dglobal_002dmap"><code>widget-global-map</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dglyph_002ddirectory"><code>widget-glyph-directory</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dglyph_002denable"><code>widget-glyph-enable</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Basic-Types">Basic Types</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dinsert"><code>widget-insert</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dkeymap"><code>widget-keymap</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dlink_002dprefix"><code>widget-link-prefix</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#link">link</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dlink_002dsuffix"><code>widget-link-suffix</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#link">link</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dmember"><code>widget-member</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dminor_002dmode"><code>widget-minor-mode</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Minor-Mode">Widget Minor Mode</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dminor_002dmode_002dkeymap"><code>widget-minor-mode-keymap</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Minor-Mode">Widget Minor Mode</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dmouse_002dface"><code>widget-mouse-face</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#User-Interface">User Interface</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dparent_002daction"><code>widget-parent-action</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dprompt_002dvalue"><code>widget-prompt-value</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Utilities">Utilities</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dpush_002dbutton_002dprefix"><code>widget-push-button-prefix</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#push_002dbutton">push-button</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dpush_002dbutton_002dsuffix"><code>widget-push-button-suffix</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#push_002dbutton">push-button</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dput"><code>widget-put</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dradio_002dadd_002ditem"><code>widget-radio-add-item</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#radio_002dbutton_002dchoice">radio-button-choice</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dsetup"><code>widget-setup</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Setting-Up-the-Buffer">Setting Up the Buffer</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dtext_002dkeymap"><code>widget-text-keymap</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#text">text</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dtype"><code>widget-type</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dtypes_002dconvert_002dwidget"><code>widget-types-convert-widget</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dtypes_002dcopy"><code>widget-types-copy</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dvalue"><code>widget-value</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dvalue_002dconvert_002dwidget"><code>widget-value-convert-widget</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dvalue_002dset"><code>widget-value-set</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Widget-Properties">Widget Properties</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widget_002dvalue_002dvalue_002dget"><code>widget-value-value-get</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#Defining-New-Widgets">Defining New Widgets</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widgets_002c-basic-types">widgets, basic types</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Introduction">Introduction</a></td></tr>
<tr><td></td><td valign="top"><a href="#index-widgets_002c-programming-example">widgets, programming example</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Programming-Example">Programming Example</a></td></tr>
<tr><td colspan="4"> <hr></td></tr>
</table>
<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Index_cp_letter-A"><b>A</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-B"><b>B</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-C"><b>C</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-D"><b>D</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-E"><b>E</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-F"><b>F</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-G"><b>G</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-H"><b>H</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-I"><b>I</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-K"><b>K</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-L"><b>L</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-M"><b>M</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-N"><b>N</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-O"><b>O</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-P"><b>P</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-R"><b>R</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-S"><b>S</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-T"><b>T</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-U"><b>U</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-V"><b>V</b></a>
 &nbsp; 
<a class="summary-letter" href="#Index_cp_letter-W"><b>W</b></a>
 &nbsp; 
</td></tr></table>

<hr>



</body>
</html>
